{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["algorithm","c++/python","datastructur","introduct","leetcode练习","python","templat","trick","一些题目的编程模板","介绍","内容","双语言","数据结构题","的一些小技巧和细节","目录","算法题","认真记录leetcode刷题过程,c++"],"实用文档/":["docker","home","page","practic","实用文档"],"算法题/0-DataStructure/0-Vector/加一.html":["!=","#","(digits[i]","(int","*","+","++digits[i];","+=","//","0","0;","1","1):","1);","1,","123。","1;","3","9","9)","9:","=",">",">=","[0]","[1,2,3]","[1]","ans(n","ans;","ans[0]","c++","class","cn.com/problems/plu","def","digit","digits)","digits.size();","digits:","digits;","digits[i]","digits[j]","i)","int","len(digits)","list[int])","list[int]:","n","one/","plusone(self,","plusone(vector&","public:","python","range(n","return","solut","solution:","vector","{","}","};","中所有的元素均为","之外，这个整数不会以零开头。","代码","加一","技巧总结","描述","数组中每个元素只存储单个数字。你可以假设除了整数","数组所表示的非负整数，在该数的基础上加一。最高位数字存放在数组的首位，","数组的逆序遍历","整数","本题目的结果只和结尾有几个9有关","相关概念","组成的","给定一个由","解释：输入数组表示数字","输入：digit","输出：[1,2,4]","链接：https://leetcod","非空","题目：66.加一"],"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":["*min_element(nums.begin(),nums.end());","+=","//","0","0;","1","1个元素加一等价于1个元素减一。另外python和c++的","3",":","=","=>",">","[1,2,3]","[2,3,3]","[3,4,3]","[4,4,4]","[first,last).","array","c++","class","cn.com/problems/minimum","def","element","elements/","equal","for(auto","int","int:","iter","list[int])","min(nums)","min_element()","min_num","minmoves(self,","minmoves(vector&","minvalu","minvalue;","move","n","num","nums)","nums){","nums:","point","public:","python","rang","re","res;","return","smallest","solut","solution:","valu","{","}","};","。返回让数组所有元素相等的最小操作次数。","个元素增加","代码","只需要3次操作（注意每次操作会增加两个元素的值）：","技巧总结","描述","数组最大最小值的获取方法。","方法需要掌握。","最小元素求取","最小操作次数使数组元素相等","本题采用逆向思维，n","的整数数组，每次操作将会使","相关概念","给你一个长度为","解释：","输入：num","输出：3","链接：https://leetcod","题目：453.最小操作次数使数组元素相等"],"算法题/0-DataStructure/0-Vector/求众数II.html":["#","$","$\\frac{1}{2}$","$k$","$n$，则我们可以把数组分为两部分，一部分为相同的","$x$，另一部分为$","$x$，数组的总长度为","$y","$y$","$y$，则此时","&","&&","(auto","(vote1","(vote2","+=","/","//","//如果三个元素均不相同，则相互抵消1次","//如果该元素为第一个元素，则计数加1","//如果该元素为第二个元素，则计数加1","0","0)","0,","0:","0;","1","3","3)","3:",":",";","=","==",">","?","[]","\\frac{n","\\frac{n}{2}$，但是按照我们之前的推理","\\le","an","ans.append(element1)","ans.append(element2)","ans.push_back(element1);","ans.push_back(element2);","ans;","c++","class","cn.com/problems/major","cnt1","cnt1++;","cnt1,","cnt2","cnt2++;","def","element","element1","element1)","element1,","element1:","element2","element2)","element2:","elif","else:","ii/","int","k}{2}$","len(nums)","list[int])","list[int]:","majorityelement(self,","majorityelement(vector&","n","n/3","num","num;","nums)","nums.size()","nums:","o(1)的算法解决此问题。","o(n)、空间复杂度为","public:","python","return","solut","solution:","vector","vote1","vote1++;","vote1,","vote2","vote2++;","x}{2}","{","}","};","个元素","代码","哈希表","因该满足","如果三个元素均不相同，则相互抵消1次","如果该元素为第一个元素，则计数加1","如果该元素为第二个元素，则计数加1","对个不同的元素配对，此时我们假设还存在另外一个次数大于总数一半的元素","应当满足","技巧总结","描述","摩尔投票法：摩尔投票法的核心思想为对拼消耗。首先我们考虑最基本的摩尔投票问题，比如找出一组数字序列中出现次数大于总数","朴素统计算法：","检测元素出现的次数是否满足要求","次的元素。难度：middle进阶：尝试设计时间复杂度为","求众数ii","的数字（并且假设这个数字一定存在）。依次从序列里选择两个不相同的数字删除掉（或称为「抵消」），最后剩下一个数字或几个相同的数字，就是出现次数大于总数一半的那个元素。假设我们当前数组中存在次数大于总数一半的元素为","的整数数组，找出其中所有出现超过","相关概念","给定一个大小为","选择第一个元素","选择第二个元素","链接：https://leetcod","题目：","，二者自相矛盾。"],"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":["val","val，这就叫中序。","val，这就叫后序遍历","中序遍历是从左孩子节点返回以后，才开始处理父节点的","二叉树","二叉树的遍历主要有三种：","二叉树遍历的代码有非常强的格式性，因此很好写","先序遍历一旦遇到一个节点，首先对该节点的","后序遍历是从右孩子节点返回以后，（处理完所有孩子节点以后），才开始处理父节点的","左右根","左根右","所以节点的顺序是","根左右","节点处理的顺序是","节点的处理顺序是","进行处理，这就叫先序。","（1）先(根)序遍历（根左右）","（2）中(根)序遍历（左根右）","（3）后(根)序遍历（左右根）"],"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":["*/","+=","/*","//","0;","1;","559.",":","=",">children){","_children)","_children;","_val)","_val,","_val;","bfs(node*","bfs(root);","child","children","children){","children;","class","definit","depth){","dfs(child,depth+1);","dfs(node*","dfs(root,0);","for(auto","for(int","if(!root)","int","max(depth+1,res);","maxdepth(node*","n","node","node()","node(int","node.","n叉树的最大深度","private:","public:","qu.push(child);","qu.push(root);","qu.size();","qu;","queue","re","res;","return","return;","root","root)","root){","root,","solut","val","val;","vector","void","while(!qu.empty()){","width","{","{}","}","};","叉树的最大深度","叉树输入按层序遍历序列化表示，每组子节点由空值分隔（请参见示例）。","叉树，找到其最大深度。","最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。","简单","给定一个"],"算法题/0-DataStructure/2-Graph/图论刷题.html":["\"bits/stdc++.h\"","#includ","&edges)","(!adjacencylist.size())","(!qu.empty())","(int","(uffactor[node]","+","//","//有入度、出度表","//有向图","04.01.","0;","1);","1306.","1;","207.","210.","547.","684","684.","785.","841.","997.","=","==",">","adjacencylist)","adjacencylist;","b","bf","bfs()","class","cout","df","dfs(int","dfs，还有拓扑排序、最短路、最小生成树，有时也会用并查集进行分类，还要注意节点的入度出度等特征。","edge)","edges）：两个顶点之间存在多条边相连接。","findredundantconnection(vector>","g(adjacencylist);","g.printallnode();","graph","https://zhuanlan.zhihu.com/p/93647900/","ii","iii","indeg;","int","leetcod","loop）：一个顶点到这个顶点自身的边","m_adjacencylist","m_adjacencylist.size();","m_adjacencylist;","merg","namespac","node","node)","node;","numofnod","printallnode()","private:","public:","qu.front();","qu.pop();","qu;","queue","res;","return","solut","std;","uffactor.resize(edges.size()","uffactor;","uffactor[node]","uffactor[uffind(edge[0])]","uffind(edge[1]);","uffind(int","uffind(uffactor[node]);","ufunion(vector","us","vector","vector>","visited.resize(numofnode);","visited;","visited[node]","void","{","}","但与此同时，自环边和平行边，会加大算法设计的难度，而且在很多情况下，我们真正关心的问题，其实是和自环边","冗余连接","判断二分图","和","图的问题基本就是","图论刷题","城市到","城市可能有不止一条路，可能有三条路，在这种情况下，平行边就非常有意义。","基本概念","平行边是无关的。","并查集:","或","找到小镇的法官","拓扑排序","搜索（dfs、bfs）","无论是自环边还是平行边，在很多时候也是有意义的。","最典型的，如：对于交通运输来说，从","最典型的，如：要考察一张图的连通性，那么自环边和平行边都不会改变这张图的连通性。","概述","省份数量","节点间通路","课程表","路径压缩","跳跃游戏","遍历","钥匙和房间","面试题","（1）自环边（self","（2）平行边（parallel"],"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":["#","$","$dequ","$deque[0]$）添加至列表","$deque[0]=$","$i","$num","$nums[j]$","$o(2n)$","$o(n)","$中最多同时存储","$内所有","$占用","$占用$","$尾部；","$长度；线性遍历","$，结果列表","$：","$；每个元素最多仅入队和出队一次，因此单调队列","&nums,","(!nums.size())","(int","+","0","0$","0:","0;","1","1]","1]$；","1]:","=","==",">","[0,","[1","[]","[],","\\geq","\\in","algorithm/58rgqe/","class","cn.com/leetbook/read/illustr","cn.com/problems/slid","collections.deque()","def","dequ","deque.popleft()","deque[","deque[0]","i,","int","int)","j","k","k)","k),","k,","k:","k]$，右边界范围$","k，请找出所有滑动窗口里的最大值。","len(nums)","list[int],","list[int]:","maximum/","maxslidingwindow(self,","maxslidingwindow(vector","n","num","nums:","nums[i","o(k)$：","o(n)","public:","qu;","range(k):","range(n)):","re","res,","res.append(deque[0])","return","solut","solution:","vector","window","zip(range(1","{","{};","“形成窗口后”","“未形成窗口”","。","且","两个阶段拆分到两个循环里实现。代码虽变长，但减少了冗余的判断操作。","个元素（即窗口大小）。","中对应的","为数组","保持","假如你在饭堂打饭时，有个人人高马大，急匆匆跑过来，看排了这么一长串队，心中急躁，从队列最后的一个人开始，看见好欺负的就赶走，自己站着，直到干不过的就停下，这就是单调双端队列。","其中","初始化：","删除","双端队列","可以将","和","和滑动窗口的大小","复杂度分析：","将","左边界范围","时间复杂度","未形成窗口","添加至","滑动窗口的最大值","滑动窗口：","空间复杂度$","给定一个数组","若","若已形成窗口（即","被删除元素$nums[i−1]$","返回值：","返回结果列表","递减","重要概念：单调队列","链接：https://leetcod","队列中元素之间的关系具有单调性","队首元素","队首和队尾都可以进行出队操作，只有队尾可以进行入队操作。","题解：https://leetcod","）：将窗口最大值（即队首元素","，数组长度","：则队首元素出队；","；"],"算法题/0-DataStructure/3-Queue/队列的最大值.html":["&&value>dq.back()){","1","1;","1]","=","==",">","__init__(self):","algorithm/e2t5ug/","class","cn.com/leetbook/read/illustr","def","dequ","dq.front();","dq.pop_back();","dq.pop_front();","dq.push_back(value);","dq;","else{","https://leetcod","if(!qu.size())","if(qu.front()==dq.front()){","if(qu.size()){","import","int","int)","int:","max_valu","max_value()","max_value(self)","max_value、push_back","maxqueu","maxqueue()","maxqueue:","none:","o(1)。","pop_front","pop_front()","private:","public:","push_back(int","push_back(self,","qu.front();","qu.pop();","qu.push(value);","qu;","queue","queue.deque()","queue.queue()","re","res;","return","self.dequ","self.deque.popleft()","self.deque[","self.deque[0]","self.deque[0]:","self.queu","self.queue.empty():","self.queue.get()","self.queue.put(value)","val","value)","value:","void","while(!dq.empty()","{","}","};","和","得到队列里的最大值，要求函数","的均摊时间复杂度都是","若队列为空，pop_front","请定义一个队列并实现函数","队列的最大值","限制：","需要返回"],"算法题/0-DataStructure/4-ListNode/链表.html":["!=","#","$o(n)$","$o(n)$：","'node')","'node':","(cur","*cur","*pre","*re","//","1.","2.","3.","=","==",">",">next",">next,",">next;",">next];",">random",">random];",">val);","class","copyrandomlist(node*","copyrandomlist(self,","cur","cur)","cur);","cur,","cur.next","cur.next.next","cur.next.random","cur.next:","cur.random.next","cur.random:","cur:","cur;","def","dic","dic.get(cur.next)","dic.get(cur.random)","dic[cur]","dic[cur].next","dic[cur].random","dic[head]","head","head)","head,","head.next","head:","head;","if(cur","if(head","listnod","listnode)","listnode*","listnode:","map","map;","map[cur","map[cur]","map[head];","new","next","node(cur","node(cur.val)","node*","none","none)","nullptr)","nullptr);","nullptr;","null。","o(n)o(n)","pre","pre)","pre):","pre.next","pre.next.next","pre;","private:","public:","random","re","recur(cur","recur(cur,","recur(cur.next,","recur(head,","recur(listnode*","res;","return","reverselist(listnode*","reverselist(self,","solut","solution:","tmp","tmp.next","tmp;","unordered_map","while(cur","{","{}","}","};","“原节点","两轮遍历链表，使用","为此提出两种方法：","使用线性大小的额外空间。","修改","修改节点引用指向","单独处理原链表尾节点","反转链表","和","哈希表","哈希表的方法即在用next指针遍历列表的时候，建立原节点和拷贝节点的对应关系。","因为random指针可能指向一个暂时还没有创建的节点拷贝。","复制各节点，并建立","复制各节点，并构建拼接链表","复制复杂链表","复制新链表的random指针；","复制节点并构建拼接链表；","如下图所示，题目要求将链表反转。本文介绍迭代（双指针）、递归两种实现方法。","引用指向","拆分两个链表，并返回新链表。","拆分两链表","指向","指向节点。","指向节点的同时找到新对应新节点的","指针指向下一个节点，还有一个","指针指向链表中的任意节点或者","新节点”","方法一：","方法一：哈希表","方法二：拼接+拆分","方法二：递归","时间。","时间复杂度","映射","暂存","暂存后继节点","本题的难点在于每个链表多出了一个random指针，同过next的链表遍历无法完成random的复制。","构建各新节点的","构建新节点的","构建新链表的","然后通过第二次next指针遍历来完成random指针的拷贝。","的","空间复杂度","算法分三步进行：","终止条件","考虑构建如下图所示的拼接链表，如此便可在访问原节点的","访问下一节点","请实现函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个","调用递归并返回","返回反转链表的头节点","返回新链表头节点","返回新链表的头节点","迭代","递归后继节点","链表","："],"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":["\"fviefuro\"","\"owoztneoer\"","(char","(int","++c[ch];","0;","1","1：","2：","423.","5","9）。按","=","[\"e\",\"g\",\"f\",\"i\",\"h\",\"o\",\"n\",\"s\",\"r\",\"u\",\"t\",\"w\",\"v\",\"x\",\"z\"]","ans;","c;","c['f']","c['g'];","c['h']","c['i']","c['o']","c['s']","c['u'];","c['w'];","c['x'];","c['z'];","ch:","class","cnt(10);","cnt[0]","cnt[1]","cnt[2]","cnt[3]","cnt[4]","cnt[4];","cnt[5]","cnt[6]","cnt[6];","cnt[7]","cnt[8]","cnt[8];","cnt[9]","originaldigits(str","public:","s","s)","s[i]","solut","string","unordered_map","vector","{","}","为","从英文中重建数字","保证是一个符合题目要求的字符串","升序","提示：","示例","给你一个字符串","输入：","输出：\"012\"","输出：\"45\"","返回原始的数字。","这些字符之一","首先我们可以统计每个字母分别在哪些数字中出现：","，其中包含字母顺序打乱的用英文单词表示的若干数字（0"],"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":["\"ab\",","\"abcw\",","\"cd\"。","\"xtfn\"。","&","&a","&b","(0x1","(auto","*","//(chars,","0","0000","0001","0011]","0;","0。","1100]","16","1:","2:","318.","3:","4",":","=","[\"a\",\"aa\",\"aaa\",\"aaaa\"]","[\"a\",\"ab\",\"abc\",\"d\",\"cd\",\"bcd\",\"abcd\"]","[\"abcw\",\"baz\",\"foo\",\"bar\",\"xtfn\",\"abcdef\"]","[“aaab”,”ab”,”aab”,”cdee”,”deedc”,”dec”]","a)","a.second*b.second);","a0[0000","a1","a1[\"ab\"]","a[\"aaab\"]","b[\"ab\"]","c[\"aab\"]","class","d","d0[0000","d1","d1[\"cde\"]","d[\"deedc\"]","e[\"cdee\"]","else{","f[dec]","flowchart","for(auto","if(!(a.first&b.first)){","if(mp.count(temp)){","int","length(word[i])","length(word[j])","length)","max(mp[temp],(int)word.size());","max(res,","mp){","mp;","mp[temp]","private:","re","res;","return","solut","string2int(str","string2int(word);","temp","unordered_map","word","word.size();","words)","words){","words，找到","{","|=","}","};","不存在这样的两个单词。","先将每个字符串编码为int","字符串整数编码，加哈希表同组合并。","最后嵌套遍历哈希表（此时哈希表的长度是独立组合的个数，如上图中的两个独立组合）","最大单词长度乘积","然后建立的哈希表，first是编码，second是最大长度","的最大值，并且这两个单词不含有公共字母。你可以认为每个单词只包含小写字母。如果不存在这样的两个单词，返回","示例","给定一个字符串数组","解释:","输入:","输出:","这一题中我们可以把word划分为两个层面：","这两个单词为"],"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":["$l","$l$","$n$","$o(l","&kv:mp){","(m+k))$","+","+=","//","1;","692.",":","=","[](pi","\\log","\\time","a,pi","a.firstb.second;","a.second==b.second?","ans(k);","ans;","ans[","auto","b){","c++","class","comp","for(auto","for(auto&","if(mp.count(word))","if(pq.size()>k)","if(pq.size()>k){","int","it++;","k","k)","k)$","k]","l","m","m$","m)$。","m)$，其中","mp.begin();","mp;","mp[word]","n","n$","pair","pis;","pq(comp);","pq.pop();","pq.push(*it);","pq.push(kv);","pq.top().first;","priority_queu","priority_queue,decltype(comp)>","public:","return","solut","topkfrequent(vector&","typedef","unordered_map","unordered_map::iter","vector","while(!pq.empty())","while(it!=mp.end()){","word","words){","words,","{","}","};","个出现次数最多的单词。","使用","前k个出现次数最多的字符串","前k个高频单词","反转一些","哈希表加小顶堆","哈希表加排序","定义并维护一个长度为k的堆，","实现堆的操作","建立并填充哈希表","时间复杂度：$o(l","本题有两种方法：","的","的时间完成字符串比较（最坏情况下所有字符串出现频率都相同，我们需要将它们两两比较）。","的时间将字符串插入到哈希表中，以及","空间复杂度：$o(l","给一非空的单词列表，返回前","自定义比较规则","表示字符串的平均长度，$m$","表示实际字符串种类数。哈希表和生成的排序数组空间占用均为","表示实际字符串种类数。我们需要","表示给定字符串序列的长度，$l$表示字符串的平均长度，$m$","输出答案","返回的答案应该按单词出现频率由高到低排序。如果不同的单词有相同出现频率，按字母顺序排序。","这里提供两种遍历unordered_map的方式"],"算法题/1-Algorithm/0-Search_Algorithm/":["#","#includ","$$","(int","//","//a","//b","//c","//d","//e","//f","//g","//h","//剪枝","//输出结果","0","0,2,6,11,15,20,22","0;","1","1,3,8,12,17,21,23","10,9,8,7,6,5,4","13,14,15,16,17,18,19},","19,18,17,16,15,14,13","1};","2","22,20,15,11,6,2,0","23,21,17,12,8,3,1","3","4,5,6,7,8,9,10","=","a*","a*算法","a*（念做：a","ac","algorithm","alpha","averi","beta剪枝","bf","bool","boy","center[8]={6,7,8,11,12,15,16,17};","char","cnt[3]={0,0,0};","cout","cout>mp[i];","danc","ddhh","descript","df","finop[20];","finop[depth]='\\0';","flag=false;","flag=true;","get_h(){","https://zhuanlan.zhihu.com/p/54510444","i=0;ib;","ida*","if(!get_h())","if(get_h()==0)","if(i==0)","if(mp[i]==0)","input","int","link","maxdepth||depth+get_h()>maxdepth)","move","mp[24];","namespac","needed”。在第二行中，您必须在这些移动后输出中心方块中的块数字。如果有多种可能的解决方案，则必须输出使用最少移动次数的解决方案。如果仍有多个可能的解决方案，则必须输出字典顺序中最小的解决方案。不需要在案例之间输出空行。","op)","option(int","output","p","pos[8][7]=","return","return;","reverseop[9]={5,4,7,6,1,0,3,2,","sampl","search","star）算法是一种很常用的路径查找和图形遍历算法。它有较好的性能和准确度","std;","temp=mp[pos[op][0]];","us","void","{","{//不需要移动","}","},","};","优化剪枝","优点","例题","利于剪枝","双向广度优先搜索","启发式搜索","启发式搜索题目","回溯法","在每一状态搜索的开始，高效的使用哈希表搜索这个状态是否出现过，如果已经做过，直接调用答案，回溯","如果没有，则按正常方法搜索","宫水三叶的题库:","对于每个测试用例，您必须输出两行。第一行包含达到最终配置所需的所有动作。每个动作都是一个字母，从“a”到“h”，并且行中的字母之间不应有任何空格。如果不需要移动，则输出“no","广度优先搜索","搜索的低效在于没有能够很好地处理重叠子问题；动态规划虽然比较好地处理了重叠子问题，但是在有些拓扑关系比较复杂的题目面前，又显得无奈。记忆化搜索正是在这样的情况下产生的，它采用搜索的形式和动态规划中递推的思想将这两种方法有机地综合在一起，扬长避短，简单实用，在信息学中有着重要的作用。","搜索算法分类：","操作","时间复杂度只比bfs稍差一点（虽然搜索k+1层时会重复搜索k层，但是整体而言并不比广搜慢很多）。","最初块随放在板子上，你的目标是移动块，使放置在中心方块的八个块具有相同的符号标记。只有一种类型的有效移动，即旋转四条线中的一条，每条线由七个块组成。也就是说，线中的六个块向头部移动一个块，并且头块移动到线的末端。八个可能的移动用大写字母a到h标记。图示出了两个连续的移动，移动a和移动c。","最常用的剪枝有三种，记忆化搜索、最优性剪枝、可行性剪枝。","最近迷上了旋转游戏。旋转游戏使用＃形板，可以容纳24块方块（见图）。这些块标有数字1,2和3，每种正好有8个。","正好找到","深度优先搜索","状态表示，由于是要用哈希表实现，所以状态最好可以用数字表示，常用的方法是把一个状态连写成一个","盘的形状","空间复杂度与深搜相同，却比广搜小很多","算法","获取中间8个格子中的众数情况","记忆化搜索=搜索的形式+动态规划的思想。","记忆化搜索概述","记忆化搜索的实现:","输入包含不超过30个测试用例。每个测试用例只有一行包含24个数字，这些数字是初始配置中块的符号。块的行从上到下列出。对于每一行，块从左到右列出。数字用空格分隔。例如，样例输入中的第一个测试用例对应于图中的初始配置。案件之间没有空行。在结束输入的最后一个测试用例之后，有一行包含单个“0”。","进制数字，然后把这个数字对应的十进制数字作为状态","迭代加深搜索","首先深度优先搜索k层，若没有找到可行解，再深度优先搜索k+1层，直到找到可行解为止。","首先，要通过一个表记录已经存储下的搜索结果，一般用哈希表实现","："],"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":["//","//mid向上取整时，right必须减1","//mid向下取整时，left必须加1","0,","1","1;","1]","367","540","=",">","bool:","bsearch_1(int","check","class","def","else:","fals","if(check(mid))","int","int)","isperfectsquare(self,","l","l,","l;","leetcod","left","left,","mid","mid+1;","mid;","mid]","num","num:","python","r","r){","r]划分成[l,","r]时","return","right","solution:","sqrt","true","while(l>1;","}","。","二分查找","二分算法的模板","代表目标在左边","使用任何内置的库函数，如","和[mid+1,","和[mid,","在需要考虑数位的题目中，使用","将区间[l,","整数二分模板","是一个完全平方数，则返回","正整数","简单多了","给定一个","这样才能防止死循环","进阶：不要","，否则返回","，编写一个函数，如果"],"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":["$m","$target","$。该矩阵具有以下特性：","(matrix[x][y]","(x","++x;","+=","0)","0,","0:","1","1;","2d","3","5","=","==",">","[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]],","\\time","bool","bool:","c++","class","cn.com/problems/search","def","else:","fals","false;","ii","ii/","int","int)","len(matrix),","len(matrix[0])","list[list[int]],","m","m,","matrix","matrix,","matrix.size(),","matrix:","matrix[0].size();","matrix[x][y]","n","n$","public:","python","return","searchmatrix(self,","searchmatrix(vector>&","solut","solution:","target","target)","target:","true","true;","x","x,","y","y;","{","}","};","中的一个目标值","从右上角开始，z字形查找。","代码","技巧总结","描述","搜索二维矩阵","每列的元素从上到下升序排列。","每行的元素从左到右升序排列。","相关概念","维矩阵","编写一个高效的算法来搜索","输入：matrix","输出：true","链接：https://leetcod","题目：240."],"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":["%","(memo.count(n))","(n","+","/","//case","0)","0;","1","1)","1));","1:","1或","1替换","2","2),","2);","2:","2替换","3","397.","3:","4","4:","6","7","8","=","==",">","class","int","integerreplacement(int","integerreplacement(n","memo.push({0,1});","memo;","memo[n]","memo[n];","min(integerreplacement(n","n","n)","private:","public:","return","solut","solution(){","unordered_map","{","}","};","。","为","为偶数","为奇数","变为","如果","实现","已知","并记忆","或","所需的最小替换次数是多少？","整数替换","方法一：·普通递归算法","方法二：记忆化递归","是偶数，则用","是奇数，则可以用","直接返回","给定一个正整数","解释：7","记忆化递归使用多余的内存空间来换取较短的递归时间","输入：n","输出：4","递归一次","递归两次","递归树剪枝","，你可以做如下操作："],"算法题/1-Algorithm/1-Graph_Theory/tarjan.html":["tarjan"],"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":["+","0.5))","1","3",">","bulbswitch(int","bulbswitch(self,","c++","class","cn.com/problems/bulb","def","int","int(sqrt(n","int)","int:","n","n)","n:","public:","python","return","solut","solution:","sqrt(n)向下取整。","sqrt(n+0.5);","switcher/","{","}","};","一个数的因数个数只有在该数为完全平方数的时候才是奇数。","个灯泡处于关闭状态。第一轮，你将会打开所有灯泡。接下来的第二轮，你将会每两个灯泡关闭一个。","个灯泡就切换一个灯泡的开关。直到第","代码","初始时有","找出并返回","技巧总结","描述","数论：因数个数","灯泡开关","相关概念","第三轮，你每三个灯泡就切换一个灯泡的开关（即，打开变关闭，关闭变打开）。第","范围内的完全平方数个数为","轮后有多少个亮着的灯泡。","轮，你只需要切换最后一个灯泡的开关。","轮，你每","链接：https://leetcod","题目：319."],"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":["$$","$\\textit{dp}$，其中","$\\textit{dp}[i][j]$","$\\textit{word}_2$","$\\textit{word}_2[0:j]$","$m$","$m+1$","$n$，创建","$n+1$","&&","(int","+","1));","1,","1;","1]","1]$来转移","1]$来转移。","1])+1","1][j","1][j]$和$dp[i][j","1][j],dp[i][j","583.","=","\\begin{cases}","\\end{cases}","\\neq","\\small","\\textit{word}_1[0:i]$","class","dp(m","dp[i","dp[i][j]=","int","m","min(dp[i","mindistance(str","n","public:","size=4}","solut","string","vector(n","vector>","word1","word1,","word1.size();","word2","word2)","word2.size();","word2，找到使得","word_1[i]","word_1[i]=word_2[j]\\","word_2[j]","{","{font","两个字符串的删除操作","中等","假设字符串$\\textit{word}_1$","列的二维数组","和","当结尾的两个字符不同时，必然有一个要被删除，状态就可以由$dp[i","当结尾的两个字符相同时，直接不用管,由$dp[i","方法一：","方法二：直接动态规划","的长度分别为","相同所需的最小步数，每步可以删除任意一个字符串中的一个字符。","相同的最少删除操作次数。","给定两个单词","行","表示使$","计算最长公共子序列"],"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":["+","0;","1","18（可被","1：","3","3,","6,","8，它们的和是","=",">","[0,0,0]","[3,6,5,1,8]","b","c","c++","class","cn.com/problems/greatest","def","divis","for(int","int","int:","list[int])","max(turntable[a%3],a)","max(turntable[b%3],b)","max(turntable[c%3],c)","maxsumdivthree(self,","maxsumdivthree(vector&","n","num","nums)","nums.size();","nums:","nums的","nums，请你找出并返回能被三整除的元素最大和。","public:","python","remainder[3]","return","solut","solution:","sum","three/","turntabl","turntable[0]","turntable[0]+","turntable[1]+","turntable[2]+","turntable[a%3]","turntable[b%3]","turntable[c%3]","{","{0};","上面的代码是做了空间复杂度优化的，用三个整型空间就存储系统的状态，每次来一个新的元素就更新状态。","代码","动态规划","可被三整除的最大和","和","技巧总结","描述","整除的最大和）。","正相关","每个位置对于三个状态分量，即被三整除余0、1、2的数的最大和。","状态定义：","状态机","相关概念","示例","给你一个整数数组","解释：选出数字","输入：num","输出：18","这一题基于一个朴素的事实：答案","链接：https://leetcod","长度","题目："],"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":["&arr,","(int","+","0;","1","1;","3","=",">","an","ans;","arithmet","arr","arr)","arr:","c++","class","cn.com/problems/longest","def","defaultdict(int)","differ","difference)","difference/","difference:","difference]","difference，请你找出并返回","dp","dp;","dp[v","dp[v]","dp[v]);","given","int","int)","int:","list[int],","longestsubsequence(self,","longestsubsequence(vector","max(ans,","max(dp.values())","public:","python","python的map实现","return","solut","solution:","subsequ","unordered_map","v","v:","{","}","};","。","中最长等差子序列的长度，该子序列中相邻元素之间的差等于","也可以用来作为动态规划的记忆器","代码","动态规划","和一个整数","子序列","技巧总结","描述","是指在不改变其余元素顺序的情况下，通过删除一些元素或不删除任何元素而从","最长定差子序列","派生出来的序列。","相关概念","简单","给你一个整数数组","链接：https://leetcod","难度:","题目：最长定差子序列"],"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":["!=","$i=0$","&&","'*'","'*'表示0个p[j","'*'表示1个p[j","'*'表示n个p[j","'.'","'.')","'a","(s[i","//初始化","//单独初始化","//可以这样理解，在p[:j","//定义dp的时候自动赋值","//定义动态规划表","//至于p[j","10.","1]","1]=='*'","1]=='.')","1]==p[j","1][j","1][j]","1][j]为真的时候","1]为'*'的情况下，当dp[i","2;","2]","2]&&p[j","2]字符的条件：dp[i][j","2]字符：dp[i","2]是什么就不重要了","3]与空字符串匹配的情况下，必须有p[j","=","==","bool","class","dp(s.size()+1,vector(p.size()+1,false));","dp[0][0]","dp[0][j","dp[0][j]","dp[i","dp[i][0]","dp[i][j","fals","for(int","ismatch(str","j","n个字符情况。因此可以把情况二的判别省略。","p)","p[:j]","p[j","public:","p，请你来实现一个支持","s","s,","s[:i]","s[i","solut","string","true","true;","vector>","z'","{","||","​","且","也可能不等于，即包含了'*'表示1","人类在观察正则表达式的时候是从左往右，在左侧能够匹配是右侧能够匹配的必要条件。","代码","分析","初始化完成以后，需要完整的列出状态转移公式。","动态规划的结果位于dp矩阵的右下角dp[s.size()][p.size()]","匹配任意单个字符","匹配零个或多个前面的那一个元素","即不需要这个'*'","可以返现第二种情况被第三种情况涵盖了：","可能等于","和","和一个字符规律","和它前面的一个字符，就可以实现匹配。","因此我们可以用动态规划的方法，定义一个二维数组dp[i][j],","困难","在p[j","如果p[j","字符串","定义状态","对于dp[i][j]","我们可以知道，当$i=j=0$","所谓匹配，是要涵盖","整个","是否匹配","正则表达式匹配","消掉","状态初始化","状态转移","的时候，其他都是不匹配的。","的时候，必然是匹配的。","的正则表达式匹配。","的，而不是部分字符串。","第0列dp[i][0]","第0行dp[0][j]比较特殊，需要用到状态转移。","结果返回","给你一个字符串","表示","表示从0开始长度为i和j的子串。","被","这里我们要强调一下，s[:i]","除了","难度：","首先，题目给出了三种字符，它们分别是'*'","，如果p[j"],"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":["$$","(int","(n","*","+","//","0)","0;","1","1];","1][m","1。这是因为我们可以在","1，原因同上。","1，原因同上；","72.","=","=1+min(d[i][j−1],d[i−1][j],d[i−1][j−1]−1)","==","a，那么显然","b","b，那么显然","c","class","c，那么显然","d[i][j]=1+min(d[i][j−1],d[i−1][j],d[i−1][j−1])","d[i][j]=min(d[i][j−1]+1,d[i−1][j]+1,d[i−1][j−1])\\","d[n","dp","hor","horse到","horse和","int","m","m;","mindistance(str","n","public:","return","ro","ros的编辑距离不会超过","ro变为相同的字符串，只需要额外的","ro的编辑距离为","solut","string","s，就能在","word1","word1,","word1.length();","word2","word2)","word2.length();","word2，请你计算出将","{","。","中插入一个字符：如果我们知道","中插入一个字符：如果我们知道hor","你可以对一个单词进行如下三种操作：","修改单词","删除一个字符","到","变为相同的字符串；","和","困难","在单词","所使用的最少操作数","插入一个字符","数组","替换一个字符","有一个字符串为空串","次操作后将","次操作，在单词","的一个字符：如果我们知道","的最后一个字母相同","的末尾添加字符","的编辑距离不会超过","的编辑距离为","给你两个单词","编辑距离","若","若不同","转换成","边界状态初始化"],"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":["$nums$","(int","0;","384.","=",">",">num",">original.resize(nums.size());","__init__(self,","`solut","class","class``","copy(nums.begin(),","copy(original.begin(),","cpp","def","fisher","int[]","j","len(self.nums))","list[int]):","list[int]:","num","nums)","nums.begin());","nums.copy()","nums.end(),","nums:","nums;","original.begin());","original.end(),","original;","public:","python","random.randrange(i,","range(len(self.nums)):","reset()","reset(self)","return","self.num","self.nums[i]","self.nums[i],","self.nums[j]","self.nums[j],","self.origin","self.original.copy()","shuffle()","shuffle(self)","solut","solution(int[]","solution(vector&","solution:","vector","yate","{","}","};","中等","使用整数数组","假设两堆牌，","初始化对象","剩余的牌的顺序无所谓，因为是从它们中间随机等概率抽取新牌的。","因此什么可以维护数组的前部和后部，然后将随机从后部中取出一张和前部的结尾互换位置。","实现","左边的一堆是从右边的一堆连续随机抽取的牌。","打乱数组","洗牌","洗牌算法","给你一个整数数组","解析","返回数组随机打乱后的结果","那么这两堆牌加起来就是一整副牌。","重设数组到它的初始状态并返回","，设计算法来打乱一个没有重复元素的数组。"],"算法题/2-Templates/BinarySearch.html":["+","//","//point","//向上取整","0;","1","1,","1;","1]==target){","1]。","1};","278、1a62、26、80、88、4、151","2d","3","35.","4","5",";","=","==","[","[240]","[34]","[35]","[74]","binarysearch","binarysearch(vector&","break;","class","cout=target)?","cur","cur:cur+1;","cur;","if(!nums.size()){","if(nums[cur]","if(nums[cur]==target)","if(nums[cur]==target){","if(nums[cur]>target)","ii","insert","int","l","matrix","n)","n)的算法解决此问题吗？","nums,","nums.size()","nums，和一个目标值","o(log","point","posit","public:","r","rang","return","search","searchinsert(vector&","searchrange(vector&","solut","target)","target){","target。找出给定目标值在数组中的开始位置和结束位置。如果数组中不存在目标值","target，返回","vector","while(l>0&&nums[l","while(l>1;","while(r","{","}","};","二分查找while循环阶段","二分查找参数初始化","例题：34.","后处理","后处理阶段","在排序数组中查找元素的第一个和最后一个位置","思路：先二分查找，再在从找到的点展开","搜索插入位置","模板提炼：在数组中查找一个目标数字","测试题","的算法。","给定一个按照升序排列的整数数组","给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。","请必须使用时间复杂度为","这里有四点需要注意","进阶：你可以设计并实现时间复杂度为","防空","题目列表"],"算法题/2-Templates/BinaryTree.html":["#includ","*","*/","*left;","*root","/*","//","//std::coutvalright;","//左子树右边界的逆","0;","11.","19","1）如果cur无左孩子","2)","5",":val(x),","=",">left",">left);",">left;",">right",">right!=cur){",">right!=null&&mostright",">right;",">right==null){",">right=cur;",">right=l5;",">right=null;",">right=pre;","binarytre","class","continue;//相当于是cur将会有第二次访问的机会，所以这次不打印","creat","cur=cur","cur向右移动cur=cur","cur向左移动","cur想右移动","dyf","if(head==null)","if(mostright","if(mostright!=null){//如果有左子树执行","int","l1","l1;","l2","l2;","l3;","l4;","left(null),","main()","morrisin(treenode*head){","morris算法","mostright","mostright=cur","mostright=mostright","new","pre","pre;","pre=tmp;","printedge(cur","printedge(head);","public:","return","return;","right(null)","rightreverse(treenode*root){","root","s1.morrisin(root);","s1.morrismid(root);","s1.morrispos(root);","s1.morrispre(root);","s1;","solut","std::coutleft;","std::coutvalleft;","std::coutvalright;","struct","tmp","treenod","treenode(1);","treenode(2);","treenode(3);","treenode(4);","treenode(5);","treenode(7);","treenode(int","treenode*","treenode*cur=head;","treenode*cur=root","treenode*l1","treenode*l2","treenode*l3","treenode*l4","treenode*l5=","treenode*mostright=null;","treenode*pre=root;","treenode*right;","treenode*tmp=cur;","val;","void","while(cur!=null){","while(mostright","x)","{","{}","}","};","}els","中序遍历","为了从下级回到上级要有一个堆栈用来存储返回上级的信息","介绍一种时间复杂度为o(n)","会到达该节点2次","会达到该节点1次","前序遍历","可以说两次重合","后序遍历","如果cur有左孩子","如果mostright的右指针为空,让其指向cur","如果mostright的右指针指向cur","如果一个树有左子树","并且左子树没有访问完","所以一般情况下空间复杂度为o(高度)","找到cur左子数上最右的节点，记为mostright：","普通算法：","没有左子树","第一次到达","第三次","第二次","继续往下执行","让其指向空","选择第一次到达该节点时进行打印","递归排序是所有的节点都访问3次","额外空间复杂度为o(1)的二叉树的遍历方式，n为二叉树的节点个数"],"算法题/2-Templates/ListNode.html":["!=","&&","*cur","*pre","18.","=","==",">next",">next;",">val","class","cur","cur;","deletenode(listnode*","head","head,","head;","if(cur","if(head","int","listnod","listnode*","nullptr","nullptr)","pre","public:","return","solut","val)","while(cur","{","}","};","删除链表节点","剑指offer","对链表做一些操作然后返回链表头节点的题目，经常需要创建一个哨兵节点dummy，用来记录头节点的位置。","给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。","返回删除后的链表的头节点。","返回头节点","链表模板"],"算法题/3-Tricks/cppTricks.html":["\"012345\";","\"1234\";","\"back\"","\"basic_string_view::substr\");","\"live\"","\"think\"","#","#includ","%","&","()","(1)","(2)","(3,5);","(==if","(`a","(b","(bi","(c++11)","(const","(constructor)","(forwarditer","(i.e.,","(ib;};","(int","(not","(of","(pos);","(public","(quot","(randomaccessiter","(stl","(the","(v.begin(),","(vector",")",")函数进行产生随机化种子，随着seed的不同，就能够产生不同的随机数。","**default","**shall","*/","*heap","*less","*max_element(nums.begin(),nums.end());","*min_element(nums.begin(),nums.end());","*strict","*这里必须是非成员函数才可以","+","+a;",",decltype(cmp)>","/**使用重载函数操作符的类对象*/","/**函数对象*/","/**定义一下比较函数*/","/**重载小于操作符，","/*使用函数对象来定义这个比较函数原型*/","//","//custom","//default","//do","//int","//lambda","//函数指针来初始化函数对象","//此写法会报错","//由大到小排序","//由小到大排序","//需先将string转成char*","0","0;","0~99","1","1).","1+a是终止值，n是整数的范围。","1.1","1.1.1","1.1.2","1.1.3","1.2","1.2.1","1.2.2","1.3","1.3.1","1.4","1.4.1","1.4.2","1.5","1.5.1","10","100","100;","1;","2","2.1","2.2","2.2.1","2.2.2","2.3","20","20);","3","3.1","3.2","30","3、如果要产生1~100，则是这样：int","4","4、总结来说，可以表示为：","5、一般性：rand()","6、若要产生0~1之间的小数，则可以先取得0~10的整数，然后均除以10即可得到“随机到十分位”的10个随机小数。若要得到“随机到百分位”的随机小数，则需要先得到0~100的10个整数，然后均除以100，其它情况依","7、通常rand()产生的随机数在每次运行的时候都是与上一次相同的，这样是为了便于程序的调试。若要产生每次不同的随机数，则可以使用srand(","8、还可以包含time.h头文件，然后使用srand(time(0))来使用当前时间使随机数发生器随机化，这样就可以保证每两次运行时可以得到不同的随机数序列，同时这要求程序的两次运行的间隔超过1秒。",":",";","=","==\"back\"==","==greatest==","==top==",">","[](const","[key,val]","^","__n","__po","__pos);","__pos,","__rlen","__rlen};","_m_check(__pos,","_m_len","`comp(a,b)`,","`less`**,","`true`","a+1)+","a,const","a.ag","a`bool`.","abstract","access","accord","adaptors,","age;","alfr","algorithm","alias","alway","appli","argument","atoi()","atoi(s);","atoi(str);","atoi(str.c_str());","auto","a~b","b","b){return","back","basic","basic_string_view","basic_string_view{_m_str","befor","binari","bool","c","c++","c++中rand()","c++容器vector的数组片段截取操作_stitching的博客","char*","charact","class","class.","cmp","comp","comp);","comp:","compar","consid","const","constexpr","construct","contain","container*","container,","contains,","content","copi","cout","cpp","cpp)","cpptrick","criterion.","csdn博客_c++","custom","data","default","default)","default,","defines.**","denot","dequ","design","details.\";","element","elements.","emplac","empti","encapsul","end","equal","exampl","express","first","first,","first_argument_type;","follow","for(auto","for(char","forwarditer","for遍历","friend","fulfil","func(cmpfunc);","function","g","generalities,","go","grammar","greater","greater)","http://www.cplusplus.com/reference/algorithm/max_element/","http://www.cplusplus.com/reference/algorithm/min_element/","https://www.cnblogs.com/pzhfei/archive/2013/01/14/lambda_expression.html","https://www.cnblogs.com/sylar5/p/6638641.html","i,int","implement","includ","indic","insert","instantiation,","int","integr","internal*underli","intstr","it++;","it;","j)","known","lambda函数","last","last);","last,","last,const","last:","len","length,","less","list","live","low,up;","low=std::lower_bound","lower_bound/upper_bound","main","main()","main(){","maintain","mani","maxvalu","member","minvalu","mp){","mp.begin();","mp;","myfunct","myints[]","n","n.","name;","namespac","next","noexcept(false)","note:","npos)","num","number","object","object,","object.","oper","operations:","operator()","operator*","order","ordering*","ordering*).","out_of_range.","paramet","particular","po","pointer","pop","pop_back","posit","possibl","predic","preserv","prioriti","priority_queu","priority_queue,function>","priority_queue,mycmp>","priority_queue::container_type.","priority_queue::value_type.","properties*","provid","public:","push","push_back","pushed/pop","que1;","que2;","que4(cmp);","que5(cmp);","que6(cmpfunc);","que7(func);","queue","queue.","queues.","rand()","rand()不需要参数，它会返回一个从0到最大随机数的任意整数，最大随机数的大小通常是固定的一个大整数。","randomaccessiter","remov","requir","requirements.","result_type;","return","s","s)","same","second_argument_type;","seed","set","shall","shorter,","size","size_t","size_typ","someth","sort","sort(randomaccessiter","specif","specifi","stack","stack)","stack.","stack;","standard","std::cout","std::lower_bound,","std::min(__n,","std::priority_queu","std::size_t","std::sort","std::strin","std::string","std::swap","std::swap(s[0],s[5]);","std::swap(x,y);","std::unordered_map","std::upper_bound","std::upper_bound,","std::vector","std::vector::iter","std;","stored.","str","str(\"5678\");","str.find(\"live\");","str.substr","str2","str3","str=\"we","strict","string","string.","string::npo","string::size_type).","string::substr","struct","structur","student","student{","substr","substr(size_typ","substring.","such","support","swap","swap()","t","t&","t)","t.","take","templat","test","think","throw","to_sting();","to_string()","top","two","type","typedef","underli","unordered_map","unordered_map::iter","unordered_map的遍历","unsign","until","up=","upper_bound","upper_bound()","us","used.","used==).","v(myints,myints+8);","v.end());","v.end(),","val);","val,","valu","value_typ","vector","vector,","void","way","weak","whether","while(it!=mp.end()){","whitehead)","x)","x,","x:10","x:20","x=10,","x>y;}","y)","y:10","y:20","y=20;","{","{1,2,4,3};","{10,20,30,30,20,10,10,20};","{return","|","}","};","两个迭代器，用来指定范围","之间的一个随机整数。","仿函数","例子：","例子：http://www.cplusplus.com/reference/algorithm/sort/","其中的a是起始值，n","函数","函数来初始化函数对象","函数的用法","刷题时常用的函数和技巧","参数:","和","声明","如果你要产生","就表示","截取","排序","普通函数","最值","本文档记录一些","此类推。","用来自定义排序方法","类型转换","自定义排序","自带模板仿函数","说明","转","返回值：none","返回值：最值元素","返回大于目标值的最小值的迭代器。","这100个整数中的一个随机整数，可以表达为：int","这样，num的值就是一个0~99中的一个随机数了。","迭代器遍历"],"算法题/3-Tricks/pythonTricks.html":["!","\"\",","\"aajsdd\"","#","#!/usr/bin/python","#append()","#pop()","#————————————————————defaultdict———————————————————","#———————————————————————dict———————————————————————","#不存在的key","%","'!']","'!'])","''.join(random.sample(['z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'],","''.join(random.sample(string.ascii_lett","'a',","'d',","'fall'),","'fall',","'h'","'j'}","'m'","'spring'),","'summer'),","'summer',","'three']","'two',","'winter')]","'winter']","'world',","'布'])","'石头',","(","(1,","(2,","(3,","(4,","([start,]","(key,","(map","(most","(stack","(vector","(x>y)","(x。",")","*","**","+",",",",格式如下所示：","...","...])","/","//","0","0))","0]","1","1)","1))","1,","1.1","1.1.1","1.1.2","1.2","1.2.1","1.2.2","1.3","1.3.1","1.3.2","1.3.3","1.3.4","10","10)","10,","101,","11","15,","1。","2","2)#[","2))","2,","2.0","2.1","20,","210","22","25]","3","3)","3,","30,","31","3]","4","4),","4,","4]","4]没有5","5","5)","5))","5),","5,","5）","5）;","6","6)]","6,","6]","7,","8","8))","8,","8]","9,","9//2","9]","9生成指定数量的随机字符：",":","=",">>>",">>>a",">>>list(range(0,",">>>range(5)",">>>season",">>>seq","[","['hello',","['one',","['spring',","[(0,","[(1,","[,base])","[,imag])","[,n])","[,step])","[0,","[1,","[1,2,3]","[4,","[4,5,6,7,8]","[4,5,6]","[]","[start=0])","]","a**b","a*2","a,b","a1,","a2","a=10，变量","a[1:4]","a[1]","abs(x)","append()","att","b","b,a","b=21：","bisect","bisect()","bisect_left(list,target)","bisect_right(list,target)//","c","call","ceil(x)","choice(seq)","chr(x)","cmp","cmp(x,","cn/3.6/howto/sorting.html","cn/3.7/library/stdtypes.html#sequ","coding:","collect","collections.dequ","complex(r","cpp)","d","data","def","defaultdict","defaultdict(int)","dequ","deque()","deque(['hello',","dic","dic[0]","dic[22]","dict","dict()","dict(d)","dictionari","dictionary.html","e","element","ell","empty:","enumerate()","enumerate(seq):","enumerate(sequence,","eval(str)","exp(x)","fabs(x)","fals","featur","file","float(x)","floor(x)","frozenset(s)","fuction","function","hello","hellopython","hex(x)","https://docs.python.org/zh","https://www.cnblogs.com/zhangxinqi/p/9729406.html#_label8","https://www.jb51.net/article/202477.htm","https://www.jianshu.com/p/bbd258f99fd3","https://www.runoob.com/python/att","https://www.runoob.com/python/python","https://www.runoob.com/python3/python3","i,","imoprt","import","int","int(x","item","iterabl","key","key2","key=>valu","key=none,","keyerror:","l","last):","len(l)","len(set(l))","lifoqueu","lifoqueue(maxs","line","list","list()","list(a1)","list(a2)","list(enumerate(seasons))","list(enumerate(seasons,","list(range(0))","list(range(0,","list(range(1,","list(range(5))","list(s)","list(zip(a,c))","list(zipped)","list.sort(","list.sort(cmp=none,","log(x)","log10(x)","max(list)","max(x1,","max.html","min(list)","min(x1,","min.html","modf(x)","n","oct(x)","on","ord(x)","pop","pop()","pope","pow(x,","print","print(","print('\\nel","print('\\nempty:',","print(a,b)","print(len(stack))","print(stack)","print(stack.get())","print(stack.pop())","print(stack.qsize())","push","python","python3","pythontrick","python中栈也可以用deque类实现，当我们想要在实现在容器两端更快速地进行append和pop操作时，deque比列表更合适．deque可以提供o(1)时间的append和pop操作，而列表则需要o(n)时间.","python常用数学函数","python数据类型转换","python的内置数据结构list可以用来实现栈，用append()向栈顶添加元素,","python算术运算符","queue","queue.lifoqueu","queue模块有lifo","queue，也就是栈结构．用put()和get()操作从queue中添加和获得数据","r'\\n'","r/r","ran_str","random","random()","random.choice('abcdefghijklmnopqrstuvwxyz!@#$%^&*()')","random.choice(['剪刀',","random.randint(1,50)","random.random()","random.randrange(0,","random.sample('zyxwvutsrqponmlkjihgfedcba',5)","random.shuffle(items)","random.uniform(1,","randrang","rang","range()","range(0,","range(start,","recent","repr(x)","revers","reverse=false)","round(x","r（可以大小写）以外，与普通字符串有着几乎完全相同的语法。","s","seed([x])","sequenc","set(l)","set(s)","shuffle(lst)","sort()","sort.html","sqrt(x)","stack","stack')","stack.append('!')","stack.append('hello')","stack.append('world')","stack.empty())","stack.put('!')","stack.put('hello')","stack.put('world')","start","start=1))","std","step","step])","stop","stop[,","stop。例如：range（0，","str(x)","string","string.digits,","structur","swap(a,b):","three","traceback","true","tupl","tuple(s)","two","type","uniform(x,","utf","valu","value)元组序列。","value1,","value2","vector","world","x","x**i","x2,...)","y","y)","z0","za","zip","zip()","zip(*zip(a,b))","zip([iterable,","zip(a,b)","{'s',","{key1","{}","}","​","一个对象","一个序列、迭代器或其他支持迭代对象。","一个或多个迭代器;","下标从","下标起始位置。","与","与cpp的lower_bound一个意思","与cpp的upper_bound一个意思","两个对象相加","两个数相乘或是返回一个被重复若干次的字符串","个字符的。","中","为10的21次方","主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。","乘","交换swap","从a","从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。","从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为","以下假设变量","使用在for循环中：","例子：","例子：https://www.runoob.com/python/att","值，则代表舍入到小数点后的位数。其实准确的说是保留值将保留到离上一位更近的一端。","元素个数与最短的列表一致","减","函数","函数用于对原列表进行排序，如果指定参数，则使用比较函数指定的比较函数。","函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象，这样做的好处是节约了不少的内存。","分割，整个字典包括在花括号","分割，每个键值对之间用逗号","创建一个复数","创建一个字典。d","刷题时常用的函数和技巧","加","升序（默认）。","原始字符串","原始字符串除在字符串的第一个引号前加上字母","原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。","参数","参数:","参数说明：","参考","参考链接","取整除","取模","可以以后进先出的顺序删除元素。但是列表本身有一些缺点，主要问题就是当列表不断扩大的时候会遇到速度瓶颈．列表是动态数组，因此往其中添加新元素而没有空间保存新的元素时，它会自动重新分配内存块，并将原来的内存中的值复制到新的内存块中．这就导致了一些append()操作会消耗更多的时间。（这一点和cpp","可以用来去重","可理解为解压，返回二维矩阵式","可选参数,","号操作符，可以将元组解压为列表。","向下取接近商的整数","均匀分布浮点数","多个字符中生成指定数量的随机字符：","多个字符中选取指定数量的字符组成新字符串：","多了一个返回默认值的功能。","如math.log(math.e)返回1.0,math.log(100,10)返回2.0","如果","如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用","如果字符串中不包含给定的字符返回","如果字符串中包含给定的字符返回","如果指定了该参数会使用该参数的方法进行排序。","字典是另一种可变容器模型，且可存储任意类型对象。","字典的每个键值","字符串运算","字符串连接","实例","对用冒号","将x转换为一个整数","将x转换到一个浮点数","将一个字符转换为它的整数值","将一个整数转换为一个八进制字符串","将一个整数转换为一个十六进制字符串","将一个整数转换为一个字符","将对象","将序列","将序列的所有元素随机排序","已废弃，使用","幂","开始","开始。例如range（5）等价于range（0，","开始。默认是从","得到负数或是一个数减去另一个数","必须是一个","成员运算符","我们可以使用","截取字符串中的一部分，遵循左闭右开原则，str[0:2]","所以到不了101","打乱排序","排序","排序规则，revers","描述","操作符","改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，python会帮你选择seed。","是[0,","是不包含第","最值","有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。","有点像）","本文档记录一些","格式字符串","步长，默认为1。例如：range（0，","浮点数","用来计算在字符串中的有效python表达式,并返回一个对象","由于选择步长是2","的deault","的四舍五入值，如给出","相反，zip(*)","相比","示例","等价于","结束，但不包括","要返回最值的列表","计数从","计数到","该方法没有返回值，但是会对列表的对象进行排序。","详细介绍","详细介绍：","语法：","说明","请看下一节内容。","转换为一个元组","转换为一个列表","转换为不可变集合","转换为列表","转换为可变集合","转换为字符串","转换为表达式字符串","转换来输出列表。","输出结果","输出结果：","输出结果：hellohello","运算后的值。","运算符","返回","返回10.0","返回2.718281828459045","返回e的x次幂(ex),如math.exp(1)","返回x的y次幂","返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。","返回一个对象","返回以10为基数的x的对数，如math.log10(100)返回","返回值","返回值：none","返回值：最值","返回数字x的平方根。","返回数字的上入整数，如math.ceil(4.1)","返回数字的下舍整数，如math.floor(4.9)返回","返回数字的绝对值，如abs(","返回数字的绝对值，如math.fabs(","返回浮点数","返回给定参数的最大值，参数可以为序列。","返回给定参数的最小值，参数可以为序列。","返回除法的余数","逆序遍历","通过索引获取字符串中字符","重复输出字符串","闭区间[]","间隔遍历","降序，","除","除以","随机字符：","随机数函数","随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。python包含以下常用随机数函数：","随机整数：","随机浮点数：","随机生成下一个实数，它在[0,1)范围内。","随机生成下一个实数，它在[x,y]范围内。","随机选取0到100间的偶数：","随机选取字符串："]},"length":31},"tokenStore":{"root":{"0":{"0":{"0":{"0":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.022388059701492536}}},"1":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},"docs":{}},"1":{"1":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}},"docs":{}},"docs":{}},"4":{"docs":{},".":{"0":{"1":{"docs":{},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"docs":{}}},"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.02654867256637168},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.046296296296296294},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00995575221238938}},";":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.018518518518518517},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.026785714285714284},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.014925373134328358},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.00966183574879227},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.028455284552845527},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},")":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},",":{"2":{"docs":{},",":{"6":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"5":{"docs":{},",":{"2":{"0":{"docs":{},",":{"2":{"2":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.009259259259259259},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.015873015873015872}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},"$":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"。":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},".":{"5":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}},"docs":{}},"~":{"9":{"9":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}},"docs":{}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"1":{"0":{"0":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"1":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.006289308176100629},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},",":{"9":{"docs":{},",":{"8":{"docs":{},",":{"7":{"docs":{},",":{"6":{"docs":{},",":{"5":{"docs":{},",":{"4":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}},".":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}}},"1":{"0":{"0":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}},"docs":{}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},".":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"2":{"3":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}},"docs":{}},"3":{"0":{"6":{"docs":{},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"docs":{},",":{"1":{"4":{"docs":{},",":{"1":{"5":{"docs":{},",":{"1":{"6":{"docs":{},",":{"1":{"7":{"docs":{},",":{"1":{"8":{"docs":{},",":{"1":{"9":{"docs":{},"}":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"5":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"6":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},"8":{"docs":{},"（":{"docs":{},"可":{"docs":{},"被":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},".":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}},"9":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}},",":{"1":{"8":{"docs":{},",":{"1":{"7":{"docs":{},",":{"1":{"6":{"docs":{},",":{"1":{"5":{"docs":{},",":{"1":{"4":{"docs":{},",":{"1":{"3":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.024691358024691357},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.04310344827586207},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.07729468599033816},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.023809523809523808},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.03550295857988166},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00663716814159292}},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},":":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},";":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806}}}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},",":{"3":{"docs":{},",":{"8":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"7":{"docs":{},",":{"2":{"1":{"docs":{},",":{"2":{"3":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}}},";":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.017241379310344827},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.044715447154471545},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"加":{"docs":{},"一":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"1":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"减":{"docs":{},"一":{"docs":{},"。":{"docs":{},"另":{"docs":{},"外":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"和":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"]":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.015463917525773196},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.042105263157894736}},"$":{"docs":{},"；":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"来":{"docs":{},"转":{"docs":{},"移":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}},":":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},")":{"docs":{},"+":{"1":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}},"docs":{}}},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}},"$":{"docs":{},"和":{"docs":{},"$":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}},",":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}},"为":{"docs":{},"真":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}},"m":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}},"=":{"docs":{},"=":{"docs":{},"'":{"docs":{},"*":{"docs":{},"'":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}},".":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}},"为":{"docs":{},"'":{"docs":{},"*":{"docs":{},"'":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"当":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}},"。":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},".":{"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},".":{"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"2":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"3":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}}},"2":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},".":{"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"2":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}},"3":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},".":{"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"2":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"3":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"4":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}},"4":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},".":{"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"2":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}}},"5":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},".":{"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}}},"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.008944543828264758}}},"：":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}},":":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"}":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},"或":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"替":{"docs":{},"换":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"这":{"docs":{},"是":{"docs":{},"因":{"docs":{},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}},"，":{"docs":{},"原":{"docs":{},"因":{"docs":{},"同":{"docs":{},"上":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}},"；":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}},"）":{"docs":{},"如":{"docs":{},"果":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"无":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}},"+":{"docs":{},"a":{"docs":{},"是":{"docs":{},"终":{"docs":{},"止":{"docs":{},"值":{"docs":{},"，":{"docs":{},"n":{"docs":{},"是":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"。":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}},"2":{"0":{"7":{"docs":{},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.006289308176100629}},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"1":{"0":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"2":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},",":{"2":{"0":{"docs":{},",":{"1":{"5":{"docs":{},",":{"1":{"1":{"docs":{},",":{"6":{"docs":{},",":{"2":{"docs":{},",":{"0":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"3":{"docs":{},",":{"2":{"1":{"docs":{},",":{"1":{"7":{"docs":{},",":{"1":{"2":{"docs":{},",":{"8":{"docs":{},",":{"3":{"docs":{},",":{"1":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"5":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"7":{"8":{"docs":{},"、":{"1":{"docs":{},"a":{"6":{"2":{"docs":{},"、":{"2":{"6":{"docs":{},"、":{"8":{"0":{"docs":{},"、":{"8":{"8":{"docs":{},"、":{"4":{"docs":{},"、":{"1":{"5":{"1":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.08695652173913043},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.047337278106508875},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},".":{"0":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"2":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},".":{"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"2":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}}},"3":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}},"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.008944543828264758}}},"：":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}},":":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"d":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009}}},")":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219}}},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219}}},"#":{"docs":{},"[":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"替":{"docs":{},"换":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.06315789473684211}},"&":{"docs":{},"&":{"docs":{},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}},"：":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}}}}}}}}},"是":{"docs":{},"什":{"docs":{},"么":{"docs":{},"就":{"docs":{},"不":{"docs":{},"重":{"docs":{},"要":{"docs":{},"了":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00663716814159292}}}},"3":{"0":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"1":{"8":{"docs":{},".":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"5":{"docs":{},".":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},"6":{"7":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}},"docs":{}},"8":{"4":{"docs":{},".":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}},"docs":{}},"9":{"7":{"docs":{},".":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}},"docs":{}},"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.07729468599033816},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.020833333333333332},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},")":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},".":{"1":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"2":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807}}},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"与":{"docs":{},"空":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"必":{"docs":{},"须":{"docs":{},"有":{"docs":{},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}},"、":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"产":{"docs":{},"生":{"1":{"docs":{},"~":{"1":{"0":{"0":{"docs":{},"，":{"docs":{},"则":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"：":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}},"4":{"2":{"3":{"docs":{},".":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}},"docs":{}},"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"9":{"docs":{},",":{"1":{"0":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}},":":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"、":{"docs":{},"总":{"docs":{},"结":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{},"：":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},")":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"没":{"docs":{},"有":{"5":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}}}},"5":{"4":{"0":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}},"7":{"docs":{},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"5":{"9":{"docs":{},".":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}},"docs":{}},"8":{"3":{"docs":{},".":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}},"docs":{}},"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"、":{"docs":{},"一":{"docs":{},"般":{"docs":{},"性":{"docs":{},"：":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0055309734513274336}}},"）":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},";":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"6":{"8":{"4":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"9":{"2":{"docs":{},".":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},"docs":{}},"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}},"、":{"docs":{},"若":{"docs":{},"要":{"docs":{},"产":{"docs":{},"生":{"0":{"docs":{},"~":{"1":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"小":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"先":{"docs":{},"取":{"docs":{},"得":{"0":{"docs":{},"~":{"1":{"0":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"均":{"docs":{},"除":{"docs":{},"以":{"1":{"0":{"docs":{},"即":{"docs":{},"可":{"docs":{},"得":{"docs":{},"到":{"docs":{},"“":{"docs":{},"随":{"docs":{},"机":{"docs":{},"到":{"docs":{},"十":{"docs":{},"分":{"docs":{},"位":{"docs":{},"”":{"docs":{},"的":{"1":{"0":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"小":{"docs":{},"数":{"docs":{},"。":{"docs":{},"若":{"docs":{},"要":{"docs":{},"得":{"docs":{},"到":{"docs":{},"“":{"docs":{},"随":{"docs":{},"机":{"docs":{},"到":{"docs":{},"百":{"docs":{},"分":{"docs":{},"位":{"docs":{},"”":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"小":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"得":{"docs":{},"到":{"0":{"docs":{},"~":{"1":{"0":{"0":{"docs":{},"的":{"1":{"0":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"均":{"docs":{},"除":{"docs":{},"以":{"1":{"0":{"0":{"docs":{},"，":{"docs":{},"其":{"docs":{},"它":{"docs":{},"情":{"docs":{},"况":{"docs":{},"依":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}},")":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"7":{"2":{"docs":{},".":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}},"8":{"5":{"docs":{},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219}},"、":{"docs":{},"通":{"docs":{},"常":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"都":{"docs":{},"是":{"docs":{},"与":{"docs":{},"上":{"docs":{},"一":{"docs":{},"次":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"便":{"docs":{},"于":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"调":{"docs":{},"试":{"docs":{},"。":{"docs":{},"若":{"docs":{},"要":{"docs":{},"产":{"docs":{},"生":{"docs":{},"每":{"docs":{},"次":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"8":{"4":{"1":{"docs":{},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"和":{"docs":{},"是":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}},"、":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"包":{"docs":{},"含":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"头":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"使":{"docs":{},"用":{"docs":{},"s":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},")":{"docs":{},"来":{"docs":{},"使":{"docs":{},"用":{"docs":{},"当":{"docs":{},"前":{"docs":{},"时":{"docs":{},"间":{"docs":{},"使":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"发":{"docs":{},"生":{"docs":{},"器":{"docs":{},"随":{"docs":{},"机":{"docs":{},"化":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"每":{"docs":{},"两":{"docs":{},"次":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"得":{"docs":{},"到":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"这":{"docs":{},"要":{"docs":{},"求":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"两":{"docs":{},"次":{"docs":{},"运":{"docs":{},"行":{"docs":{},"的":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"超":{"docs":{},"过":{"1":{"docs":{},"秒":{"docs":{},"。":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"9":{"9":{"7":{"docs":{},".":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787}},")":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},"）":{"docs":{},"。":{"docs":{},"按":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"/":{"docs":{},"/":{"2":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},"docs":{}}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"生":{"docs":{},"成":{"docs":{},"指":{"docs":{},"定":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"字":{"docs":{},"符":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"docs":{},"a":{"0":{"docs":{},"[":{"0":{"0":{"0":{"0":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"1":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}},"[":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"2":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.058823529411764705},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":5},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"/":{"5":{"8":{"docs":{},"r":{"docs":{},"g":{"docs":{},"q":{"docs":{},"e":{"docs":{},"/":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}},"docs":{}},"docs":{},"e":{"2":{"docs":{},"t":{"5":{"docs":{},"u":{"docs":{},"g":{"docs":{},"/":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}},"docs":{}}},"docs":{}}}}}}}}}},"p":{"docs":{},"h":{"docs":{},"a":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"f":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"n":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198}},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},"k":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}},";":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},"[":{"0":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}},"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}},"2":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}},"docs":{}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.03296703296703297}},"a":{"docs":{},"y":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},":":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}}}}}},")":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.014925373134328358}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"*":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}},"=":{"docs":{},"=":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"?":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"[":{"1":{"docs":{},":":{"4":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.014925373134328358}}}}}}}}}},",":{"docs":{},"p":{"docs":{},"i":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"b":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"*":{"2":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"算":{"docs":{},"法":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"（":{"docs":{},"念":{"docs":{},"做":{"docs":{},"：":{"docs":{},"a":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}},"*":{"docs":{},"b":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"c":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"显":{"docs":{},"然":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}},"+":{"1":{"docs":{},")":{"docs":{},"+":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"docs":{}},"`":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"`":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"g":{"docs":{},"e":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},".":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"~":{"docs":{},"b":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"=":{"1":{"0":{"docs":{},"，":{"docs":{},"变":{"docs":{},"量":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"docs":{}},"docs":{}}},"c":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"+":{"docs":{},"+":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"/":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}}}}}}},"中":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"容":{"docs":{},"器":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"片":{"docs":{},"段":{"docs":{},"截":{"docs":{},"取":{"docs":{},"操":{"docs":{},"作":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"的":{"docs":{},"博":{"docs":{},"客":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.015463917525773196},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.017241379310344827},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.014311270125223614},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.015873015873015872},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.037037037037037035},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.020833333333333332},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.013626834381551363}},"`":{"docs":{},"`":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}},"b":{"docs":{},"u":{"docs":{},"l":{"docs":{},"b":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"/":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"1":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.012345679012345678}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}},",":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}},"2":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.015432098765432098}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}},"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"docs":{}},"docs":{}},"[":{"0":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023}}}},"1":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}},"2":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023}}}},"3":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}},"=":{"docs":{},"{":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"4":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023}}}}},"5":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023}}}},"6":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023}},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"7":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}},"8":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023}}}}},"9":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}},"docs":{}}},"/":{"3":{"docs":{},".":{"6":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"t":{"docs":{},"o":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}},":":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}},"a":{"docs":{},"r":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"*":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"r":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},">":{"docs":{},"m":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},"?":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}}}}}}}}}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"m":{"docs":{},"p":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}},":":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}},"a":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"r":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{},"/":{"docs":{},"/":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"是":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"将":{"docs":{},"会":{"docs":{},"有":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"访":{"docs":{},"问":{"docs":{},"的":{"docs":{},"机":{"docs":{},"会":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"次":{"docs":{},"不":{"docs":{},"打":{"docs":{},"印":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.018867924528301886}},"e":{"docs":{},"r":{"docs":{},"*":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}}}}},"s":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.007337526205450734}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"u":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.07155635062611806},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.036585365853658534},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.06451612903225806}},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}},",":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.01967799642218247}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}},":":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}},":":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}},":":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.01073345259391771}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"+":{"1":{"docs":{},";":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},"docs":{}}}}}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}},"=":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.021897810218978103}}}}}},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"=":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}},"左":{"docs":{},"移":{"docs":{},"动":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}},"想":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}},"[":{"docs":{},"'":{"docs":{},"f":{"docs":{},"'":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"g":{"docs":{},"'":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}},"h":{"docs":{},"'":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"i":{"docs":{},"'":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"o":{"docs":{},"'":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"s":{"docs":{},"'":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"u":{"docs":{},"'":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}},"w":{"docs":{},"'":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}},"x":{"docs":{},"'":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}},"z":{"docs":{},"'":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"8":{"docs":{},"]":{"docs":{},"=":{"docs":{},"{":{"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"5":{"docs":{},",":{"1":{"6":{"docs":{},",":{"1":{"7":{"docs":{},"}":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}}}}},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"显":{"docs":{},"然":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}},"p":{"docs":{},"p":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":10}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"s":{"docs":{},"d":{"docs":{},"n":{"docs":{},"博":{"docs":{},"客":{"docs":{},"_":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"d":{"0":{"docs":{},"[":{"0":{"0":{"0":{"0":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"1":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}},"[":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}},"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{"实用文档/":{"ref":"实用文档/","tf":0.4}}}}}}},"e":{"docs":{},"f":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.02586206896551724},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.008944543828264758},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.029411764705882353},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"*":{"docs":{},"*":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}},"q":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.03608247422680412},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}},"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"[":{"docs":{},"'":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"\"":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.02654867256637168}},"s":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},";":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.02654867256637168}}}},"j":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}},"c":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"2":{"2":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}}},"docs":{}},"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"d":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},"y":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},"/":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},":":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198}}},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"找":{"docs":{},"出":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}},"f":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.00966183574879227}},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}},"docs":{}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}},"docs":{}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"排":{"docs":{},"序":{"docs":{},"、":{"docs":{},"最":{"docs":{},"短":{"docs":{},"路":{"docs":{},"、":{"docs":{},"最":{"docs":{},"小":{"docs":{},"生":{"docs":{},"成":{"docs":{},"树":{"docs":{},"，":{"docs":{},"有":{"docs":{},"时":{"docs":{},"也":{"docs":{},"会":{"docs":{},"用":{"docs":{},"并":{"docs":{},"查":{"docs":{},"集":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"类":{"docs":{},"，":{"docs":{},"还":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"入":{"docs":{},"度":{"docs":{},"出":{"docs":{},"度":{"docs":{},"等":{"docs":{},"特":{"docs":{},"征":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}},"[":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.014925373134328358}}}}}}}}}},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"=":{"1":{"docs":{},"+":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},"\\":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}},"docs":{}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}},"n":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}},"d":{"docs":{},"h":{"docs":{},"h":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"p":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},"(":{"docs":{},"m":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}}}},"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}},"docs":{},"i":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}},"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}},"]":{"docs":{},"=":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}},"v":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198}},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198}},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}},"y":{"docs":{},"f":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.029411764705882353},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.018518518518518517},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.05357142857142857},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.02586206896551724},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.029850746268656716},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.033816425120772944},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.0380952380952381},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.023809523809523808},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.05263157894736842},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.03125},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.03296703296703297},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.03361344537815126},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.056910569105691054},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0072992700729927005},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.016771488469601678},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.017241379310344827},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},")":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219}}}}},"n":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.023668639053254437}}}}}}}}}}}}}}}}},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"*":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}},"x":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"[":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}},"d":{"docs":{},"e":{"docs":{},"g":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}},"i":{"docs":{},"c":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.00966183574879227}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},")":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"m":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"i":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}},"/":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},"i":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"f":{"docs":{},"(":{"docs":{},"!":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856}}}}}}},"q":{"docs":{},"u":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}},"(":{"docs":{},"a":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"&":{"docs":{},"b":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"docs":{},"d":{"docs":{},"q":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"docs":{}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{},"/":{"docs":{},"/":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"执":{"docs":{},"行":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"q":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},">":{"docs":{},"k":{"docs":{},")":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},"{":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"docs":{}}}}}}}}}},"i":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"docs":{}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"]":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009}},"=":{"docs":{},"=":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009}},"{":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}},">":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0055309734513274336}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"=":{"0":{"docs":{},";":{"docs":{},"i":{"docs":{},"b":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}},"docs":{}},"d":{"docs":{},"a":{"docs":{},"*":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}},"l":{"1":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0072992700729927005}},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"2":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"3":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"4":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.032520325203252036},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}},"e":{"docs":{},"练":{"docs":{},"习":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}}}}}}}},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}},"docs":{}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"l":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}},"j":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}},")":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}},"f":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.012168141592920354}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}},":":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549}}},",":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":10.016129032258064}},"e":{"docs":{},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}},"*":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.01073345259391771},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}},":":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},"a":{"1":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"2":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"1":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"5":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"docs":{}}}}}}},"s":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{},"c":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"e":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"v":{"docs":{},"e":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"f":{"docs":{},"o":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"s":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{},"）":{"docs":{},"：":{"docs":{},"一":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"自":{"docs":{},"身":{"docs":{},"的":{"docs":{},"边":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},",":{"docs":{},"u":{"docs":{},"p":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"=":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}},"g":{"1":{"0":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"docs":{}},"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},":":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},":":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}},"p":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"3":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{"./":{"ref":"./","tf":0.058823529411764705},"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"实":{"docs":{},"现":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}},"内":{"docs":{},"置":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"用":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"向":{"docs":{},"栈":{"docs":{},"顶":{"docs":{},"添":{"docs":{},"加":{"docs":{},"元":{"docs":{},"素":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":10}}}}}}},"中":{"docs":{},"栈":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"类":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"想":{"docs":{},"要":{"docs":{},"在":{"docs":{},"实":{"docs":{},"现":{"docs":{},"在":{"docs":{},"容":{"docs":{},"器":{"docs":{},"两":{"docs":{},"端":{"docs":{},"更":{"docs":{},"快":{"docs":{},"速":{"docs":{},"地":{"docs":{},"进":{"docs":{},"行":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"和":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"比":{"docs":{},"列":{"docs":{},"表":{"docs":{},"更":{"docs":{},"合":{"docs":{},"适":{"docs":{},"．":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"供":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"和":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"而":{"docs":{},"列":{"docs":{},"表":{"docs":{},"则":{"docs":{},"需":{"docs":{},"要":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},".":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"用":{"docs":{},"数":{"docs":{},"学":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"算":{"docs":{},"术":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{"实用文档/":{"ref":"实用文档/","tf":0.2}}}},"i":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"实用文档/":{"ref":"实用文档/","tf":0.2}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.012168141592920354}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}},"(":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"'":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00663716814159292}}}}}}}},"q":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"e":{"docs":{},",":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},">":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},">":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}}}}}}},"m":{"docs":{},"y":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},">":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}}}}}}}},"e":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.03041144901610018},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.03225806451612903}},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},":":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.005366726296958855}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}},"=":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"*":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"s":{"docs":{},"h":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"/":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}},"o":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"e":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"s":{"docs":{},"[":{"8":{"docs":{},"]":{"docs":{},"[":{"7":{"docs":{},"]":{"docs":{},"=":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}}}},"docs":{}},"i":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"w":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"i":{"docs":{},"s":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}},"q":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.020833333333333332}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"*":{"docs":{},"i":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}},"k":{"docs":{},"v":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"[":{"docs":{},":":{"docs":{},"j":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}}}}},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.04736842105263158}}}},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"支":{"docs":{},"持":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.058823529411764705},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.009433962264150943}}}}},"=":{"docs":{},"m":{"docs":{},"p":{"docs":{},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"[":{"docs":{},"o":{"docs":{},"p":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}},"docs":{}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}}},"u":{"docs":{},"e":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.03684210526315789},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.007743362831858407}},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.010948905109489052}},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"3":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"4":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"5":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"7":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}},"*":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}},"l":{"1":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}},"2":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}},"3":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}},"4":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}},"5":{"docs":{},"=":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"docs":{}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"=":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"=":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"m":{"docs":{},"p":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.014311270125223614},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}},"o":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.006289308176100629}},"k":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.009433962264150943},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.023809523809523808},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.016260162601626018}},"{":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},":":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.023809523809523808}}},"。":{"docs":{},"找":{"docs":{},"出":{"docs":{},"给":{"docs":{},"定":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"和":{"docs":{},"结":{"docs":{},"束":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}},"j":{"docs":{},"a":{"docs":{},"n":{"docs":{"算法题/1-Algorithm/1-Graph_Theory/tarjan.html":{"ref":"算法题/1-Algorithm/1-Graph_Theory/tarjan.html","tf":10}}}}}},"k":{"docs":{},"e":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"/":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},"o":{"docs":{},"w":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}},"+":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},"1":{"docs":{},"]":{"docs":{},"+":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},"2":{"docs":{},"]":{"docs":{},"+":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},"docs":{},"a":{"docs":{},"%":{"3":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}},"docs":{}}},"b":{"docs":{},"%":{"3":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}},"docs":{}}},"c":{"docs":{},"%":{"3":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}},"docs":{}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"&":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.006289308176100629}}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"w":{"docs":{},"o":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"一":{"docs":{},"些":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"编":{"docs":{},"程":{"docs":{},"模":{"docs":{},"板":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}}}}}}}},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"因":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"只":{"docs":{},"有":{"docs":{},"在":{"docs":{},"该":{"docs":{},"数":{"docs":{},"为":{"docs":{},"完":{"docs":{},"全":{"docs":{},"平":{"docs":{},"方":{"docs":{},"数":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"才":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"序":{"docs":{},"列":{"docs":{},"、":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"或":{"docs":{},"其":{"docs":{},"他":{"docs":{},"支":{"docs":{},"持":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},";":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"介":{"docs":{},"绍":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}},"一":{"docs":{},"种":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}},"内":{"docs":{},"容":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}},"双":{"docs":{},"语":{"docs":{},"言":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}}}},"向":{"docs":{},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}}}},"组":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"只":{"docs":{},"存":{"docs":{},"储":{"docs":{},"单":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{},"除":{"docs":{},"了":{"docs":{},"整":{"docs":{},"数":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"非":{"docs":{},"负":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"在":{"docs":{},"该":{"docs":{},"数":{"docs":{},"的":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"加":{"docs":{},"一":{"docs":{},"。":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{},"数":{"docs":{},"字":{"docs":{},"存":{"docs":{},"放":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"首":{"docs":{},"位":{"docs":{},"，":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}},"最":{"docs":{},"大":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"的":{"docs":{},"获":{"docs":{},"取":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}}}}}},"论":{"docs":{},"：":{"docs":{},"因":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}},"的":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},"一":{"docs":{},"些":{"docs":{},"小":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"和":{"docs":{},"细":{"docs":{},"节":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}}}}}}},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"知":{"docs":{},"道":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"操":{"docs":{},"作":{"docs":{},"将":{"docs":{},"会":{"docs":{},"使":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"出":{"docs":{},"现":{"docs":{},"超":{"docs":{},"过":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}},"数":{"docs":{},"字":{"docs":{},"（":{"docs":{},"并":{"docs":{},"且":{"docs":{},"假":{"docs":{},"设":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"一":{"docs":{},"定":{"docs":{},"存":{"docs":{},"在":{"docs":{},"）":{"docs":{},"。":{"docs":{},"依":{"docs":{},"次":{"docs":{},"从":{"docs":{},"序":{"docs":{},"列":{"docs":{},"里":{"docs":{},"选":{"docs":{},"择":{"docs":{},"两":{"docs":{},"个":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"删":{"docs":{},"除":{"docs":{},"掉":{"docs":{},"（":{"docs":{},"或":{"docs":{},"称":{"docs":{},"为":{"docs":{},"「":{"docs":{},"抵":{"docs":{},"消":{"docs":{},"」":{"docs":{},"）":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"或":{"docs":{},"几":{"docs":{},"个":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"总":{"docs":{},"数":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"那":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"我":{"docs":{},"们":{"docs":{},"当":{"docs":{},"前":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"存":{"docs":{},"在":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"总":{"docs":{},"数":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"均":{"docs":{},"摊":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"都":{"docs":{},"是":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"不":{"docs":{},"含":{"docs":{},"有":{"docs":{},"公":{"docs":{},"共":{"docs":{},"字":{"docs":{},"母":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"认":{"docs":{},"为":{"docs":{},"每":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"只":{"docs":{},"包":{"docs":{},"含":{"docs":{},"小":{"docs":{},"写":{"docs":{},"字":{"docs":{},"母":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"相":{"docs":{},"同":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"完":{"docs":{},"成":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"比":{"docs":{},"较":{"docs":{},"（":{"docs":{},"最":{"docs":{},"坏":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"出":{"docs":{},"现":{"docs":{},"频":{"docs":{},"率":{"docs":{},"都":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"两":{"docs":{},"两":{"docs":{},"比":{"docs":{},"较":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"插":{"docs":{},"入":{"docs":{},"到":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}},"候":{"docs":{},"，":{"docs":{},"其":{"docs":{},"他":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}},"必":{"docs":{},"然":{"docs":{},"是":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"部":{"docs":{},"分":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}},"末":{"docs":{},"尾":{"docs":{},"添":{"docs":{},"加":{"docs":{},"字":{"docs":{},"符":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}},"编":{"docs":{},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{},"不":{"docs":{},"会":{"docs":{},"超":{"docs":{},"过":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563}}}}}},"为":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563}}}}}}},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"四":{"docs":{},"舍":{"docs":{},"五":{"docs":{},"入":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"给":{"docs":{},"出":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"目":{"docs":{},"录":{"docs":{"./":{"ref":"./","tf":0.11764705882352941}}}},"算":{"docs":{},"法":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"题":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}},"分":{"docs":{},"三":{"docs":{},"步":{"docs":{},"进":{"docs":{},"行":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}},"认":{"docs":{},"真":{"docs":{},"记":{"docs":{},"录":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"过":{"docs":{},"程":{"docs":{},",":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{"./":{"ref":"./","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"实用文档/":{"ref":"实用文档/","tf":0.2}}}},"r":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},"s":{"docs":{},"e":{"docs":{},"到":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.03361344537815126}}},"和":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"z":{"docs":{},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"z":{"docs":{},"h":{"docs":{},"i":{"docs":{},"h":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"5":{"4":{"5":{"1":{"0":{"4":{"4":{"4":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"3":{"6":{"4":{"7":{"9":{"0":{"0":{"docs":{},"/":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"n":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"z":{"docs":{},"h":{"docs":{},"f":{"docs":{},"e":{"docs":{},"i":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"/":{"2":{"0":{"1":{"3":{"docs":{},"/":{"0":{"1":{"docs":{},"/":{"1":{"4":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"_":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"s":{"docs":{},"y":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"5":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"6":{"6":{"3":{"8":{"6":{"4":{"1":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}}}}},"z":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{},"i":{"docs":{},"n":{"docs":{},"q":{"docs":{},"i":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"9":{"7":{"2":{"9":{"4":{"0":{"6":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"8":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"b":{"5":{"1":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"2":{"0":{"2":{"4":{"7":{"7":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"/":{"docs":{},"b":{"docs":{},"b":{"docs":{},"d":{"2":{"5":{"8":{"docs":{},"f":{"9":{"9":{"docs":{},"f":{"docs":{},"d":{"3":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"3":{"docs":{},"/":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"3":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}}}}}}}},"docs":{},"/":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"o":{"docs":{},"r":{"docs":{},"g":{"docs":{},"/":{"docs":{},"z":{"docs":{},"h":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.012522361359570662},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.03225806451612903}},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807}}},",":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.005366726296958855},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.03225806451612903}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}},":":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.01073345259391771}}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"x":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"实":{"docs":{},"用":{"docs":{},"文":{"docs":{},"档":{"docs":{"实用文档/":{"ref":"实用文档/","tf":10}}}}},"现":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}},"堆":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}},"例":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"!":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},"=":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.012522361359570662},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.04838709677419355}}}},"#":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.018518518518518517},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.015463917525773196},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.03041144901610018},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.023230088495575223}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.01824817518248175},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.012578616352201259}}}}}}}},"!":{"docs":{},"/":{"docs":{},"u":{"docs":{},"s":{"docs":{},"r":{"docs":{},"/":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{},"—":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"(":{"0":{"docs":{},"x":{"1":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},"docs":{}}},"1":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"2":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}}}},"3":{"docs":{},",":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}}}},"4":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.00966183574879227},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"b":{"docs":{},";":{"docs":{},"}":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"1":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.012345679012345678}}},"2":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.012345679012345678}}},"docs":{}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"!":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"[":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"+":{"docs":{},"+":{"1":{"1":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"docs":{}},"docs":{}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}}}}}}},"m":{"docs":{},"+":{"docs":{},"k":{"docs":{},")":{"docs":{},")":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"y":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.015873015873015872}}}}}}}}}}}},"p":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"x":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}},">":{"docs":{},"y":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"n":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.023668639053254437},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},"o":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}}}},"t":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}},"=":{"docs":{},"=":{"docs":{},"i":{"docs":{},"f":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"`":{"docs":{},"a":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"b":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.016771488469601678}}}}}}}},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"*":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.06569343065693431},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.007743362831858407}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}},"r":{"docs":{},"e":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"s":{"docs":{},"s":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"*":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}},"这":{"docs":{},"里":{"docs":{},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"非":{"docs":{},"成":{"docs":{},"员":{"docs":{},"函":{"docs":{},"数":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}},"+":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.04142011834319527},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.03508771929824561},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.058823529411764705},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0055309734513274336}},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}}}}},"c":{"docs":{},"[":{"docs":{},"c":{"docs":{},"h":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}}},"x":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}},"=":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.018518518518518517},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},"a":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"/":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.012345679012345678},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.04142011834319527},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"/":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.009259259259259259},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.026785714285714284},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.030927835051546393},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.03041144901610018},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.08333333333333333},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.01932367149758454},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.0380952380952381},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.025210084033613446},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.06910569105691057},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.010948905109489052},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.025157232704402517},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"如":{"docs":{},"果":{"docs":{},"三":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"均":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"相":{"docs":{},"互":{"docs":{},"抵":{"docs":{},"消":{"1":{"docs":{},"次":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}},"docs":{}}}}}}}}}}}}}}},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"数":{"docs":{},"加":{"1":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}},"docs":{}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"数":{"docs":{},"加":{"1":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}},"docs":{}}}}}}}}}}}}}}}}},"有":{"docs":{},"入":{"docs":{},"度":{"docs":{},"、":{"docs":{},"出":{"docs":{},"度":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}},"向":{"docs":{},"图":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}}}},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}},"a":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"b":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"c":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.023668639053254437}}}}},"u":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"d":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"o":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}},"e":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"f":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"g":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"h":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"剪":{"docs":{},"枝":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"向":{"docs":{},"上":{"docs":{},"取":{"docs":{},"整":{"docs":{},"时":{"docs":{},"，":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"必":{"docs":{},"须":{"docs":{},"减":{"1":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}},"docs":{}}}}}}}}}}}}}},"下":{"docs":{},"取":{"docs":{},"整":{"docs":{},"时":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"必":{"docs":{},"须":{"docs":{},"加":{"1":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}},"docs":{}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"单":{"docs":{},"独":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}},"可":{"docs":{},"以":{"docs":{},"这":{"docs":{},"样":{"docs":{},"理":{"docs":{},"解":{"docs":{},"，":{"docs":{},"在":{"docs":{},"p":{"docs":{},"[":{"docs":{},":":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"d":{"docs":{},"p":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"自":{"docs":{},"动":{"docs":{},"赋":{"docs":{},"值":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"表":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}},"至":{"docs":{},"于":{"docs":{},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.036585365853658534}}}}}}},"向":{"docs":{},"上":{"docs":{},"取":{"docs":{},"整":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}}}},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"右":{"docs":{},"边":{"docs":{},"界":{"docs":{},"的":{"docs":{},"逆":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"针":{"docs":{},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},"此":{"docs":{},"写":{"docs":{},"法":{"docs":{},"会":{"docs":{},"报":{"docs":{},"错":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"由":{"docs":{},"大":{"docs":{},"到":{"docs":{},"小":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"需":{"docs":{},"先":{"docs":{},"将":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"转":{"docs":{},"成":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"*":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}},"*":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}},"*":{"docs":{},"使":{"docs":{},"用":{"docs":{},"重":{"docs":{},"载":{"docs":{},"函":{"docs":{},"数":{"docs":{},"操":{"docs":{},"作":{"docs":{},"符":{"docs":{},"的":{"docs":{},"类":{"docs":{},"对":{"docs":{},"象":{"docs":{},"*":{"docs":{},"/":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"*":{"docs":{},"/":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"下":{"docs":{},"比":{"docs":{},"较":{"docs":{},"函":{"docs":{},"数":{"docs":{},"*":{"docs":{},"/":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"重":{"docs":{},"载":{"docs":{},"小":{"docs":{},"于":{"docs":{},"操":{"docs":{},"作":{"docs":{},"符":{"docs":{},"，":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"这":{"docs":{},"个":{"docs":{},"比":{"docs":{},"较":{"docs":{},"函":{"docs":{},"数":{"docs":{},"原":{"docs":{},"型":{"docs":{},"*":{"docs":{},"/":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}},"=":{"1":{"docs":{},"+":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{},"d":{"docs":{},"[":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"−":{"1":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}},"docs":{}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}},"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.061946902654867256},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.049019607843137254},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.04938271604938271},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.0625},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.04639175257731959},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.030927835051546393},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.034482758620689655},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.11091234347048301},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.13978494623655913},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.04477611940298507},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.027777777777777776},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.05714285714285714},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.0873015873015873},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.01775147928994083},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.05263157894736842},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.11458333333333333},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.054945054945054944},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.06842105263157895},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.025210084033613446},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.06862745098039216},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.06910569105691057},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.032846715328467155},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.08064516129032258},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.025442477876106196}},">":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.029411764705882353}}},"=":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.037037037037037035},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.005366726296958855},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.015873015873015872},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.023668639053254437},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.031578947368421054},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}},"\"":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"\"":{"docs":{},"=":{"docs":{},"=":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"=":{"docs":{},"=":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"=":{"docs":{},"=":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},">":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.05555555555555555},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.020618556701030927},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.020618556701030927},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.017241379310344827},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.01073345259391771},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.023809523809523808},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.047337278106508875},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"=":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.023255813953488372},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}},",":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.023255813953488372},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.06451612903225806}}},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}},"u":{"docs":{},"m":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807}},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}},"!":{"docs":{},"=":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"&":{"docs":{},"&":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.021897810218978103}}},"=":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}},"l":{"5":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"docs":{}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.01824817518248175}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.03225806451612903}},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.010948905109489052}},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}},">":{"docs":{},">":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.07190265486725664}},"a":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"5":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"q":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},",":{"0":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}},"docs":{}}},"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}}}},"1":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}},",":{"2":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},"]":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}},"2":{"4":{"0":{"docs":{},"]":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},"docs":{}},"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}},"docs":{}}},"docs":{}}},"3":{"4":{"docs":{},"]":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},"5":{"docs":{},"]":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}},"docs":{}}},"6":{"docs":{},",":{"5":{"docs":{},",":{"1":{"docs":{},",":{"8":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"4":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}},"docs":{}}},"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"8":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}},"docs":{}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"7":{"4":{"docs":{},"]":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},"docs":{}},"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}}}}}},"]":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}},",":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"(":{"docs":{},"p":{"docs":{},"i":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"\"":{"docs":{},"e":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"g":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"i":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"s":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"u":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"t":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"v":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"x":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"z":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"c":{"docs":{},"w":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"a":{"docs":{},"z":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"n":{"docs":{},"\"":{"docs":{},",":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"“":{"docs":{},"a":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"”":{"docs":{},",":{"docs":{},"”":{"docs":{},"a":{"docs":{},"b":{"docs":{},"”":{"docs":{},",":{"docs":{},"”":{"docs":{},"a":{"docs":{},"a":{"docs":{},"b":{"docs":{},"”":{"docs":{},",":{"docs":{},"”":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"”":{"docs":{},",":{"docs":{},"”":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"”":{"docs":{},",":{"docs":{},"”":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"”":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"1":{"docs":{},",":{"4":{"docs":{},",":{"7":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"5":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"2":{"docs":{},",":{"5":{"docs":{},",":{"8":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"9":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"3":{"docs":{},",":{"6":{"docs":{},",":{"9":{"docs":{},",":{"1":{"6":{"docs":{},",":{"2":{"2":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"0":{"docs":{},",":{"1":{"3":{"docs":{},",":{"1":{"4":{"docs":{},",":{"1":{"7":{"docs":{},",":{"2":{"4":{"docs":{},"]":{"docs":{},",":{"docs":{},"[":{"1":{"8":{"docs":{},",":{"2":{"1":{"docs":{},",":{"2":{"3":{"docs":{},",":{"2":{"6":{"docs":{},",":{"3":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"]":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"'":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"(":{"0":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"1":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}}},"docs":{}},",":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"n":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"=":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"docs":{}}}}}}}},"n":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.035398230088495575},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.026785714285714284},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.030927835051546393},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.031746031746031744},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.07692307692307693},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.07407407407407407},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"u":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0392156862745098},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.043209876543209874},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.02857142857142857},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.041666666666666664},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195}},"s":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.009259259259259259},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549}},"{":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.009259259259259259},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.020833333333333332},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}},"[":{"docs":{},"i":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}}},"的":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"找":{"docs":{},"出":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"能":{"docs":{},"被":{"docs":{},"三":{"docs":{},"整":{"docs":{},"除":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}},";":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.029411764705882353}}},",":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}},";":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}},"o":{"docs":{},"f":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}},":":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.017889087656529516},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807}}}}}},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}},"/":{"3":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}},"docs":{}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}}}},".":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196}}},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}},"*":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.01073345259391771}}}}},"n":{"docs":{},"e":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}},":":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}},"e":{"docs":{},"x":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":10}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"e":{"docs":{},"w":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.021897810218978103}}},"x":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.008944543828264758},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"d":{"docs":{},"”":{"docs":{},"。":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"行":{"docs":{},"中":{"docs":{},"，":{"docs":{},"您":{"docs":{},"必":{"docs":{},"须":{"docs":{},"在":{"docs":{},"这":{"docs":{},"些":{"docs":{},"移":{"docs":{},"动":{"docs":{},"后":{"docs":{},"输":{"docs":{},"出":{"docs":{},"中":{"docs":{},"心":{"docs":{},"方":{"docs":{},"块":{"docs":{},"中":{"docs":{},"的":{"docs":{},"块":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"多":{"docs":{},"种":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"则":{"docs":{},"必":{"docs":{},"须":{"docs":{},"输":{"docs":{},"出":{"docs":{},"使":{"docs":{},"用":{"docs":{},"最":{"docs":{},"少":{"docs":{},"移":{"docs":{},"动":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"仍":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"，":{"docs":{},"则":{"docs":{},"必":{"docs":{},"须":{"docs":{},"输":{"docs":{},"出":{"docs":{},"字":{"docs":{},"典":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"案":{"docs":{},"例":{"docs":{},"之":{"docs":{},"间":{"docs":{},"输":{"docs":{},"出":{"docs":{},"空":{"docs":{},"行":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"$":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"此":{"docs":{},"问":{"docs":{},"题":{"docs":{},"吗":{"docs":{},"？":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}},":":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"情":{"docs":{},"况":{"docs":{},"二":{"docs":{},"的":{"docs":{},"判":{"docs":{},"别":{"docs":{},"省":{"docs":{},"略":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"o":{"docs":{},"n":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"e":{"docs":{},"/":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"此":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}},"。":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}},"docs":{},"n":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}},"、":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}},"k":{"docs":{},")":{"docs":{},"$":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}},";":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"*":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},")":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"p":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}},"*":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.00966183574879227}}}}},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"r":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.028455284552845527}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"docs":{},"n":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}},")":{"docs":{},")":{"docs":{},":":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}},"k":{"docs":{},")":{"docs":{},":":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},")":{"docs":{},":":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.012522361359570662},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{},"i":{"docs":{},",":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"5":{"0":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"g":{"docs":{},"h":{"docs":{},"i":{"docs":{},"j":{"docs":{},"k":{"docs":{},"l":{"docs":{},"m":{"docs":{},"n":{"docs":{},"o":{"docs":{},"p":{"docs":{},"q":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"v":{"docs":{},"w":{"docs":{},"x":{"docs":{},"y":{"docs":{},"z":{"docs":{},"!":{"docs":{},"@":{"docs":{},"#":{"docs":{},"$":{"docs":{},"%":{"docs":{},"^":{"docs":{},"&":{"docs":{},"*":{"docs":{},"(":{"docs":{},")":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"'":{"docs":{},"剪":{"docs":{},"刀":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"z":{"docs":{},"y":{"docs":{},"x":{"docs":{},"w":{"docs":{},"v":{"docs":{},"u":{"docs":{},"t":{"docs":{},"s":{"docs":{},"r":{"docs":{},"q":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"l":{"docs":{},"k":{"docs":{},"j":{"docs":{},"i":{"docs":{},"h":{"docs":{},"g":{"docs":{},"f":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"'":{"docs":{},",":{"5":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}}}}}}}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195}},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"从":{"0":{"docs":{},"到":{"docs":{},"最":{"docs":{},"大":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}},"e":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.049019607843137254},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.026785714285714284},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.02577319587628866},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.008944543828264758},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.029850746268656716}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.035398230088495575},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.029411764705882353},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.026785714285714284},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.015463917525773196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.015463917525773196},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.0603448275862069},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.028622540250447227},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.0380952380952381},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.031746031746031744},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.04142011834319527},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.037037037037037035},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.029411764705882353},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.02032520325203252},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0072992700729927005},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.03225806451612903},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.010482180293501049}},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}},"s":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},",":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"docs":{}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},",":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"[":{"9":{"docs":{},"]":{"docs":{},"=":{"docs":{},"{":{"5":{"docs":{},",":{"4":{"docs":{},",":{"7":{"docs":{},",":{"6":{"docs":{},",":{"1":{"docs":{},",":{"0":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}}}},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}},"docs":{}}}}}}}},"o":{"docs":{},"v":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"o":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.04201680672268908}},"o":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0072992700729927005}},")":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}},"{":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}},",":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}},"s":{"docs":{},"的":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{},"不":{"docs":{},"会":{"docs":{},"超":{"docs":{},"过":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}},"变":{"docs":{},"为":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}},"的":{"docs":{},"编":{"docs":{},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{},"为":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"x":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},")":{"docs":{},"{":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}},"]":{"docs":{},"划":{"docs":{},"分":{"docs":{},"成":{"docs":{},"[":{"docs":{},"l":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}}}}}},"时":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"'":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}},"/":{"docs":{},"r":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"（":{"docs":{},"可":{"docs":{},"以":{"docs":{},"大":{"docs":{},"小":{"docs":{},"写":{"docs":{},"）":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"与":{"docs":{},"普":{"docs":{},"通":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"有":{"docs":{},"着":{"docs":{},"几":{"docs":{},"乎":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"语":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"1":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0072992700729927005},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}},"r":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}},"t":{"docs":{},"d":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},":":{"docs":{},":":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.010948905109489052}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"_":{"docs":{},"_":{"docs":{},"n":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"g":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"(":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"s":{"docs":{},"[":{"5":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"docs":{}}}}}},"docs":{}}},"x":{"docs":{},",":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}},"r":{"2":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"3":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"i":{"docs":{},"n":{"docs":{},"g":{"2":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}},"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.008385744234800839},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},":":{"docs":{},":":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"u":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"(":{"docs":{},"\"":{"5":{"6":{"7":{"8":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}},"=":{"docs":{},"\"":{"docs":{},"w":{"docs":{},"e":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"a":{"docs":{},"r":{"docs":{},"）":{"docs":{},"算":{"docs":{},"法":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"很":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"查":{"docs":{},"找":{"docs":{},"和":{"docs":{},"图":{"docs":{},"形":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"它":{"docs":{},"有":{"docs":{},"较":{"docs":{},"好":{"docs":{},"的":{"docs":{},"性":{"docs":{},"能":{"docs":{},"和":{"docs":{},"准":{"docs":{},"确":{"docs":{},"度":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},"=":{"1":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"docs":{}}}},"c":{"docs":{},"k":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.006289308176100629},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.008849557522123894}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"!":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"!":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"'":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"p":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},"[":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"（":{"0":{"docs":{},"，":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}}}}}}}}}}}},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"{":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"e":{"docs":{},"p":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.02586206896551724}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}},":":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}},"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0392156862745098}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}},",":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}},"j":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}},",":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":5},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.016260162601626018}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{},"&":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"(":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"(":{"docs":{},"l":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"s":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},")":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"[":{"docs":{},"i":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.015789473684210527}},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}},":":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.00966183574879227}}}},"e":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"向":{"docs":{},"下":{"docs":{},"取":{"docs":{},"整":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}},"+":{"0":{"docs":{},".":{"5":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}},"docs":{}}},"docs":{}}},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"/":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}},"a":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{},":":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}},"=":{"4":{"docs":{},"}":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}},"docs":{}},"_":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"y":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}},"u":{"docs":{},"m":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}},"t":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"c":{"docs":{},"h":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"在":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.008385744234800839}},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}},"v":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.03608247422680412},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.029411764705882353},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.008385744234800839},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},">":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"(":{"docs":{},"n":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806}}}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"a":{"docs":{},"l":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.02586206896551724}},"u":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"e":{"1":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"2":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}},"元":{"docs":{},"组":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},":":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"叫":{"docs":{},"中":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}},")":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.04838709677419355}},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"1":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.027777777777777776}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}}}},",":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}},"2":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.030864197530864196}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}}}}},"docs":{}}},"i":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.020618556701030927},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"f":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}},"[":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}}}}}}}}}}}}},":":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},"(":{"docs":{},"m":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},",":{"docs":{},"m":{"docs":{},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"+":{"8":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"docs":{}}}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}}},"{":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},"1":{"0":{"docs":{},",":{"2":{"0":{"docs":{},",":{"3":{"0":{"docs":{},",":{"3":{"0":{"docs":{},",":{"2":{"0":{"docs":{},",":{"1":{"0":{"docs":{},",":{"1":{"0":{"docs":{},",":{"2":{"0":{"docs":{},"}":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},",":{"3":{"docs":{},"}":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.035398230088495575},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.040123456790123455},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.044642857142857144},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.061855670103092786},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.04310344827586207},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.026833631484794274},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.03225806451612903},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.029850746268656716},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.020833333333333332},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.057971014492753624},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.047619047619047616},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.03550295857988166},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.037037037037037035},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.03508771929824561},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.020833333333333332},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.03296703296703297},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0392156862745098},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.024390243902439025},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.025547445255474453},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.04838709677419355},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.008385744234800839}},"}":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},";":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}}},"/":{"docs":{},"/":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}},"'":{"docs":{},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"1":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}}}},"}":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.02654867256637168},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.037037037037037035},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.08035714285714286},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.02577319587628866},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.06896551724137931},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.01967799642218247},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.05223880597014925},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.041666666666666664},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.01932367149758454},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.0380952380952381},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.03968253968253968},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.029585798816568046},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.0196078431372549},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.036585365853658534},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.072992700729927},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.03225806451612903},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},";":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045},"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0072992700729927005},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.028985507246376812}}},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.01824817518248175}}}}}},"中":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"均":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787}}}}}}}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"返":{"docs":{},"回":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"才":{"docs":{},"开":{"docs":{},"始":{"docs":{},"处":{"docs":{},"理":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}},"等":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}},"最":{"docs":{},"长":{"docs":{},"等":{"docs":{},"差":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"该":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"差":{"docs":{},"等":{"docs":{},"于":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"：":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"知":{"docs":{},"道":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"不":{"docs":{},"会":{"docs":{},"以":{"docs":{},"零":{"docs":{},"开":{"docs":{},"头":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}}}}}}}},"间":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.017699115044247787},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.015873015873015872},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.037037037037037035},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.020833333333333332},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"表":{"docs":{},"目":{"docs":{},"标":{"docs":{},"在":{"docs":{},"左":{"docs":{},"边":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}}}}}}},"加":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"一":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":10}}}},"技":{"docs":{},"巧":{"docs":{},"总":{"docs":{},"结":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}},"描":{"docs":{},"述":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0055309734513274336}}}},"整":{"docs":{},"数":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}},"二":{"docs":{},"分":{"docs":{},"模":{"docs":{},"板":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}},"替":{"docs":{},"换":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":10.005917159763314}}}}},"除":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}}},"个":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}},"本":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"只":{"docs":{},"和":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"9":{"docs":{},"有":{"docs":{},"关":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}},"docs":{}}}}}}}}}}}},"采":{"docs":{},"用":{"docs":{},"逆":{"docs":{},"向":{"docs":{},"思":{"docs":{},"维":{"docs":{},"，":{"docs":{},"n":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}},"的":{"docs":{},"难":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"多":{"docs":{},"出":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"同":{"docs":{},"过":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"无":{"docs":{},"法":{"docs":{},"完":{"docs":{},"成":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}},"文":{"docs":{},"档":{"docs":{},"记":{"docs":{},"录":{"docs":{},"一":{"docs":{},"些":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"相":{"docs":{},"关":{"docs":{},"概":{"docs":{},"念":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}},"同":{"docs":{},"所":{"docs":{},"需":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"步":{"docs":{},"数":{"docs":{},"，":{"docs":{},"每":{"docs":{},"步":{"docs":{},"可":{"docs":{},"以":{"docs":{},"删":{"docs":{},"除":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}}},"反":{"docs":{},"，":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},"*":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"比":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}},"由":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}},"数":{"docs":{},"组":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"数":{"docs":{},"组":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}},"按":{"docs":{},"照":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"其":{"docs":{},"索":{"docs":{},"引":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"它":{"docs":{},"将":{"docs":{},"会":{"docs":{},"被":{"docs":{},"按":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"插":{"docs":{},"入":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}},"单":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"删":{"docs":{},"除":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}},"一":{"docs":{},"非":{"docs":{},"空":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"前":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}},"解":{"docs":{},"释":{"docs":{},"：":{"7":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"组":{"docs":{},"表":{"docs":{},"示":{"docs":{},"数":{"docs":{},"字":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}}}}},"选":{"docs":{},"出":{"docs":{},"数":{"docs":{},"字":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}},":":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.022388059701492536}}}},"析":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}},"输":{"docs":{},"入":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023}},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}}},"n":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}},"u":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}},":":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.022388059701492536}}},"包":{"docs":{},"含":{"docs":{},"不":{"docs":{},"超":{"docs":{},"过":{"3":{"0":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"行":{"docs":{},"包":{"docs":{},"含":{"2":{"4":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"初":{"docs":{},"始":{"docs":{},"配":{"docs":{},"置":{"docs":{},"中":{"docs":{},"块":{"docs":{},"的":{"docs":{},"符":{"docs":{},"号":{"docs":{},"。":{"docs":{},"块":{"docs":{},"的":{"docs":{},"行":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"列":{"docs":{},"出":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"，":{"docs":{},"块":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"列":{"docs":{},"出":{"docs":{},"。":{"docs":{},"数":{"docs":{},"字":{"docs":{},"用":{"docs":{},"空":{"docs":{},"格":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"样":{"docs":{},"例":{"docs":{},"输":{"docs":{},"入":{"docs":{},"中":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"对":{"docs":{},"应":{"docs":{},"于":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"配":{"docs":{},"置":{"docs":{},"。":{"docs":{},"案":{"docs":{},"件":{"docs":{},"之":{"docs":{},"间":{"docs":{},"没":{"docs":{},"有":{"docs":{},"空":{"docs":{},"行":{"docs":{},"。":{"docs":{},"在":{"docs":{},"结":{"docs":{},"束":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"行":{"docs":{},"包":{"docs":{},"含":{"docs":{},"单":{"docs":{},"个":{"docs":{},"“":{"0":{"docs":{},"”":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}},"出":{"docs":{},"：":{"1":{"8":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}},"docs":{}},"3":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}},"4":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"docs":{},"[":{"1":{"docs":{},",":{"2":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}},"docs":{}}},"docs":{}}},"docs":{}},"\"":{"0":{"1":{"2":{"docs":{},"\"":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}},"docs":{}},"docs":{}},"4":{"5":{"docs":{},"\"":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}},"docs":{}},"docs":{}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}},":":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.022388059701492536}}},"答":{"docs":{},"案":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},"结":{"docs":{},"果":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00995575221238938}},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}},"链":{"docs":{},"接":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}},"表":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":10}},"模":{"docs":{},"板":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}}},"非":{"docs":{},"空":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}},"题":{"docs":{},"目":{"docs":{},"：":{"2":{"4":{"0":{"docs":{},".":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}},"docs":{}},"docs":{}},"3":{"1":{"9":{"docs":{},".":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}},"docs":{}},"docs":{}},"4":{"5":{"3":{"docs":{},".":{"docs":{},"最":{"docs":{},"小":{"docs":{},"操":{"docs":{},"作":{"docs":{},"次":{"docs":{},"数":{"docs":{},"使":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"相":{"docs":{},"等":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"6":{"6":{"docs":{},".":{"docs":{},"加":{"docs":{},"一":{"docs":{"算法题/0-DataStructure/0-Vector/加一.html":{"ref":"算法题/0-DataStructure/0-Vector/加一.html","tf":0.008849557522123894}}}}}},"docs":{}},"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}},"最":{"docs":{},"长":{"docs":{},"定":{"docs":{},"差":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}},"列":{"docs":{},"表":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}},"解":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.029850746268656716},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}},"e":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"1":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.009259259259259259}},")":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}},",":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}}},"2":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.012345679012345678}},")":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}},":":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}}},"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.01781970649895178},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0055309734513274336}},"s":{"docs":{},"/":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}}}}},"i":{"docs":{},"f":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.009259259259259259}}}},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},"{":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}},"s":{"docs":{},"）":{"docs":{},"：":{"docs":{},"两":{"docs":{},"个":{"docs":{},"顶":{"docs":{},"点":{"docs":{},"之":{"docs":{},"间":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"条":{"docs":{},"边":{"docs":{},"相":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"t":{"docs":{},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.006289308176100629}}},"y":{"docs":{},":":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},":":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.022388059701492536},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"&":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},">":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"[":{"2":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}},"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"]":{"docs":{},"=":{"docs":{},"'":{"docs":{},"\\":{"0":{"docs":{},"'":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.007337526205450734}}},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"[":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"a":{"docs":{},"g":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"e":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"o":{"docs":{},"z":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}},"n":{"docs":{},"c":{"docs":{},"(":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.027253668763102725},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"m":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.020833333333333332},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563}},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"x":{"1":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.0196078431372549}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"e":{"docs":{},";":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"d":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.02857142857142857}},"+":{"1":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}},"docs":{}},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}},"]":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.029197080291970802}},"=":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"f":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"a":{"docs":{},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}},"docs":{}}}}}},"p":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"[":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"]":{"docs":{},",":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"[":{"docs":{},"a":{"docs":{},"%":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"a":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}},"docs":{}}},"b":{"docs":{},"%":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}},"docs":{}}},"c":{"docs":{},"%":{"3":{"docs":{},"]":{"docs":{},",":{"docs":{},"c":{"docs":{},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}},"docs":{}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"x":{"1":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}},"|":{"docs":{},"|":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"+":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},">":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"/":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.017241379310344827}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}},"、":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}},":":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"p":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}},"]":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.005366726296958855}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.015873015873015872},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.008130081300813009}},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}},":":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}}}},"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"y":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.015873015873015872}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}},"(":{"docs":{},")":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"{":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"n":{"docs":{},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"_":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"m":{"docs":{},"o":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"{":{"0":{"docs":{},",":{"1":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}},"docs":{}}},"docs":{}}}}}}}},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"[":{"docs":{},"n":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219}},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0220125786163522}}}}}}},"p":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.014925373134328358},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},";":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"[":{"2":{"4":{"docs":{},"]":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}},"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.014925373134328358}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888}}}}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"$":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}},")":{"docs":{},"$":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888}}}}}}},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}},"y":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"[":{"docs":{},"]":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"。":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},"返":{"docs":{},"回":{"docs":{},"让":{"docs":{},"数":{"docs":{},"组":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"操":{"docs":{},"作":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}},"增":{"docs":{},"加":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}},"（":{"docs":{},"即":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"大":{"docs":{},"小":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}},"灯":{"docs":{},"泡":{"docs":{},"处":{"docs":{},"于":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"，":{"docs":{},"你":{"docs":{},"将":{"docs":{},"会":{"docs":{},"打":{"docs":{},"开":{"docs":{},"所":{"docs":{},"有":{"docs":{},"灯":{"docs":{},"泡":{"docs":{},"。":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"的":{"docs":{},"第":{"docs":{},"二":{"docs":{},"轮":{"docs":{},"，":{"docs":{},"你":{"docs":{},"将":{"docs":{},"会":{"docs":{},"每":{"docs":{},"两":{"docs":{},"个":{"docs":{},"灯":{"docs":{},"泡":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"一":{"docs":{},"个":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"切":{"docs":{},"换":{"docs":{},"一":{"docs":{},"个":{"docs":{},"灯":{"docs":{},"泡":{"docs":{},"的":{"docs":{},"开":{"docs":{},"关":{"docs":{},"。":{"docs":{},"直":{"docs":{},"到":{"docs":{},"第":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"只":{"docs":{},"需":{"docs":{},"要":{"3":{"docs":{},"次":{"docs":{},"操":{"docs":{},"作":{"docs":{},"（":{"docs":{},"注":{"docs":{},"意":{"docs":{},"每":{"docs":{},"次":{"docs":{},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"增":{"docs":{},"加":{"docs":{},"两":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"值":{"docs":{},"）":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"方":{"docs":{},"法":{"docs":{},"需":{"docs":{},"要":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}}},"一":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}},"·":{"docs":{},"普":{"docs":{},"通":{"docs":{},"递":{"docs":{},"归":{"docs":{},"算":{"docs":{},"法":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}}}}}},"二":{"docs":{},"：":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"+":{"docs":{},"拆":{"docs":{},"分":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}},"递":{"docs":{},"归":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"递":{"docs":{},"归":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}},"直":{"docs":{},"接":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"求":{"docs":{},"取":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":0.00980392156862745}}}}}},"操":{"docs":{},"作":{"docs":{},"次":{"docs":{},"数":{"docs":{},"使":{"docs":{},"数":{"docs":{},"组":{"docs":{},"元":{"docs":{},"素":{"docs":{},"相":{"docs":{},"等":{"docs":{"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"ref":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","tf":10}}}}}}}}}}}}}},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{},"是":{"docs":{},"指":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"到":{"docs":{},"最":{"docs":{},"远":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"路":{"docs":{},"径":{"docs":{},"上":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"总":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"词":{"docs":{},"长":{"docs":{},"度":{"docs":{},"乘":{"docs":{},"积":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":10.007462686567164}}}}}}}}},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"，":{"docs":{},"如":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"交":{"docs":{},"通":{"docs":{},"运":{"docs":{},"输":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"从":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}},"要":{"docs":{},"考":{"docs":{},"察":{"docs":{},"一":{"docs":{},"张":{"docs":{},"图":{"docs":{},"的":{"docs":{},"连":{"docs":{},"通":{"docs":{},"性":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"自":{"docs":{},"环":{"docs":{},"边":{"docs":{},"和":{"docs":{},"平":{"docs":{},"行":{"docs":{},"边":{"docs":{},"都":{"docs":{},"不":{"docs":{},"会":{"docs":{},"改":{"docs":{},"变":{"docs":{},"这":{"docs":{},"张":{"docs":{},"图":{"docs":{},"的":{"docs":{},"连":{"docs":{},"通":{"docs":{},"性":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"嵌":{"docs":{},"套":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"（":{"docs":{},"此":{"docs":{},"时":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"独":{"docs":{},"立":{"docs":{},"组":{"docs":{},"合":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"上":{"docs":{},"图":{"docs":{},"中":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"独":{"docs":{},"立":{"docs":{},"组":{"docs":{},"合":{"docs":{},"）":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"块":{"docs":{},"随":{"docs":{},"放":{"docs":{},"在":{"docs":{},"板":{"docs":{},"子":{"docs":{},"上":{"docs":{},"，":{"docs":{},"你":{"docs":{},"的":{"docs":{},"目":{"docs":{},"标":{"docs":{},"是":{"docs":{},"移":{"docs":{},"动":{"docs":{},"块":{"docs":{},"，":{"docs":{},"使":{"docs":{},"放":{"docs":{},"置":{"docs":{},"在":{"docs":{},"中":{"docs":{},"心":{"docs":{},"方":{"docs":{},"块":{"docs":{},"的":{"docs":{},"八":{"docs":{},"个":{"docs":{},"块":{"docs":{},"具":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"符":{"docs":{},"号":{"docs":{},"标":{"docs":{},"记":{"docs":{},"。":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"种":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"有":{"docs":{},"效":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"即":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"四":{"docs":{},"条":{"docs":{},"线":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"条":{"docs":{},"，":{"docs":{},"每":{"docs":{},"条":{"docs":{},"线":{"docs":{},"由":{"docs":{},"七":{"docs":{},"个":{"docs":{},"块":{"docs":{},"组":{"docs":{},"成":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"线":{"docs":{},"中":{"docs":{},"的":{"docs":{},"六":{"docs":{},"个":{"docs":{},"块":{"docs":{},"向":{"docs":{},"头":{"docs":{},"部":{"docs":{},"移":{"docs":{},"动":{"docs":{},"一":{"docs":{},"个":{"docs":{},"块":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"头":{"docs":{},"块":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"线":{"docs":{},"的":{"docs":{},"末":{"docs":{},"端":{"docs":{},"。":{"docs":{},"八":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"用":{"docs":{},"大":{"docs":{},"写":{"docs":{},"字":{"docs":{},"母":{"docs":{},"a":{"docs":{},"到":{"docs":{},"h":{"docs":{},"标":{"docs":{},"记":{"docs":{},"。":{"docs":{},"图":{"docs":{},"示":{"docs":{},"出":{"docs":{},"了":{"docs":{},"两":{"docs":{},"个":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"移":{"docs":{},"动":{"docs":{},"a":{"docs":{},"和":{"docs":{},"移":{"docs":{},"动":{"docs":{},"c":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"，":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"、":{"docs":{},"最":{"docs":{},"优":{"docs":{},"性":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"、":{"docs":{},"可":{"docs":{},"行":{"docs":{},"性":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"近":{"docs":{},"迷":{"docs":{},"上":{"docs":{},"了":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"。":{"docs":{},"旋":{"docs":{},"转":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"使":{"docs":{},"用":{"docs":{},"＃":{"docs":{},"形":{"docs":{},"板":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"容":{"docs":{},"纳":{"2":{"4":{"docs":{},"块":{"docs":{},"方":{"docs":{},"块":{"docs":{},"（":{"docs":{},"见":{"docs":{},"图":{"docs":{},"）":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"块":{"docs":{},"标":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"1":{"docs":{},",":{"2":{"docs":{},"和":{"3":{"docs":{},"，":{"docs":{},"每":{"docs":{},"种":{"docs":{},"正":{"docs":{},"好":{"docs":{},"有":{"8":{"docs":{},"个":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"定":{"docs":{},"差":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":10}}}}}}}},"值":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"$":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}},"\\":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"{":{"1":{"docs":{},"}":{"docs":{},"{":{"2":{"docs":{},"}":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}},"docs":{}}}},"docs":{}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"{":{"docs":{},"d":{"docs":{},"p":{"docs":{},"}":{"docs":{},"$":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"}":{"docs":{},"_":{"2":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}},"[":{"0":{"docs":{},":":{"docs":{},"j":{"docs":{},"]":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"k":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}},"n":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"为":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}},"u":{"docs":{},"m":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}},"$":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}},"+":{"1":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}},"docs":{}}},"x":{"docs":{},"$":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"为":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"总":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}},"y":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}},"$":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}},"，":{"docs":{},"则":{"docs":{},"此":{"docs":{},"时":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.02577319587628866}},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"$":{"docs":{},"）":{"docs":{},"添":{"docs":{},"加":{"docs":{},"至":{"docs":{},"列":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}},"=":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}},"docs":{}}}}}}},"i":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}},"=":{"0":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}},"docs":{}}},"o":{"docs":{},"(":{"2":{"docs":{},"n":{"docs":{},")":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}},"docs":{},"n":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}},"$":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},"：":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}},"l":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}},"中":{"docs":{},"最":{"docs":{},"多":{"docs":{},"同":{"docs":{},"时":{"docs":{},"存":{"docs":{},"储":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}},"内":{"docs":{},"所":{"docs":{},"有":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"占":{"docs":{},"用":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}},"$":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"尾":{"docs":{},"部":{"docs":{},"；":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"长":{"docs":{},"度":{"docs":{},"；":{"docs":{},"线":{"docs":{},"性":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"列":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}},"：":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"；":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"最":{"docs":{},"多":{"docs":{},"仅":{"docs":{},"入":{"docs":{},"队":{"docs":{},"和":{"docs":{},"出":{"docs":{},"队":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"单":{"docs":{},"调":{"docs":{},"队":{"docs":{},"列":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888}},"$":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},"$":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.00966183574879227},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.03361344537815126}}},"m":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}},"+":{"1":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}},"docs":{}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}},"。":{"docs":{},"该":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"具":{"docs":{},"有":{"docs":{},"以":{"docs":{},"下":{"docs":{},"特":{"docs":{},"性":{"docs":{},"：":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}}}}}},"&":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"&":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.018518518518518517},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},">":{"docs":{},"d":{"docs":{},"q":{"docs":{},".":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}},"a":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}},"b":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},"k":{"docs":{},"v":{"docs":{},":":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}},";":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"?":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}},"\\":{"docs":{},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"{":{"docs":{},"n":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}},"}":{"docs":{},"{":{"2":{"docs":{},"}":{"docs":{},"$":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{},"我":{"docs":{},"们":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"推":{"docs":{},"理":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"l":{"docs":{},"e":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}},"o":{"docs":{},"g":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.020833333333333332}}}}},"g":{"docs":{},"e":{"docs":{},"q":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"i":{"docs":{},"n":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.0625},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"{":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"}":{"docs":{},"_":{"1":{"docs":{},"[":{"0":{"docs":{},":":{"docs":{},"i":{"docs":{},"]":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"{":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"}":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"{":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"}":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}},"k":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},"}":{"docs":{},"{":{"2":{"docs":{},"}":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}},"docs":{}}},")":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},",":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"$":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},",":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}},":":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}}},"]":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},"$":{"docs":{},"，":{"docs":{},"右":{"docs":{},"边":{"docs":{},"界":{"docs":{},"范":{"docs":{},"围":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}},"，":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"里":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}},"e":{"docs":{},"y":{"2":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"=":{"docs":{},">":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"x":{"2":{"docs":{},",":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}},"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.023809523809523808},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0055309734513274336}},"}":{"docs":{},"{":{"2":{"docs":{},"}":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}},"docs":{}}},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}},")":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},":":{"1":{"0":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}},"2":{"0":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}},"docs":{}},"=":{"1":{"0":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"docs":{}},"docs":{}},">":{"docs":{},"y":{"docs":{},";":{"docs":{},"}":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"*":{"docs":{},"*":{"docs":{},"i":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"即":{"docs":{},"在":{"docs":{},"用":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"建":{"docs":{},"立":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"对":{"docs":{},"应":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"小":{"docs":{},"顶":{"docs":{},"堆":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}},"排":{"docs":{},"序":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}},"因":{"docs":{},"该":{"docs":{},"满":{"docs":{},"足":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}},"为":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"可":{"docs":{},"能":{"docs":{},"指":{"docs":{},"向":{"docs":{},"一":{"docs":{},"个":{"docs":{},"暂":{"docs":{},"时":{"docs":{},"还":{"docs":{},"没":{"docs":{},"有":{"docs":{},"创":{"docs":{},"建":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"可":{"docs":{},"以":{"docs":{},"维":{"docs":{},"护":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"前":{"docs":{},"部":{"docs":{},"和":{"docs":{},"后":{"docs":{},"部":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"随":{"docs":{},"机":{"docs":{},"从":{"docs":{},"后":{"docs":{},"部":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"一":{"docs":{},"张":{"docs":{},"和":{"docs":{},"前":{"docs":{},"部":{"docs":{},"的":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"互":{"docs":{},"换":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"三":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"均":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"则":{"docs":{},"相":{"docs":{},"互":{"docs":{},"抵":{"docs":{},"消":{"1":{"docs":{},"次":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}},"docs":{}}}}}}}}}}}}}}},"该":{"docs":{},"元":{"docs":{},"素":{"docs":{},"为":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"数":{"docs":{},"加":{"1":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}},"docs":{}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"则":{"docs":{},"计":{"docs":{},"数":{"docs":{},"加":{"1":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}},"docs":{}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"，":{"docs":{},"则":{"docs":{},"按":{"docs":{},"正":{"docs":{},"常":{"docs":{},"方":{"docs":{},"法":{"docs":{},"搜":{"docs":{},"索":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"有":{"docs":{},"左":{"docs":{},"孩":{"docs":{},"子":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"的":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"为":{"docs":{},"空":{"docs":{},",":{"docs":{},"让":{"docs":{},"其":{"docs":{},"指":{"docs":{},"向":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}},"你":{"docs":{},"要":{"docs":{},"产":{"docs":{},"生":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"各":{"docs":{},"个":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"不":{"docs":{},"一":{"docs":{},"致":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"列":{"docs":{},"表":{"docs":{},"长":{"docs":{},"度":{"docs":{},"与":{"docs":{},"最":{"docs":{},"短":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"了":{"docs":{},"该":{"docs":{},"参":{"docs":{},"数":{"docs":{},"会":{"docs":{},"使":{"docs":{},"用":{"docs":{},"该":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"，":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"将":{"docs":{},"链":{"docs":{},"表":{"docs":{},"反":{"docs":{},"转":{"docs":{},"。":{"docs":{},"本":{"docs":{},"文":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"（":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"）":{"docs":{},"、":{"docs":{},"递":{"docs":{},"归":{"docs":{},"两":{"docs":{},"种":{"docs":{},"实":{"docs":{},"现":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"e":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"1":{"docs":{},".":{"0":{"docs":{},",":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"1":{"0":{"0":{"docs":{},",":{"1":{"0":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"2":{"docs":{},".":{"0":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"配":{"docs":{},"对":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"假":{"docs":{},"设":{"docs":{},"还":{"docs":{},"存":{"docs":{},"在":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"个":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"总":{"docs":{},"数":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"用":{"docs":{},"例":{"docs":{},"，":{"docs":{},"您":{"docs":{},"必":{"docs":{},"须":{"docs":{},"输":{"docs":{},"出":{"docs":{},"两":{"docs":{},"行":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"行":{"docs":{},"包":{"docs":{},"含":{"docs":{},"达":{"docs":{},"到":{"docs":{},"最":{"docs":{},"终":{"docs":{},"配":{"docs":{},"置":{"docs":{},"所":{"docs":{},"需":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"动":{"docs":{},"作":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"动":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"，":{"docs":{},"从":{"docs":{},"“":{"docs":{},"a":{"docs":{},"”":{"docs":{},"到":{"docs":{},"“":{"docs":{},"h":{"docs":{},"”":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"行":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"母":{"docs":{},"之":{"docs":{},"间":{"docs":{},"不":{"docs":{},"应":{"docs":{},"有":{"docs":{},"任":{"docs":{},"何":{"docs":{},"空":{"docs":{},"格":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"移":{"docs":{},"动":{"docs":{},"，":{"docs":{},"则":{"docs":{},"输":{"docs":{},"出":{"docs":{},"“":{"docs":{},"n":{"docs":{},"o":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"做":{"docs":{},"一":{"docs":{},"些":{"docs":{},"操":{"docs":{},"作":{"docs":{},"然":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"经":{"docs":{},"常":{"docs":{},"需":{"docs":{},"要":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"哨":{"docs":{},"兵":{"docs":{},"节":{"docs":{},"点":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"y":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"冒":{"docs":{},"号":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"应":{"docs":{},"当":{"docs":{},"满":{"docs":{},"足":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}},"摩":{"docs":{},"尔":{"docs":{},"投":{"docs":{},"票":{"docs":{},"法":{"docs":{},"：":{"docs":{},"摩":{"docs":{},"尔":{"docs":{},"投":{"docs":{},"票":{"docs":{},"法":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"思":{"docs":{},"想":{"docs":{},"为":{"docs":{},"对":{"docs":{},"拼":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"我":{"docs":{},"们":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"最":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"摩":{"docs":{},"尔":{"docs":{},"投":{"docs":{},"票":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"找":{"docs":{},"出":{"docs":{},"一":{"docs":{},"组":{"docs":{},"数":{"docs":{},"字":{"docs":{},"序":{"docs":{},"列":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"大":{"docs":{},"于":{"docs":{},"总":{"docs":{},"数":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"朴":{"docs":{},"素":{"docs":{},"统":{"docs":{},"计":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}},"检":{"docs":{},"测":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{},"要":{"docs":{},"求":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}},"次":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"难":{"docs":{},"度":{"docs":{},"：":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"进":{"docs":{},"阶":{"docs":{},"：":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"设":{"docs":{},"计":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{},"后":{"docs":{},"将":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563}}}},"，":{"docs":{},"在":{"docs":{},"单":{"docs":{},"词":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}},"求":{"docs":{},"众":{"docs":{},"数":{"docs":{},"i":{"docs":{},"i":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":10}}}}}}},"选":{"docs":{},"择":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}}}},"次":{"docs":{},"到":{"docs":{},"达":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"时":{"docs":{},"进":{"docs":{},"行":{"docs":{},"打":{"docs":{},"印":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.006172839506172839}}}}}}}}},"，":{"docs":{},"二":{"docs":{},"者":{"docs":{},"自":{"docs":{},"相":{"docs":{},"矛":{"docs":{},"盾":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/0-Vector/求众数II.html":{"ref":"算法题/0-DataStructure/0-Vector/求众数II.html","tf":0.0030864197530864196}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}},"其":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"docs":{},"字":{"docs":{},"母":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"打":{"docs":{},"乱":{"docs":{},"的":{"docs":{},"用":{"docs":{},"英":{"docs":{},"文":{"docs":{},"单":{"docs":{},"词":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"若":{"docs":{},"干":{"docs":{},"数":{"docs":{},"字":{"docs":{},"（":{"0":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}}}}}}},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"如":{"docs":{},"下":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}},"设":{"docs":{},"计":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"打":{"docs":{},"乱":{"docs":{},"一":{"docs":{},"个":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":10}},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"主":{"docs":{},"要":{"docs":{},"有":{"docs":{},"三":{"docs":{},"种":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"有":{"docs":{},"非":{"docs":{},"常":{"docs":{},"强":{"docs":{},"的":{"docs":{},"格":{"docs":{},"式":{"docs":{},"性":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"很":{"docs":{},"好":{"docs":{},"写":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":10}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"循":{"docs":{},"环":{"docs":{},"阶":{"docs":{},"段":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"模":{"docs":{},"板":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}}}}},"先":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"对":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"编":{"docs":{},"码":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}},"是":{"docs":{},"从":{"docs":{},"右":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"返":{"docs":{},"回":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"（":{"docs":{},"处":{"docs":{},"理":{"docs":{},"完":{"docs":{},"所":{"docs":{},"有":{"docs":{},"孩":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"以":{"docs":{},"后":{"docs":{},"）":{"docs":{},"，":{"docs":{},"才":{"docs":{},"开":{"docs":{},"始":{"docs":{},"处":{"docs":{},"理":{"docs":{},"父":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"处":{"docs":{},"理":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}},"阶":{"docs":{},"段":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}},"左":{"docs":{},"右":{"docs":{},"根":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}},"根":{"docs":{},"右":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}},"边":{"docs":{},"界":{"docs":{},"范":{"docs":{},"围":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"的":{"docs":{},"一":{"docs":{},"堆":{"docs":{},"是":{"docs":{},"从":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"一":{"docs":{},"堆":{"docs":{},"连":{"docs":{},"续":{"docs":{},"随":{"docs":{},"机":{"docs":{},"抽":{"docs":{},"取":{"docs":{},"的":{"docs":{},"牌":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"是":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}},"一":{"docs":{},"般":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"高":{"docs":{},"度":{"docs":{},")":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}},"到":{"docs":{},"不":{"docs":{},"了":{"1":{"0":{"1":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}},"docs":{}},"docs":{}}}}},"需":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"替":{"docs":{},"换":{"docs":{},"次":{"docs":{},"数":{"docs":{},"是":{"docs":{},"多":{"docs":{},"少":{"docs":{},"？":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}}}}}}}}},"谓":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"，":{"docs":{},"是":{"docs":{},"要":{"docs":{},"涵":{"docs":{},"盖":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"操":{"docs":{},"作":{"docs":{},"数":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}},"根":{"docs":{},"左":{"docs":{},"右":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}},"节":{"docs":{},"点":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"是":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}},"的":{"docs":{},"处":{"docs":{},"理":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"是":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}},"间":{"docs":{},"通":{"docs":{},"路":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}},"进":{"docs":{},"行":{"docs":{},"处":{"docs":{},"理":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"叫":{"docs":{},"先":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}}},"制":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"数":{"docs":{},"字":{"docs":{},"作":{"docs":{},"为":{"docs":{},"状":{"docs":{},"态":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}},"阶":{"docs":{},"：":{"docs":{},"不":{"docs":{},"要":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"设":{"docs":{},"计":{"docs":{},"并":{"docs":{},"实":{"docs":{},"现":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}},"（":{"1":{"docs":{},"）":{"docs":{},"先":{"docs":{},"(":{"docs":{},"根":{"docs":{},")":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"（":{"docs":{},"根":{"docs":{},"左":{"docs":{},"右":{"docs":{},"）":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}}}}},"自":{"docs":{},"环":{"docs":{},"边":{"docs":{},"（":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}},"2":{"docs":{},"）":{"docs":{},"中":{"docs":{},"(":{"docs":{},"根":{"docs":{},")":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"（":{"docs":{},"左":{"docs":{},"根":{"docs":{},"右":{"docs":{},"）":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}}}}},"平":{"docs":{},"行":{"docs":{},"边":{"docs":{},"（":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"l":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}},"3":{"docs":{},"）":{"docs":{},"后":{"docs":{},"(":{"docs":{},"根":{"docs":{},")":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"（":{"docs":{},"左":{"docs":{},"右":{"docs":{},"根":{"docs":{},"）":{"docs":{"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"ref":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","tf":0.05555555555555555}}}}}}}}}}}}}}}},"docs":{}},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}},",":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.017857142857142856}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},")":{"docs":{},":":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}},",":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"p":{"docs":{},"o":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"s":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"}":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"m":{"docs":{},"_":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"_":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"b":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.025210084033613446},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.007743362831858407}},"f":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"[":{"docs":{},"\"":{"docs":{},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"剪":{"docs":{},"枝":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.005241090146750524}},":":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}},"y":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}}}}},"docs":{}}}}}}}},"u":{"docs":{},"l":{"docs":{},"b":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"显":{"docs":{},"然":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":10}},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":10}}}}}},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},"/":{"docs":{},"/":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"{":{"docs":{},"_":{"docs":{},"m":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{},"a":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"=":{"2":{"1":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}},"docs":{}}},"q":{"docs":{},"u":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}},";":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}},"e":{"1":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"2":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"4":{"docs":{},"(":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"5":{"docs":{},"(":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"6":{"docs":{},"(":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}},"7":{"docs":{},"(":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"docs":{},"u":{"docs":{},"e":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.017241379310344827},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"d":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"模":{"docs":{},"块":{"docs":{},"有":{"docs":{},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"栈":{"docs":{},"结":{"docs":{},"构":{"docs":{},"．":{"docs":{},"用":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"和":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},"操":{"docs":{},"作":{"docs":{},"从":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"和":{"docs":{},"获":{"docs":{},"得":{"docs":{},"数":{"docs":{},"据":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"!":{"docs":{},"q":{"docs":{},"u":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}}}}}}},"d":{"docs":{},"q":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}},"p":{"docs":{},"q":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.01073345259391771},"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}},"!":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0072992700729927005}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"!":{"docs":{},"=":{"docs":{},"m":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}},"l":{"docs":{},">":{"0":{"docs":{},"&":{"docs":{},"&":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}},"1":{"docs":{},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905},"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}},"docs":{}}},"r":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"1":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563}},",":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}}},"2":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.017543859649122806}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"使":{"docs":{},"得":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}},"请":{"docs":{},"你":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"将":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}},"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}},"s":{"docs":{},")":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}},"{":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}},",":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}},"_":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}},"=":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"2":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"\\":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}},"docs":{}}}}}}}}}}},"2":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}},"docs":{}}},"l":{"docs":{},"d":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}}}}},"a":{"docs":{},"y":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}},"输":{"docs":{},"入":{"docs":{},"按":{"docs":{},"层":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{},"化":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"每":{"docs":{},"组":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"由":{"docs":{},"空":{"docs":{},"值":{"docs":{},"分":{"docs":{},"隔":{"docs":{},"（":{"docs":{},"请":{"docs":{},"参":{"docs":{},"见":{"docs":{},"示":{"docs":{},"例":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"其":{"docs":{},"最":{"docs":{},"大":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"ref":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","tf":0.008928571428571428},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}},"多":{"docs":{},"了":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}},"\"":{"0":{"1":{"2":{"3":{"4":{"5":{"docs":{},"\"":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"2":{"3":{"4":{"docs":{},"\"":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"b":{"docs":{},"i":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},".":{"docs":{},"h":{"docs":{},"\"":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"\"":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},":":{"docs":{},":":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"f":{"docs":{},"u":{"docs":{},"r":{"docs":{},"o":{"docs":{},"\"":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"o":{"docs":{},"z":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"o":{"docs":{},"e":{"docs":{},"r":{"docs":{},"\"":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"\"":{"docs":{},",":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}},"c":{"docs":{},"w":{"docs":{},"\"":{"docs":{},",":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}},"a":{"docs":{},"j":{"docs":{},"s":{"docs":{},"d":{"docs":{},"d":{"docs":{},"\"":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"c":{"docs":{},"d":{"docs":{},"\"":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}},"x":{"docs":{},"t":{"docs":{},"f":{"docs":{},"n":{"docs":{},"\"":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}},"l":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"\"":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"\"":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"\"":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"g":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"(":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.020618556701030927}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},"{":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}},"o":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}},"[":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},"]":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"docs":{}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"[":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}},"s":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}},"=":{"docs":{},"=":{"docs":{},")":{"docs":{},".":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.02197802197802198},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},":":{"docs":{},":":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0031446540880503146}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"p":{"docs":{},"=":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"(":{"docs":{},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}},"t":{"docs":{},"f":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"但":{"docs":{},"与":{"docs":{},"此":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"自":{"docs":{},"环":{"docs":{},"边":{"docs":{},"和":{"docs":{},"平":{"docs":{},"行":{"docs":{},"边":{"docs":{},"，":{"docs":{},"会":{"docs":{},"加":{"docs":{},"大":{"docs":{},"算":{"docs":{},"法":{"docs":{},"设":{"docs":{},"计":{"docs":{},"的":{"docs":{},"难":{"docs":{},"度":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"在":{"docs":{},"很":{"docs":{},"多":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"真":{"docs":{},"正":{"docs":{},"关":{"docs":{},"心":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"是":{"docs":{},"和":{"docs":{},"自":{"docs":{},"环":{"docs":{},"边":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"冗":{"docs":{},"余":{"docs":{},"连":{"docs":{},"接":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"判":{"docs":{},"断":{"docs":{},"二":{"docs":{},"分":{"docs":{},"图":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}},"和":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.017241379310344827},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.043859649122807015},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.020833333333333332},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.015789473684210527},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}},"docs":{}},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}}},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}},"字":{"docs":{},"符":{"docs":{},"规":{"docs":{},"律":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}},"它":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}},"图":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"基":{"docs":{},"本":{"docs":{},"就":{"docs":{},"是":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}},"论":{"docs":{},"刷":{"docs":{},"题":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":10}}}}}},"城":{"docs":{},"市":{"docs":{},"到":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"不":{"docs":{},"止":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"有":{"docs":{},"三":{"docs":{},"条":{"docs":{},"路":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"平":{"docs":{},"行":{"docs":{},"边":{"docs":{},"就":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"概":{"docs":{},"念":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"平":{"docs":{},"行":{"docs":{},"边":{"docs":{},"是":{"docs":{},"无":{"docs":{},"关":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}},"并":{"docs":{},"查":{"docs":{},"集":{"docs":{},":":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}},"记":{"docs":{},"忆":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219}}}},"且":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"没":{"docs":{},"有":{"docs":{},"访":{"docs":{},"问":{"docs":{},"完":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}}}}}},"或":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"找":{"docs":{},"到":{"docs":{},"小":{"docs":{},"镇":{"docs":{},"的":{"docs":{},"法":{"docs":{},"官":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"左":{"docs":{},"子":{"docs":{},"数":{"docs":{},"上":{"docs":{},"最":{"docs":{},"右":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"记":{"docs":{},"为":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"：":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}},"拓":{"docs":{},"扑":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"搜":{"docs":{},"索":{"docs":{},"（":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"、":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"）":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}},"的":{"docs":{},"低":{"docs":{},"效":{"docs":{},"在":{"docs":{},"于":{"docs":{},"没":{"docs":{},"有":{"docs":{},"能":{"docs":{},"够":{"docs":{},"很":{"docs":{},"好":{"docs":{},"地":{"docs":{},"处":{"docs":{},"理":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"；":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"比":{"docs":{},"较":{"docs":{},"好":{"docs":{},"地":{"docs":{},"处":{"docs":{},"理":{"docs":{},"了":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"在":{"docs":{},"有":{"docs":{},"些":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"关":{"docs":{},"系":{"docs":{},"比":{"docs":{},"较":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"面":{"docs":{},"前":{"docs":{},"，":{"docs":{},"又":{"docs":{},"显":{"docs":{},"得":{"docs":{},"无":{"docs":{},"奈":{"docs":{},"。":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"正":{"docs":{},"是":{"docs":{},"在":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"采":{"docs":{},"用":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"和":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"中":{"docs":{},"递":{"docs":{},"推":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"将":{"docs":{},"这":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"机":{"docs":{},"地":{"docs":{},"综":{"docs":{},"合":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"，":{"docs":{},"扬":{"docs":{},"长":{"docs":{},"避":{"docs":{},"短":{"docs":{},"，":{"docs":{},"简":{"docs":{},"单":{"docs":{},"实":{"docs":{},"用":{"docs":{},"，":{"docs":{},"在":{"docs":{},"信":{"docs":{},"息":{"docs":{},"学":{"docs":{},"中":{"docs":{},"有":{"docs":{},"着":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"作":{"docs":{},"用":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"分":{"docs":{},"类":{"docs":{},"：":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":10.007936507936508}}}}}},"插":{"docs":{},"入":{"docs":{},"位":{"docs":{},"置":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}},"无":{"docs":{},"论":{"docs":{},"是":{"docs":{},"自":{"docs":{},"环":{"docs":{},"边":{"docs":{},"还":{"docs":{},"是":{"docs":{},"平":{"docs":{},"行":{"docs":{},"边":{"docs":{},"，":{"docs":{},"在":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"候":{"docs":{},"也":{"docs":{},"是":{"docs":{},"有":{"docs":{},"意":{"docs":{},"义":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}},"概":{"docs":{},"述":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}},"省":{"docs":{},"份":{"docs":{},"数":{"docs":{},"量":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"课":{"docs":{},"程":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}}}},"路":{"docs":{},"径":{"docs":{},"压":{"docs":{},"缩":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"跳":{"docs":{},"跃":{"docs":{},"游":{"docs":{},"戏":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}},"遍":{"docs":{},"历":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.010309278350515464}}}},"钥":{"docs":{},"匙":{"docs":{},"和":{"docs":{},"房":{"docs":{},"间":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}}}},"面":{"docs":{},"试":{"docs":{},"题":{"docs":{"算法题/0-DataStructure/2-Graph/图论刷题.html":{"ref":"算法题/0-DataStructure/2-Graph/图论刷题.html","tf":0.005154639175257732}}}}},"j":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"z":{"0":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{},"i":{"docs":{},"p":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"docs":{}}}}}}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},"*":{"docs":{},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"'":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"a":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"“":{"docs":{},"形":{"docs":{},"成":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"后":{"docs":{},"”":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}},"未":{"docs":{},"形":{"docs":{},"成":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"”":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}},"且":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.010526315789473684}}},"两":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"到":{"docs":{},"两":{"docs":{},"个":{"docs":{},"循":{"docs":{},"环":{"docs":{},"里":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"虽":{"docs":{},"变":{"docs":{},"长":{"docs":{},"，":{"docs":{},"但":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"冗":{"docs":{},"余":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"删":{"docs":{},"除":{"docs":{},"操":{"docs":{},"作":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":10.008771929824562}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"指":{"docs":{},"定":{"docs":{},"范":{"docs":{},"围":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{},"相":{"docs":{},"加":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"数":{"docs":{},"相":{"docs":{},"乘":{"docs":{},"或":{"docs":{},"是":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"被":{"docs":{},"重":{"docs":{},"复":{"docs":{},"若":{"docs":{},"干":{"docs":{},"次":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}},"轮":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}},"为":{"1":{"0":{"docs":{},"的":{"2":{"1":{"docs":{},"次":{"docs":{},"方":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}},"数":{"docs":{},"组":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}},"此":{"docs":{},"提":{"docs":{},"出":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}},"偶":{"docs":{},"数":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}},"奇":{"docs":{},"数":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}},"了":{"docs":{},"从":{"docs":{},"下":{"docs":{},"级":{"docs":{},"回":{"docs":{},"到":{"docs":{},"上":{"docs":{},"级":{"docs":{},"要":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"栈":{"docs":{},"用":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"返":{"docs":{},"回":{"docs":{},"上":{"docs":{},"级":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}}}}}},"保":{"docs":{},"持":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"证":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"符":{"docs":{},"合":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}},"假":{"docs":{},"如":{"docs":{},"你":{"docs":{},"在":{"docs":{},"饭":{"docs":{},"堂":{"docs":{},"打":{"docs":{},"饭":{"docs":{},"时":{"docs":{},"，":{"docs":{},"有":{"docs":{},"个":{"docs":{},"人":{"docs":{},"人":{"docs":{},"高":{"docs":{},"马":{"docs":{},"大":{"docs":{},"，":{"docs":{},"急":{"docs":{},"匆":{"docs":{},"匆":{"docs":{},"跑":{"docs":{},"过":{"docs":{},"来":{"docs":{},"，":{"docs":{},"看":{"docs":{},"排":{"docs":{},"了":{"docs":{},"这":{"docs":{},"么":{"docs":{},"一":{"docs":{},"长":{"docs":{},"串":{"docs":{},"队":{"docs":{},"，":{"docs":{},"心":{"docs":{},"中":{"docs":{},"急":{"docs":{},"躁":{"docs":{},"，":{"docs":{},"从":{"docs":{},"队":{"docs":{},"列":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"人":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"看":{"docs":{},"见":{"docs":{},"好":{"docs":{},"欺":{"docs":{},"负":{"docs":{},"的":{"docs":{},"就":{"docs":{},"赶":{"docs":{},"走":{"docs":{},"，":{"docs":{},"自":{"docs":{},"己":{"docs":{},"站":{"docs":{},"着":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"干":{"docs":{},"不":{"docs":{},"过":{"docs":{},"的":{"docs":{},"就":{"docs":{},"停":{"docs":{},"下":{"docs":{},"，":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"单":{"docs":{},"调":{"docs":{},"双":{"docs":{},"端":{"docs":{},"队":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"$":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"{":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"}":{"docs":{},"_":{"1":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}},"docs":{}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"堆":{"docs":{},"牌":{"docs":{},"，":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}},"其":{"docs":{},"中":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}},"的":{"docs":{},"a":{"docs":{},"是":{"docs":{},"起":{"docs":{},"始":{"docs":{},"值":{"docs":{},"，":{"docs":{},"n":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"完":{"docs":{},"成":{"docs":{},"以":{"docs":{},"后":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"列":{"docs":{},"出":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"公":{"docs":{},"式":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}},"时":{"docs":{},"有":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}},"删":{"docs":{},"除":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.010309278350515464}},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}},"链":{"docs":{},"表":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}}}}},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"返":{"docs":{},"现":{"docs":{},"第":{"docs":{},"二":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"被":{"docs":{},"第":{"docs":{},"三":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"涵":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"：":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}},"说":{"docs":{},"两":{"docs":{},"次":{"docs":{},"重":{"docs":{},"合":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}},"以":{"docs":{},"后":{"docs":{},"进":{"docs":{},"先":{"docs":{},"出":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"列":{"docs":{},"表":{"docs":{},"本":{"docs":{},"身":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"缺":{"docs":{},"点":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"是":{"docs":{},"当":{"docs":{},"列":{"docs":{},"表":{"docs":{},"不":{"docs":{},"断":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"会":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"速":{"docs":{},"度":{"docs":{},"瓶":{"docs":{},"颈":{"docs":{},"．":{"docs":{},"列":{"docs":{},"表":{"docs":{},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"往":{"docs":{},"其":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"新":{"docs":{},"元":{"docs":{},"素":{"docs":{},"而":{"docs":{},"没":{"docs":{},"有":{"docs":{},"空":{"docs":{},"间":{"docs":{},"保":{"docs":{},"存":{"docs":{},"新":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"会":{"docs":{},"自":{"docs":{},"动":{"docs":{},"重":{"docs":{},"新":{"docs":{},"分":{"docs":{},"配":{"docs":{},"内":{"docs":{},"存":{"docs":{},"块":{"docs":{},"，":{"docs":{},"并":{"docs":{},"将":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"中":{"docs":{},"的":{"docs":{},"值":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"新":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"块":{"docs":{},"中":{"docs":{},"．":{"docs":{},"这":{"docs":{},"就":{"docs":{},"导":{"docs":{},"致":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},"操":{"docs":{},"作":{"docs":{},"会":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{},"（":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"和":{"docs":{},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"去":{"docs":{},"重":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"被":{"docs":{},"三":{"docs":{},"整":{"docs":{},"除":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":10}}}}}}}}}},"能":{"docs":{},"等":{"docs":{},"于":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"解":{"docs":{},"压":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"二":{"docs":{},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"式":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"选":{"docs":{},"参":{"docs":{},"数":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"分":{"docs":{},"析":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}},"制":{"docs":{},"各":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"并":{"docs":{},"建":{"docs":{},"立":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}},"构":{"docs":{},"建":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"链":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"；":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"并":{"docs":{},"构":{"docs":{},"建":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"链":{"docs":{},"表":{"docs":{},"；":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}},"将":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}},"区":{"docs":{},"间":{"docs":{},"[":{"docs":{},"l":{"docs":{},",":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}}}}},"x":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"它":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"值":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"八":{"docs":{},"进":{"docs":{},"制":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"十":{"docs":{},"六":{"docs":{},"进":{"docs":{},"制":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"字":{"docs":{},"符":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}},"对":{"docs":{},"象":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"序":{"docs":{},"列":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"元":{"docs":{},"素":{"docs":{},"随":{"docs":{},"机":{"docs":{},"排":{"docs":{},"序":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},"：":{"docs":{},"$":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888}}}}}}},"只":{"docs":{},"比":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"稍":{"docs":{},"差":{"docs":{},"一":{"docs":{},"点":{"docs":{},"（":{"docs":{},"虽":{"docs":{},"然":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"层":{"docs":{},"时":{"docs":{},"会":{"docs":{},"重":{"docs":{},"复":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"k":{"docs":{},"层":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"整":{"docs":{},"体":{"docs":{},"而":{"docs":{},"言":{"docs":{},"并":{"docs":{},"不":{"docs":{},"比":{"docs":{},"广":{"docs":{},"搜":{"docs":{},"慢":{"docs":{},"很":{"docs":{},"多":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}},"未":{"docs":{},"形":{"docs":{},"成":{"docs":{},"窗":{"docs":{},"口":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}},"添":{"docs":{},"加":{"docs":{},"至":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":10.005154639175258}}}}}},"：":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},"$":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"：":{"docs":{},"$":{"docs":{},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.013888888888888888}}}}}}},"与":{"docs":{},"深":{"docs":{},"搜":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"却":{"docs":{},"比":{"docs":{},"广":{"docs":{},"搜":{"docs":{},"小":{"docs":{},"很":{"docs":{},"多":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}},"若":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}},"已":{"docs":{},"形":{"docs":{},"成":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"（":{"docs":{},"即":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"为":{"docs":{},"空":{"docs":{},"，":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}}}}},"不":{"docs":{},"同":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}},"被":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}},"删":{"docs":{},"除":{"docs":{},"元":{"docs":{},"素":{"docs":{},"$":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"−":{"1":{"docs":{},"]":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}},"docs":{}}}}}}}}}}}}}},"返":{"docs":{},"回":{"1":{"0":{"docs":{},".":{"0":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}},"docs":{}},"2":{"docs":{},".":{"7":{"1":{"8":{"2":{"8":{"1":{"8":{"2":{"8":{"4":{"5":{"9":{"0":{"4":{"5":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.004424778761061947}},"值":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},"：":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"最":{"docs":{},"值":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"元":{"docs":{},"素":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"结":{"docs":{},"果":{"docs":{},"列":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}}},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}},"原":{"docs":{},"始":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}}},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"应":{"docs":{},"该":{"docs":{},"按":{"docs":{},"单":{"docs":{},"词":{"docs":{},"出":{"docs":{},"现":{"docs":{},"频":{"docs":{},"率":{"docs":{},"由":{"docs":{},"高":{"docs":{},"到":{"docs":{},"低":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"单":{"docs":{},"词":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"出":{"docs":{},"现":{"docs":{},"频":{"docs":{},"率":{"docs":{},"，":{"docs":{},"按":{"docs":{},"字":{"docs":{},"母":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"随":{"docs":{},"机":{"docs":{},"打":{"docs":{},"乱":{"docs":{},"后":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}},"字":{"docs":{},"x":{"docs":{},"的":{"docs":{},"平":{"docs":{},"方":{"docs":{},"根":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"的":{"docs":{},"上":{"docs":{},"入":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"4":{"docs":{},".":{"1":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}},"下":{"docs":{},"舍":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"4":{"docs":{},".":{"9":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"，":{"docs":{},"如":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}}}}}}}}}},"头":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}},"大":{"docs":{},"于":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"器":{"docs":{},"。":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}},"e":{"docs":{},"的":{"docs":{},"x":{"docs":{},"次":{"docs":{},"幂":{"docs":{},"(":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{},"如":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"的":{"docs":{},"y":{"docs":{},"次":{"docs":{},"幂":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"整":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"与":{"docs":{},"小":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"数":{"docs":{},"值":{"docs":{},"符":{"docs":{},"号":{"docs":{},"与":{"docs":{},"x":{"docs":{},"相":{"docs":{},"同":{"docs":{},"，":{"docs":{},"整":{"docs":{},"数":{"docs":{},"部":{"docs":{},"分":{"docs":{},"以":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"型":{"docs":{},"表":{"docs":{},"示":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"以":{"1":{"0":{"docs":{},"为":{"docs":{},"基":{"docs":{},"数":{"docs":{},"的":{"docs":{},"x":{"docs":{},"的":{"docs":{},"对":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"1":{"0":{"docs":{},"(":{"1":{"0":{"0":{"docs":{},")":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"给":{"docs":{},"定":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"参":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}},"除":{"docs":{},"法":{"docs":{},"的":{"docs":{},"余":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"递":{"docs":{},"减":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}},"归":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}},"一":{"docs":{},"次":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}},"两":{"docs":{},"次":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}},"树":{"docs":{},"剪":{"docs":{},"枝":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}},"排":{"docs":{},"序":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"访":{"docs":{},"问":{"3":{"docs":{},"次":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"docs":{}}}}}}}}}}}}}},"重":{"docs":{},"要":{"docs":{},"概":{"docs":{},"念":{"docs":{},"：":{"docs":{},"单":{"docs":{},"调":{"docs":{},"队":{"docs":{},"列":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"到":{"docs":{},"它":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"状":{"docs":{},"态":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}},"复":{"docs":{},"输":{"docs":{},"出":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"元":{"docs":{},"素":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"具":{"docs":{},"有":{"docs":{},"单":{"docs":{},"调":{"docs":{},"性":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":10.008620689655173}}}}}}},"首":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}},"和":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"出":{"docs":{},"队":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"队":{"docs":{},"尾":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"入":{"docs":{},"队":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{},"：":{"docs":{},"将":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"（":{"docs":{},"即":{"docs":{},"队":{"docs":{},"首":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}}}}}}},"：":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517},"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"则":{"docs":{},"队":{"docs":{},"首":{"docs":{},"元":{"docs":{},"素":{"docs":{},"出":{"docs":{},"队":{"docs":{},"；":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.005154639175257732}}}}}}}}}}},"；":{"docs":{"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","tf":0.015463917525773196}}},"得":{"docs":{},"到":{"docs":{},"队":{"docs":{},"列":{"docs":{},"里":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"要":{"docs":{},"求":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}}},"负":{"docs":{},"数":{"docs":{},"或":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"减":{"docs":{},"去":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}},"请":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"队":{"docs":{},"列":{"docs":{},"并":{"docs":{},"实":{"docs":{},"现":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"一":{"docs":{},"个":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"在":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"除":{"docs":{},"了":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"使":{"docs":{},"用":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}},"看":{"docs":{},"下":{"docs":{},"一":{"docs":{},"节":{"docs":{},"内":{"docs":{},"容":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"限":{"docs":{},"制":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"ref":"算法题/0-DataStructure/3-Queue/队列的最大值.html","tf":0.008620689655172414}}}}}},"'":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"'":{"docs":{},")":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}},":":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}},"*":{"docs":{},"'":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.02631578947368421}},"表":{"docs":{},"示":{"0":{"docs":{},"个":{"docs":{},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}},"1":{"docs":{},"个":{"docs":{},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}},"docs":{},"n":{"docs":{},"个":{"docs":{},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}},".":{"docs":{},"'":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.02631578947368421}},")":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"a":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"!":{"docs":{},"'":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"'":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"'":{"docs":{},"z":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"y":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"w":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"v":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"u":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"t":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"s":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"r":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"q":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"p":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"o":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"n":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"m":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"l":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"k":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"j":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"i":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"h":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"g":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"f":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"e":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"d":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"c":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"a":{"docs":{},"'":{"docs":{},"]":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"h":{"docs":{},"'":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"j":{"docs":{},"'":{"docs":{},"}":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"m":{"docs":{},"'":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"s":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"'":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"w":{"docs":{},"o":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"l":{"docs":{},"d":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}},"布":{"docs":{},"'":{"docs":{},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"石":{"docs":{},"头":{"docs":{},"'":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"使":{"docs":{},"用":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}},"线":{"docs":{},"性":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"内":{"docs":{},"置":{"docs":{},"的":{"docs":{},"库":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"如":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}},"在":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"修":{"docs":{},"改":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}},"节":{"docs":{},"点":{"docs":{},"引":{"docs":{},"用":{"docs":{},"指":{"docs":{},"向":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}},"单":{"docs":{},"词":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}},"单":{"docs":{},"独":{"docs":{},"处":{"docs":{},"理":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}}}}},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}},"一":{"docs":{},"些":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}},"引":{"docs":{},"用":{"docs":{},"指":{"docs":{},"向":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}},"拆":{"docs":{},"分":{"docs":{},"两":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}},"指":{"docs":{},"向":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.007155635062611807}},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"找":{"docs":{},"到":{"docs":{},"新":{"docs":{},"对":{"docs":{},"应":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"节":{"docs":{},"点":{"docs":{},"或":{"docs":{},"者":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"”":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}},"映":{"docs":{},"射":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}},"暂":{"docs":{},"存":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}},"构":{"docs":{},"建":{"docs":{},"各":{"docs":{},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}},"新":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}},"然":{"docs":{},"后":{"docs":{},"通":{"docs":{},"过":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"来":{"docs":{},"完":{"docs":{},"成":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"的":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"，":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"是":{"docs":{},"编":{"docs":{},"码":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"终":{"docs":{},"止":{"docs":{},"条":{"docs":{},"件":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}},"考":{"docs":{},"虑":{"docs":{},"构":{"docs":{},"建":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"所":{"docs":{},"示":{"docs":{},"的":{"docs":{},"拼":{"docs":{},"接":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"如":{"docs":{},"此":{"docs":{},"便":{"docs":{},"可":{"docs":{},"在":{"docs":{},"访":{"docs":{},"问":{"docs":{},"原":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}}}}}}}}}}}}}}}}}}}}}}}}}}}},"访":{"docs":{},"问":{"docs":{},"下":{"docs":{},"一":{"docs":{},"节":{"docs":{},"点":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}},"调":{"docs":{},"用":{"docs":{},"递":{"docs":{},"归":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0035778175313059034}}}}}}}}},"迭":{"docs":{},"代":{"docs":{"算法题/0-DataStructure/4-ListNode/链表.html":{"ref":"算法题/0-DataStructure/4-ListNode/链表.html","tf":0.0017889087656529517}},"加":{"docs":{},"深":{"docs":{},"搜":{"docs":{},"索":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.00966183574879227}}}}}},"器":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}},"从":{"docs":{},"英":{"docs":{},"文":{"docs":{},"中":{"docs":{},"重":{"docs":{},"建":{"docs":{},"数":{"docs":{},"字":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":10.010752688172044}}}}}}}}},"右":{"docs":{},"上":{"docs":{},"角":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"z":{"docs":{},"字":{"docs":{},"形":{"docs":{},"查":{"docs":{},"找":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}}}}}},"a":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"中":{"docs":{},"随":{"docs":{},"机":{"docs":{},"挑":{"docs":{},"选":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"1":{"0":{"docs":{},")":{"docs":{},")":{"docs":{},"，":{"docs":{},"从":{"0":{"docs":{},"到":{"9":{"docs":{},"中":{"docs":{},"随":{"docs":{},"机":{"docs":{},"挑":{"docs":{},"选":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"定":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"按":{"docs":{},"指":{"docs":{},"定":{"docs":{},"基":{"docs":{},"数":{"docs":{},"递":{"docs":{},"增":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"，":{"docs":{},"基":{"docs":{},"数":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"为":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"升":{"docs":{},"序":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}},"（":{"docs":{},"默":{"docs":{},"认":{"docs":{},"）":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}},"提":{"docs":{},"示":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}},"示":{"docs":{},"例":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.021505376344086023},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.022388059701492536},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}},"这":{"1":{"0":{"0":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"表":{"docs":{},"达":{"docs":{},"为":{"docs":{},"：":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{},"些":{"docs":{},"字":{"docs":{},"符":{"docs":{},"之":{"docs":{},"一":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}},"一":{"docs":{},"题":{"docs":{},"中":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"划":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"个":{"docs":{},"层":{"docs":{},"面":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}}}}}},"基":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"朴":{"docs":{},"素":{"docs":{},"的":{"docs":{},"事":{"docs":{},"实":{"docs":{},"：":{"docs":{},"答":{"docs":{},"案":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.014925373134328358}}}}}}},"里":{"docs":{},"提":{"docs":{},"供":{"docs":{},"两":{"docs":{},"种":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"强":{"docs":{},"调":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"s":{"docs":{},"[":{"docs":{},":":{"docs":{},"i":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}},"有":{"docs":{},"四":{"docs":{},"点":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}}}}}}}},"样":{"docs":{},"才":{"docs":{},"能":{"docs":{},"防":{"docs":{},"止":{"docs":{},"死":{"docs":{},"循":{"docs":{},"环":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.01904761904761905}}}}}}}}},"，":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"的":{"docs":{},"值":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"0":{"docs":{},"~":{"9":{"9":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"了":{"docs":{},"。":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"统":{"docs":{},"计":{"docs":{},"每":{"docs":{},"个":{"docs":{},"字":{"docs":{},"母":{"docs":{},"分":{"docs":{},"别":{"docs":{},"在":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"数":{"docs":{},"字":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"：":{"docs":{"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"ref":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"k":{"docs":{},"层":{"docs":{},"，":{"docs":{},"若":{"docs":{},"没":{"docs":{},"有":{"docs":{},"找":{"docs":{},"到":{"docs":{},"可":{"docs":{},"行":{"docs":{},"解":{"docs":{},"，":{"docs":{},"再":{"docs":{},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"层":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"找":{"docs":{},"到":{"docs":{},"可":{"docs":{},"行":{"docs":{},"解":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"表":{"docs":{},"记":{"docs":{},"录":{"docs":{},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"储":{"docs":{},"下":{"docs":{},"的":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"题":{"docs":{},"目":{"docs":{},"给":{"docs":{},"出":{"docs":{},"了":{"docs":{},"三":{"docs":{},"种":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"分":{"docs":{},"别":{"docs":{},"是":{"docs":{},"'":{"docs":{},"*":{"docs":{},"'":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}},"|":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}},"=":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}},"|":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.021052631578947368}}}},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}},"整":{"docs":{},"数":{"docs":{},"编":{"docs":{},"码":{"docs":{},"，":{"docs":{},"加":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"同":{"docs":{},"组":{"docs":{},"合":{"docs":{},"并":{"docs":{},"。":{"docs":{"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"ref":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","tf":0.007462686567164179}}}}}}}}}}}}}}}},"运":{"docs":{},"算":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"连":{"docs":{},"接":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"典":{"docs":{},"是":{"docs":{},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"可":{"docs":{},"变":{"docs":{},"容":{"docs":{},"器":{"docs":{},"模":{"docs":{},"型":{"docs":{},"，":{"docs":{},"且":{"docs":{},"可":{"docs":{},"存":{"docs":{},"储":{"docs":{},"任":{"docs":{},"意":{"docs":{},"类":{"docs":{},"型":{"docs":{},"对":{"docs":{},"象":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"前":{"docs":{},"k":{"docs":{},"个":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"最":{"docs":{},"多":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":10}}}}}}}}}}}},"高":{"docs":{},"频":{"docs":{},"单":{"docs":{},"词":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0072992700729927005}}}}}},"定":{"docs":{},"义":{"docs":{},"并":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"k":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"，":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}},"建":{"docs":{},"立":{"docs":{},"并":{"docs":{},"填":{"docs":{},"充":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"比":{"docs":{},"较":{"docs":{},"规":{"docs":{},"则":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}},"排":{"docs":{},"序":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"带":{"docs":{},"模":{"docs":{},"板":{"docs":{},"仿":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}},"表":{"docs":{},"示":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"$":{"docs":{},"m":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}},"实":{"docs":{},"际":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"种":{"docs":{},"类":{"docs":{},"数":{"docs":{},"。":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"和":{"docs":{},"生":{"docs":{},"成":{"docs":{},"的":{"docs":{},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"空":{"docs":{},"间":{"docs":{},"占":{"docs":{},"用":{"docs":{},"均":{"docs":{},"为":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"$":{"docs":{},"l":{"docs":{},"$":{"docs":{},"表":{"docs":{},"示":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"长":{"docs":{},"度":{"docs":{},"，":{"docs":{},"$":{"docs":{},"m":{"docs":{},"$":{"docs":{"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"ref":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","tf":0.006944444444444444}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"i":{"docs":{},"和":{"docs":{},"j":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}},"docs":{}}}},"优":{"docs":{},"化":{"docs":{},"剪":{"docs":{},"枝":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"点":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"例":{"docs":{},"题":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"：":{"3":{"4":{"docs":{},".":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}},"docs":{}},"docs":{}}},"子":{"docs":{},"：":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"u":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"/":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"o":{"docs":{},"o":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"于":{"docs":{},"剪":{"docs":{},"枝":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}},"启":{"docs":{},"发":{"docs":{},"式":{"docs":{},"搜":{"docs":{},"索":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"题":{"docs":{},"目":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}},"回":{"docs":{},"溯":{"docs":{},"法":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"状":{"docs":{},"态":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"这":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"是":{"docs":{},"否":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"已":{"docs":{},"经":{"docs":{},"做":{"docs":{},"过":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"调":{"docs":{},"用":{"docs":{},"答":{"docs":{},"案":{"docs":{},"，":{"docs":{},"回":{"docs":{},"溯":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"数":{"docs":{},"位":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"中":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}}}}}}}}}}},"p":{"docs":{},"[":{"docs":{},"j":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"单":{"docs":{},"词":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563}}}},"排":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}}}}},"宫":{"docs":{},"水":{"docs":{},"三":{"docs":{},"叶":{"docs":{},"的":{"docs":{},"题":{"docs":{},"库":{"docs":{},":":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}},"广":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}},"操":{"docs":{},"作":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}},"符":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"正":{"docs":{},"好":{"docs":{},"找":{"docs":{},"到":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}},"整":{"docs":{},"数":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}},"相":{"docs":{},"关":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"匹":{"docs":{},"配":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":10.005263157894737}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"优":{"docs":{},"先":{"docs":{},"搜":{"docs":{},"索":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}},"状":{"docs":{},"态":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"是":{"docs":{},"要":{"docs":{},"用":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"状":{"docs":{},"态":{"docs":{},"最":{"docs":{},"好":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"数":{"docs":{},"字":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"把":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"连":{"docs":{},"写":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}},"机":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"转":{"docs":{},"移":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}},"盘":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}},"获":{"docs":{},"取":{"docs":{},"中":{"docs":{},"间":{"8":{"docs":{},"个":{"docs":{},"格":{"docs":{},"子":{"docs":{},"中":{"docs":{},"的":{"docs":{},"众":{"docs":{},"数":{"docs":{},"情":{"docs":{},"况":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}},"docs":{}}}}},"记":{"docs":{},"忆":{"docs":{},"化":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"=":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"+":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}}}}}}}}}}},"概":{"docs":{},"述":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},":":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/","tf":0.004830917874396135}}}}}}}},"递":{"docs":{},"归":{"docs":{},"使":{"docs":{},"用":{"docs":{},"多":{"docs":{},"余":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"空":{"docs":{},"间":{"docs":{},"来":{"docs":{},"换":{"docs":{},"取":{"docs":{},"较":{"docs":{},"短":{"docs":{},"的":{"docs":{},"递":{"docs":{},"归":{"docs":{},"时":{"docs":{},"间":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"全":{"docs":{},"平":{"docs":{},"方":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","tf":0.009523809523809525}}}}}}}}}}}}},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"用":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}},"奇":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}}}}}}}},"指":{"docs":{},"在":{"docs":{},"不":{"docs":{},"改":{"docs":{},"变":{"docs":{},"其":{"docs":{},"余":{"docs":{},"元":{"docs":{},"素":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"删":{"docs":{},"除":{"docs":{},"一":{"docs":{},"些":{"docs":{},"元":{"docs":{},"素":{"docs":{},"或":{"docs":{},"不":{"docs":{},"删":{"docs":{},"除":{"docs":{},"任":{"docs":{},"何":{"docs":{},"元":{"docs":{},"素":{"docs":{},"而":{"docs":{},"从":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"否":{"docs":{},"匹":{"docs":{},"配":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"[":{"0":{"docs":{},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{},"第":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"y":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.023809523809523808},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},";":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}},":":{"1":{"0":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}},"2":{"0":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}},"docs":{}},"docs":{}},"=":{"2":{"0":{"docs":{},";":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"docs":{}},"docs":{}}},"每":{"docs":{},"列":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"上":{"docs":{},"到":{"docs":{},"下":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}}}}}}},"行":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"从":{"docs":{},"左":{"docs":{},"到":{"docs":{},"右":{"docs":{},"升":{"docs":{},"序":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}}}}}}},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"对":{"docs":{},"于":{"docs":{},"三":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"分":{"docs":{},"量":{"docs":{},"，":{"docs":{},"即":{"docs":{},"被":{"docs":{},"三":{"docs":{},"整":{"docs":{},"除":{"docs":{},"余":{"0":{"docs":{},"、":{"1":{"docs":{},"、":{"2":{"docs":{},"的":{"docs":{},"数":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}},"维":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}},"编":{"docs":{},"写":{"docs":{},"一":{"docs":{},"个":{"docs":{},"高":{"docs":{},"效":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"搜":{"docs":{},"索":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","tf":0.007936507936507936}}}}}}}}}}}}},"辑":{"docs":{},"距":{"docs":{},"离":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":10.008403361344538}}}}}},"%":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219},"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0041928721174004195},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}}},"变":{"docs":{},"为":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"；":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}},"已":{"docs":{},"知":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.005917159763313609}}},"废":{"docs":{},"弃":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"ref":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","tf":0.011834319526627219}}}}}},"灯":{"docs":{},"泡":{"docs":{},"开":{"docs":{},"关":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":10.018518518518519}}}}}},"第":{"0":{"docs":{},"列":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}},"docs":{}}}}}}}},"行":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"比":{"docs":{},"较":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{},"三":{"docs":{},"轮":{"docs":{},"，":{"docs":{},"你":{"docs":{},"每":{"docs":{},"三":{"docs":{},"个":{"docs":{},"灯":{"docs":{},"泡":{"docs":{},"就":{"docs":{},"切":{"docs":{},"换":{"docs":{},"一":{"docs":{},"个":{"docs":{},"灯":{"docs":{},"泡":{"docs":{},"的":{"docs":{},"开":{"docs":{},"关":{"docs":{},"（":{"docs":{},"即":{"docs":{},"，":{"docs":{},"打":{"docs":{},"开":{"docs":{},"变":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"，":{"docs":{},"关":{"docs":{},"闭":{"docs":{},"变":{"docs":{},"打":{"docs":{},"开":{"docs":{},"）":{"docs":{},"。":{"docs":{},"第":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"一":{"docs":{},"次":{"docs":{},"到":{"docs":{},"达":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}},"二":{"docs":{},"次":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"的":{"docs":{},"完":{"docs":{},"全":{"docs":{},"平":{"docs":{},"方":{"docs":{},"数":{"docs":{},"个":{"docs":{},"数":{"docs":{},"为":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}}}}}}},"轮":{"docs":{},"后":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"个":{"docs":{},"亮":{"docs":{},"着":{"docs":{},"的":{"docs":{},"灯":{"docs":{},"泡":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}}}}}},"，":{"docs":{},"你":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"切":{"docs":{},"换":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"灯":{"docs":{},"泡":{"docs":{},"的":{"docs":{},"开":{"docs":{},"关":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}},"每":{"docs":{"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"ref":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","tf":0.018518518518518517}}}}}},"列":{"docs":{},"的":{"docs":{},"二":{"docs":{},"维":{"docs":{},"数":{"docs":{},"组":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}},"当":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"不":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"必":{"docs":{},"然":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"要":{"docs":{},"被":{"docs":{},"删":{"docs":{},"除":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"$":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"不":{"docs":{},"用":{"docs":{},"管":{"docs":{},",":{"docs":{},"由":{"docs":{},"$":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}},"行":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}},"计":{"docs":{},"算":{"docs":{},"最":{"docs":{},"长":{"docs":{},"公":{"docs":{},"共":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","tf":0.008771929824561403}}}}}}}}}},"数":{"docs":{},"从":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"到":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"是":{"docs":{},"做":{"docs":{},"了":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"，":{"docs":{},"用":{"docs":{},"三":{"docs":{},"个":{"docs":{},"整":{"docs":{},"型":{"docs":{},"空":{"docs":{},"间":{"docs":{},"就":{"docs":{},"存":{"docs":{},"储":{"docs":{},"系":{"docs":{},"统":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"来":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"更":{"docs":{},"新":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"位":{"docs":{},"于":{"docs":{},"d":{"docs":{},"p":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"右":{"docs":{},"下":{"docs":{},"角":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{},"[":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"]":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","tf":0.010416666666666666}}}},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"来":{"docs":{},"作":{"docs":{},"为":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"的":{"docs":{},"记":{"docs":{},"忆":{"docs":{},"器":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}}}}}}},"能":{"docs":{},"不":{"docs":{},"等":{"docs":{},"于":{"docs":{},"，":{"docs":{},"即":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"'":{"docs":{},"*":{"docs":{},"'":{"docs":{},"表":{"docs":{},"示":{"1":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"docs":{}}}}}}}}}}}}}}}}},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}},"派":{"docs":{},"生":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}}}}}}}}},"难":{"docs":{},"度":{"docs":{},":":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","tf":0.01098901098901099}}},"：":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"​":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"人":{"docs":{},"类":{"docs":{},"在":{"docs":{},"观":{"docs":{},"察":{"docs":{},"正":{"docs":{},"则":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"是":{"docs":{},"从":{"docs":{},"左":{"docs":{},"往":{"docs":{},"右":{"docs":{},"，":{"docs":{},"在":{"docs":{},"左":{"docs":{},"侧":{"docs":{},"能":{"docs":{},"够":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"是":{"docs":{},"右":{"docs":{},"侧":{"docs":{},"能":{"docs":{},"够":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"的":{"docs":{},"必":{"docs":{},"要":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"分":{"docs":{},"析":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"割":{"docs":{},"，":{"docs":{},"整":{"docs":{},"个":{"docs":{},"字":{"docs":{},"典":{"docs":{},"包":{"docs":{},"括":{"docs":{},"在":{"docs":{},"花":{"docs":{},"括":{"docs":{},"号":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}},"每":{"docs":{},"个":{"docs":{},"键":{"docs":{},"值":{"docs":{},"对":{"docs":{},"之":{"docs":{},"间":{"docs":{},"用":{"docs":{},"逗":{"docs":{},"号":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"匹":{"docs":{},"配":{"docs":{},"任":{"docs":{},"意":{"docs":{},"单":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}},"零":{"docs":{},"个":{"docs":{},"或":{"docs":{},"多":{"docs":{},"个":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"那":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}}}}}}}},"即":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"这":{"docs":{},"个":{"docs":{},"'":{"docs":{},"*":{"docs":{},"'":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}}}}}}}},"困":{"docs":{},"难":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"知":{"docs":{},"道":{"docs":{},"，":{"docs":{},"当":{"docs":{},"$":{"docs":{},"i":{"docs":{},"=":{"docs":{},"j":{"docs":{},"=":{"0":{"docs":{},"$":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}},"docs":{}}}}}}}}}},"使":{"docs":{},"用":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"消":{"docs":{},"掉":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}},"结":{"docs":{},"果":{"docs":{},"返":{"docs":{},"回":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}}}},"束":{"docs":{},"，":{"docs":{},"但":{"docs":{},"不":{"docs":{},"包":{"docs":{},"括":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"除":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"了":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","tf":0.005263157894736842}}},"以":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"词":{"docs":{},"进":{"docs":{},"行":{"docs":{},"如":{"docs":{},"下":{"docs":{},"三":{"docs":{},"种":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}}}}}}}}}}},"到":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.01680672268907563}}},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}},"替":{"docs":{},"换":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"为":{"docs":{},"空":{"docs":{},"串":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}}},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"内":{"docs":{},"置":{"docs":{},"的":{"docs":{},"类":{"docs":{},"型":{"docs":{},"进":{"docs":{},"行":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"，":{"docs":{},"你":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"作":{"docs":{},"为":{"docs":{},"函":{"docs":{},"数":{"docs":{},"名":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"以":{"docs":{},"下":{"docs":{},"几":{"docs":{},"个":{"docs":{},"内":{"docs":{},"置":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"数":{"docs":{},"据":{"docs":{},"类":{"docs":{},"型":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"函":{"docs":{},"数":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"转":{"docs":{},"换":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"点":{"docs":{},"像":{"docs":{},"）":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"转":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"换":{"docs":{},"成":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"组":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"列":{"docs":{},"表":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"不":{"docs":{},"可":{"docs":{},"变":{"docs":{},"集":{"docs":{},"合":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"列":{"docs":{},"表":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"可":{"docs":{},"变":{"docs":{},"集":{"docs":{},"合":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"来":{"docs":{},"输":{"docs":{},"出":{"docs":{},"列":{"docs":{},"表":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"边":{"docs":{},"界":{"docs":{},"状":{"docs":{},"态":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"ref":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","tf":0.008403361344537815}}}}}}}}},"`":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{},"`":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"`":{"docs":{},"*":{"docs":{},"*":{"docs":{},",":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"`":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}},"剩":{"docs":{},"余":{"docs":{},"的":{"docs":{},"牌":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"无":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"是":{"docs":{},"从":{"docs":{},"它":{"docs":{},"们":{"docs":{},"中":{"docs":{},"间":{"docs":{},"随":{"docs":{},"机":{"docs":{},"等":{"docs":{},"概":{"docs":{},"率":{"docs":{},"抽":{"docs":{},"取":{"docs":{},"新":{"docs":{},"牌":{"docs":{},"的":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"打":{"docs":{},"乱":{"docs":{},"数":{"docs":{},"组":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}},"排":{"docs":{},"序":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"洗":{"docs":{},"牌":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}},"算":{"docs":{},"法":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":10}}}}}},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"两":{"docs":{},"堆":{"docs":{},"牌":{"docs":{},"加":{"docs":{},"起":{"docs":{},"来":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"整":{"docs":{},"副":{"docs":{},"牌":{"docs":{},"。":{"docs":{"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"ref":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"：":{"docs":{},"先":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"再":{"docs":{},"在":{"docs":{},"从":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"点":{"docs":{},"展":{"docs":{},"开":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"板":{"docs":{},"提":{"docs":{},"炼":{"docs":{},"：":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"查":{"docs":{},"找":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"数":{"docs":{},"字":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}}}}}}}}}}}}}}}},"测":{"docs":{},"试":{"docs":{},"题":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.0040650406504065045}}}}},"防":{"docs":{},"空":{"docs":{"算法题/2-Templates/BinarySearch.html":{"ref":"算法题/2-Templates/BinarySearch.html","tf":0.012195121951219513}}}},"会":{"docs":{},"到":{"docs":{},"达":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"2":{"docs":{},"次":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"docs":{}}}}}},"达":{"docs":{},"到":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"1":{"docs":{},"次":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}},"docs":{}}}}}}},"普":{"docs":{},"通":{"docs":{},"算":{"docs":{},"法":{"docs":{},"：":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}},"函":{"docs":{},"数":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"没":{"docs":{},"有":{"docs":{},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}},"继":{"docs":{},"续":{"docs":{},"往":{"docs":{},"下":{"docs":{},"执":{"docs":{},"行":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.014598540145985401}}}}}}}},"让":{"docs":{},"其":{"docs":{},"指":{"docs":{},"向":{"docs":{},"空":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"n":{"docs":{},"为":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{"算法题/2-Templates/BinaryTree.html":{"ref":"算法题/2-Templates/BinaryTree.html","tf":0.0036496350364963502}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"算法题/2-Templates/ListNode.html":{"ref":"算法题/2-Templates/ListNode.html","tf":0.016129032258064516}}}}}}}}},")":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.016771488469601678},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},"函":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"产":{"docs":{},"生":{"docs":{},"随":{"docs":{},"机":{"docs":{},"化":{"docs":{},"种":{"docs":{},"子":{"docs":{},"，":{"docs":{},"随":{"docs":{},"着":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"就":{"docs":{},"能":{"docs":{},"够":{"docs":{},"产":{"docs":{},"生":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"m":{"docs":{},"p":{"docs":{},")":{"docs":{},">":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}}}}}}}},"格":{"docs":{},"式":{"docs":{},"如":{"docs":{},"下":{"docs":{},"所":{"docs":{},"示":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"^":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}},"仿":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}},"函":{"docs":{},"数":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"象":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}}}}}},"的":{"docs":{},"用":{"docs":{},"法":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"用":{"docs":{},"于":{"docs":{},"对":{"docs":{},"原":{"docs":{},"列":{"docs":{},"表":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"指":{"docs":{},"定":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"则":{"docs":{},"使":{"docs":{},"用":{"docs":{},"比":{"docs":{},"较":{"docs":{},"函":{"docs":{},"数":{"docs":{},"指":{"docs":{},"定":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"可":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"将":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"打":{"docs":{},"包":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"个":{"docs":{},"元":{"docs":{},"组":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"由":{"docs":{},"这":{"docs":{},"些":{"docs":{},"元":{"docs":{},"组":{"docs":{},"组":{"docs":{},"成":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"是":{"docs":{},"节":{"docs":{},"约":{"docs":{},"了":{"docs":{},"不":{"docs":{},"少":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"刷":{"docs":{},"题":{"docs":{},"时":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"技":{"docs":{},"巧":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.00331858407079646}},":":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}},"说":{"docs":{},"明":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"考":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"链":{"docs":{},"接":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"声":{"docs":{},"明":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}},"就":{"docs":{},"表":{"docs":{},"示":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}},"截":{"docs":{},"取":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"遵":{"docs":{},"循":{"docs":{},"左":{"docs":{},"闭":{"docs":{},"右":{"docs":{},"开":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},":":{"2":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"规":{"docs":{},"则":{"docs":{},"，":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}}}}}},"此":{"docs":{},"类":{"docs":{},"推":{"docs":{},"。":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"用":{"docs":{},"来":{"docs":{},"自":{"docs":{},"定":{"docs":{},"义":{"docs":{},"排":{"docs":{},"序":{"docs":{},"方":{"docs":{},"法":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0020964360587002098}}}}}}}}},"计":{"docs":{},"算":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"的":{"docs":{},"有":{"docs":{},"效":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},",":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"型":{"docs":{},"转":{"docs":{},"换":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049}}}}}},"说":{"docs":{},"明":{"docs":{"算法题/3-Tricks/cppTricks.html":{"ref":"算法题/3-Tricks/cppTricks.html","tf":0.0010482180293501049},"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}},"]":{"docs":{},")":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"下":{"docs":{},"标":{"docs":{},"从":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"起":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"与":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"一":{"docs":{},"个":{"docs":{},"意":{"docs":{},"思":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"一":{"docs":{},"个":{"docs":{},"意":{"docs":{},"思":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}},"主":{"docs":{},"要":{"docs":{},"是":{"docs":{},"用":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"取":{"docs":{},"自":{"docs":{},"于":{"docs":{},"可":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"，":{"docs":{},"指":{"docs":{},"定":{"docs":{},"可":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"对":{"docs":{},"象":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"乘":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"交":{"docs":{},"换":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"以":{"docs":{},"下":{"docs":{},"假":{"docs":{},"设":{"docs":{},"变":{"docs":{},"量":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"值":{"docs":{},"，":{"docs":{},"则":{"docs":{},"代":{"docs":{},"表":{"docs":{},"舍":{"docs":{},"入":{"docs":{},"到":{"docs":{},"小":{"docs":{},"数":{"docs":{},"点":{"docs":{},"后":{"docs":{},"的":{"docs":{},"位":{"docs":{},"数":{"docs":{},"。":{"docs":{},"其":{"docs":{},"实":{"docs":{},"准":{"docs":{},"确":{"docs":{},"的":{"docs":{},"说":{"docs":{},"是":{"docs":{},"保":{"docs":{},"留":{"docs":{},"值":{"docs":{},"将":{"docs":{},"保":{"docs":{},"留":{"docs":{},"到":{"docs":{},"离":{"docs":{},"上":{"docs":{},"一":{"docs":{},"位":{"docs":{},"更":{"docs":{},"近":{"docs":{},"的":{"docs":{},"一":{"docs":{},"端":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"与":{"docs":{},"最":{"docs":{},"短":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{},"一":{"docs":{},"致":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}},"减":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"复":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"字":{"docs":{},"典":{"docs":{},"。":{"docs":{},"d":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"原":{"docs":{},"始":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"除":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"引":{"docs":{},"号":{"docs":{},"前":{"docs":{},"加":{"docs":{},"上":{"docs":{},"字":{"docs":{},"母":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}},"：":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"都":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"按":{"docs":{},"照":{"docs":{},"字":{"docs":{},"面":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"来":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"转":{"docs":{},"义":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"或":{"docs":{},"不":{"docs":{},"能":{"docs":{},"打":{"docs":{},"印":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"取":{"docs":{},"整":{"docs":{},"除":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"模":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"号":{"docs":{},"操":{"docs":{},"作":{"docs":{},"符":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"元":{"docs":{},"组":{"docs":{},"解":{"docs":{},"压":{"docs":{},"为":{"docs":{},"列":{"docs":{},"表":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}},"向":{"docs":{},"下":{"docs":{},"取":{"docs":{},"接":{"docs":{},"近":{"docs":{},"商":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"均":{"docs":{},"匀":{"docs":{},"分":{"docs":{},"布":{"docs":{},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"多":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"中":{"docs":{},"生":{"docs":{},"成":{"docs":{},"指":{"docs":{},"定":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"字":{"docs":{},"符":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}},"选":{"docs":{},"取":{"docs":{},"指":{"docs":{},"定":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"组":{"docs":{},"成":{"docs":{},"新":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"返":{"docs":{},"回":{"docs":{},"默":{"docs":{},"认":{"docs":{},"值":{"docs":{},"的":{"docs":{},"功":{"docs":{},"能":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}},"幂":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"开":{"docs":{},"始":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"（":{"5":{"docs":{},"）":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"（":{"0":{"docs":{},"，":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"是":{"docs":{},"从":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}},"必":{"docs":{},"须":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"成":{"docs":{},"员":{"docs":{},"运":{"docs":{},"算":{"docs":{},"符":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}}}},"改":{"docs":{},"变":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"生":{"docs":{},"成":{"docs":{},"器":{"docs":{},"的":{"docs":{},"种":{"docs":{},"子":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"不":{"docs":{},"了":{"docs":{},"解":{"docs":{},"其":{"docs":{},"原":{"docs":{},"理":{"docs":{},"，":{"docs":{},"你":{"docs":{},"不":{"docs":{},"必":{"docs":{},"特":{"docs":{},"别":{"docs":{},"去":{"docs":{},"设":{"docs":{},"定":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"，":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"会":{"docs":{},"帮":{"docs":{},"你":{"docs":{},"选":{"docs":{},"择":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"格":{"docs":{},"式":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"步":{"docs":{},"长":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"1":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"：":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"（":{"0":{"docs":{},"，":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"由":{"docs":{},"于":{"docs":{},"选":{"docs":{},"择":{"docs":{},"步":{"docs":{},"长":{"docs":{},"是":{"2":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}},"docs":{}}}}}}}},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"最":{"docs":{},"值":{"docs":{},"的":{"docs":{},"列":{"docs":{},"表":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}},"该":{"docs":{},"方":{"docs":{},"法":{"docs":{},"没":{"docs":{},"有":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"会":{"docs":{},"对":{"docs":{},"列":{"docs":{},"表":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"进":{"docs":{},"行":{"docs":{},"排":{"docs":{},"序":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}},"详":{"docs":{},"细":{"docs":{},"介":{"docs":{},"绍":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"语":{"docs":{},"法":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"运":{"docs":{},"算":{"docs":{},"后":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"符":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"逆":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"通":{"docs":{},"过":{"docs":{},"索":{"docs":{},"引":{"docs":{},"获":{"docs":{},"取":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"字":{"docs":{},"符":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}},"闭":{"docs":{},"区":{"docs":{},"间":{"docs":{},"[":{"docs":{},"]":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}},"间":{"docs":{},"隔":{"docs":{},"遍":{"docs":{},"历":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"降":{"docs":{},"序":{"docs":{},"，":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0022123893805309734}}}}},"随":{"docs":{},"机":{"docs":{},"字":{"docs":{},"符":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"数":{"docs":{},"函":{"docs":{},"数":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"于":{"docs":{},"数":{"docs":{},"学":{"docs":{},"，":{"docs":{},"游":{"docs":{},"戏":{"docs":{},"，":{"docs":{},"安":{"docs":{},"全":{"docs":{},"等":{"docs":{},"领":{"docs":{},"域":{"docs":{},"中":{"docs":{},"，":{"docs":{},"还":{"docs":{},"经":{"docs":{},"常":{"docs":{},"被":{"docs":{},"嵌":{"docs":{},"入":{"docs":{},"到":{"docs":{},"算":{"docs":{},"法":{"docs":{},"中":{"docs":{},"，":{"docs":{},"用":{"docs":{},"以":{"docs":{},"提":{"docs":{},"高":{"docs":{},"算":{"docs":{},"法":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"并":{"docs":{},"提":{"docs":{},"高":{"docs":{},"程":{"docs":{},"序":{"docs":{},"的":{"docs":{},"安":{"docs":{},"全":{"docs":{},"性":{"docs":{},"。":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"包":{"docs":{},"含":{"docs":{},"以":{"docs":{},"下":{"docs":{},"常":{"docs":{},"用":{"docs":{},"随":{"docs":{},"机":{"docs":{},"数":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}},"浮":{"docs":{},"点":{"docs":{},"数":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}},"生":{"docs":{},"成":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"在":{"docs":{},"[":{"0":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"docs":{}}},"docs":{},"x":{"docs":{},",":{"docs":{},"y":{"docs":{},"]":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"。":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"取":{"0":{"docs":{},"到":{"1":{"0":{"0":{"docs":{},"间":{"docs":{},"的":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"：":{"docs":{"算法题/3-Tricks/pythonTricks.html":{"ref":"算法题/3-Tricks/pythonTricks.html","tf":0.0011061946902654867}}}}}}}}}}},"length":3317},"corpusTokens":["!","!=","\"\",","\"012345\";","\"1234\";","\"aajsdd\"","\"ab\",","\"abcw\",","\"back\"","\"basic_string_view::substr\");","\"bits/stdc++.h\"","\"cd\"。","\"fviefuro\"","\"live\"","\"owoztneoer\"","\"think\"","\"xtfn\"。","#","#!/usr/bin/python","#append()","#includ","#pop()","#————————————————————defaultdict———————————————————","#———————————————————————dict———————————————————————","#不存在的key","$","$$","$\\frac{1}{2}$","$\\textit{dp}$，其中","$\\textit{dp}[i][j]$","$\\textit{word}_2$","$\\textit{word}_2[0:j]$","$dequ","$deque[0]$）添加至列表","$deque[0]=$","$i","$i=0$","$k$","$l","$l$","$m","$m$","$m+1$","$n$","$n$，则我们可以把数组分为两部分，一部分为相同的","$n$，创建","$n+1$","$num","$nums$","$nums[j]$","$o(2n)$","$o(l","$o(n)","$o(n)$","$o(n)$：","$target","$x$，另一部分为$","$x$，数组的总长度为","$y","$y$","$y$，则此时","$。该矩阵具有以下特性：","$中最多同时存储","$内所有","$占用","$占用$","$尾部；","$长度；线性遍历","$，结果列表","$：","$；每个元素最多仅入队和出队一次，因此单调队列","%","&","&&","&&value>dq.back()){","&a","&arr,","&b","&edges)","&kv:mp){","&nums,","'!']","'!'])","''.join(random.sample(['z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'],","''.join(random.sample(string.ascii_lett","'*'","'*'表示0个p[j","'*'表示1个p[j","'*'表示n个p[j","'.'","'.')","'a","'a',","'d',","'fall'),","'fall',","'h'","'j'}","'m'","'node')","'node':","'spring'),","'summer'),","'summer',","'three']","'two',","'winter')]","'winter']","'world',","'布'])","'石头',","(","(!adjacencylist.size())","(!nums.size())","(!qu.empty())","()","(0x1","(1)","(1,","(2)","(2,","(3,","(3,5);","(4,","(==if","([start,]","(`a","(auto","(b","(bi","(c++11)","(char","(const","(constructor)","(cur","(digits[i]","(forwarditer","(i.e.,","(ib;};","(int","(key,","(m+k))$","(map","(matrix[x][y]","(memo.count(n))","(most","(n","(not","(of","(pos);","(public","(quot","(randomaccessiter","(s[i","(stack","(stl","(the","(uffactor[node]","(v.begin(),","(vector","(vote1","(vote2","(x","(x>y)","(x。",")",")函数进行产生随机化种子，随着seed的不同，就能够产生不同的随机数。","*","**","**default","**shall","*/","*cur","*heap","*left;","*less","*max_element(nums.begin(),nums.end());","*min_element(nums.begin(),nums.end());","*pre","*re","*root","*strict","*这里必须是非成员函数才可以","+","++c[ch];","++digits[i];","++x;","+=","+a;",",",",decltype(cmp)>",",格式如下所示：","...","...])","/","/*","/**使用重载函数操作符的类对象*/","/**函数对象*/","/**定义一下比较函数*/","/**重载小于操作符，","/*使用函数对象来定义这个比较函数原型*/","//","//(chars,","//a","//b","//c","//case","//custom","//d","//default","//do","//e","//f","//g","//h","//int","//lambda","//mid向上取整时，right必须减1","//mid向下取整时，left必须加1","//point","//std::coutvalright;","//函数指针来初始化函数对象","//初始化","//剪枝","//单独初始化","//可以这样理解，在p[:j","//向上取整","//如果三个元素均不相同，则相互抵消1次","//如果该元素为第一个元素，则计数加1","//如果该元素为第二个元素，则计数加1","//定义dp的时候自动赋值","//定义动态规划表","//左子树右边界的逆","//有入度、出度表","//有向图","//此写法会报错","//由大到小排序","//由小到大排序","//至于p[j","//输出结果","//需先将string转成char*","0","0$","0)","0))","0,","0,2,6,11,15,20,22","0.5))","0000","0001","0011]","04.01.","0:","0;","0]","0~99","0。","1","1)","1))","1));","1).","1):","1);","1+a是终止值，n是整数的范围。","1,","1,3,8,12,17,21,23","1.","1.1","1.1.1","1.1.2","1.1.3","1.2","1.2.1","1.2.2","1.3","1.3.1","1.3.2","1.3.3","1.3.4","1.4","1.4.1","1.4.2","1.5","1.5.1","10","10)","10,","10,9,8,7,6,5,4","10.","100","100;","101,","11","11.","1100]","123。","13,14,15,16,17,18,19},","1306.","15,","16","18.","18（可被","19","19,18,17,16,15,14,13","1:","1;","1]","1]$来转移","1]$来转移。","1]$；","1])+1","1]:","1];","1]=='*'","1]=='.')","1]==p[j","1]==target){","1][j","1][j]","1][j]$和$dp[i][j","1][j],dp[i][j","1][j]为真的时候","1][m","1]。","1]为'*'的情况下，当dp[i","1};","1。","1。这是因为我们可以在","1个元素加一等价于1个元素减一。另外python和c++的","1或","1替换","1）如果cur无左孩子","1，原因同上。","1，原因同上；","1：","2","2)","2)#[","2))","2),","2);","2,","2.","2.0","2.1","2.2","2.2.1","2.2.2","2.3","20","20);","20,","207.","210","210.","22","22,20,15,11,6,2,0","23,21,17,12,8,3,1","25]","278、1a62、26、80、88、4、151","2:","2;","2]","2]&&p[j","2]字符的条件：dp[i][j","2]字符：dp[i","2]是什么就不重要了","2d","2替换","2：","3","3)","3,","3.","3.1","3.2","30","30,","31","318.","35.","367","384.","397.","3:","3]","3]与空字符串匹配的情况下，必须有p[j","3、如果要产生1~100，则是这样：int","4","4),","4,","4,5,6,7,8,9,10","423.","4:","4]","4]没有5","4、总结来说，可以表示为：","5","5)","5))","5),","5,","540","547.","559.","583.","5、一般性：rand()","5）","5）;","6","6)]","6,","684","684.","692.","6]","6、若要产生0~1之间的小数，则可以先取得0~10的整数，然后均除以10即可得到“随机到十分位”的10个随机小数。若要得到“随机到百分位”的随机小数，则需要先得到0~100的10个整数，然后均除以100，其它情况依","7","7,","72.","785.","7、通常rand()产生的随机数在每次运行的时候都是与上一次相同的，这样是为了便于程序的调试。若要产生每次不同的随机数，则可以使用srand(","8","8))","8,","841.","8]","8、还可以包含time.h头文件，然后使用srand(time(0))来使用当前时间使随机数发生器随机化，这样就可以保证每两次运行时可以得到不同的随机数序列，同时这要求程序的两次运行的间隔超过1秒。","8，它们的和是","9","9)","9,","9//2","997.","9:","9]","9生成指定数量的随机字符：","9）。按",":",":val(x),",";","=","=1+min(d[i][j−1],d[i−1][j],d[i−1][j−1]−1)","==","==\"back\"==","==greatest==","==top==","=>",">",">=",">>>",">>>a",">>>list(range(0,",">>>range(5)",">>>season",">>>seq",">children){",">left",">left);",">left;",">next",">next,",">next;",">next];",">num",">original.resize(nums.size());",">random",">random];",">right",">right!=cur){",">right!=null&&mostright",">right;",">right==null){",">right=cur;",">right=l5;",">right=null;",">right=pre;",">val",">val);","?","[","[\"a\",\"aa\",\"aaa\",\"aaaa\"]","[\"a\",\"ab\",\"abc\",\"d\",\"cd\",\"bcd\",\"abcd\"]","[\"abcw\",\"baz\",\"foo\",\"bar\",\"xtfn\",\"abcdef\"]","[\"e\",\"g\",\"f\",\"i\",\"h\",\"o\",\"n\",\"s\",\"r\",\"u\",\"t\",\"w\",\"v\",\"x\",\"z\"]","['hello',","['one',","['spring',","[(0,","[(1,","[,base])","[,imag])","[,n])","[,step])","[0,","[0,0,0]","[0]","[1","[1,","[1,2,3]","[1]","[2,3,3]","[240]","[3,4,3]","[3,6,5,1,8]","[34]","[35]","[4,","[4,4,4]","[4,5,6,7,8]","[4,5,6]","[74]","[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]],","[]","[](const","[](pi","[],","[first,last).","[key,val]","[start=0])","[“aaab”,”ab”,”aab”,”cdee”,”deedc”,”dec”]","\\begin{cases}","\\end{cases}","\\frac{n","\\frac{n}{2}$，但是按照我们之前的推理","\\geq","\\in","\\le","\\log","\\neq","\\small","\\textit{word}_1[0:i]$","\\time","]","^","__init__(self):","__init__(self,","__n","__po","__pos);","__pos,","__rlen","__rlen};","_children)","_children;","_m_check(__pos,","_m_len","_val)","_val,","_val;","`comp(a,b)`,","`less`**,","`solut","`true`","a)","a*","a**b","a*2","a*算法","a*（念做：a","a+1)+","a,b","a,const","a,pi","a.ag","a.firstb.second;","a.second*b.second);","a.second==b.second?","a0[0000","a1","a1,","a1[\"ab\"]","a2","a=10，变量","a[\"aaab\"]","a[1:4]","a[1]","a`bool`.","abs(x)","abstract","ac","access","accord","adaptors,","adjacencylist)","adjacencylist;","age;","alfr","algorithm","algorithm/58rgqe/","algorithm/e2t5ug/","alias","alpha","alway","an","ans(k);","ans(n","ans.append(element1)","ans.append(element2)","ans.push_back(element1);","ans.push_back(element2);","ans;","ans[","ans[0]","append()","appli","argument","arithmet","arr","arr)","arr:","array","atoi()","atoi(s);","atoi(str);","atoi(str.c_str());","att","auto","averi","a~b","a，那么显然","b","b){","b){return","b,a","b=21：","b[\"ab\"]","back","basic","basic_string_view","basic_string_view{_m_str","befor","beta剪枝","bf","bfs()","bfs(node*","bfs(root);","binari","binarysearch","binarysearch(vector&","binarytre","bisect","bisect()","bisect_left(list,target)","bisect_right(list,target)//","bool","bool:","boy","break;","bsearch_1(int","bulbswitch(int","bulbswitch(self,","b，那么显然","c","c++","c++/python","c++中rand()","c++容器vector的数组片段截取操作_stitching的博客","c;","c[\"aab\"]","c['f']","c['g'];","c['h']","c['i']","c['o']","c['s']","c['u'];","c['w'];","c['x'];","c['z'];","call","ceil(x)","center[8]={6,7,8,11,12,15,16,17};","ch:","char","char*","charact","check","child","children","children){","children;","choice(seq)","chr(x)","class","class.","class``","cmp","cmp(x,","cn.com/leetbook/read/illustr","cn.com/problems/bulb","cn.com/problems/greatest","cn.com/problems/longest","cn.com/problems/major","cn.com/problems/minimum","cn.com/problems/plu","cn.com/problems/search","cn.com/problems/slid","cn/3.6/howto/sorting.html","cn/3.7/library/stdtypes.html#sequ","cnt(10);","cnt1","cnt1++;","cnt1,","cnt2","cnt2++;","cnt[0]","cnt[1]","cnt[2]","cnt[3]","cnt[3]={0,0,0};","cnt[4]","cnt[4];","cnt[5]","cnt[6]","cnt[6];","cnt[7]","cnt[8]","cnt[8];","cnt[9]","coding:","collect","collections.dequ","collections.deque()","comp","comp);","comp:","compar","complex(r","consid","const","constexpr","construct","contain","container*","container,","contains,","content","continue;//相当于是cur将会有第二次访问的机会，所以这次不打印","copi","copy(nums.begin(),","copy(original.begin(),","copyrandomlist(node*","copyrandomlist(self,","cout","cout=target)?","cout>mp[i];","cpp","cpp)","cpptrick","creat","criterion.","csdn博客_c++","cur","cur)","cur);","cur,","cur.next","cur.next.next","cur.next.random","cur.next:","cur.random.next","cur.random:","cur:","cur:cur+1;","cur;","cur=cur","cur向右移动cur=cur","cur向左移动","cur想右移动","custom","c，那么显然","d","d0[0000","d1","d1[\"cde\"]","d[\"deedc\"]","d[i][j]=1+min(d[i][j−1],d[i−1][j],d[i−1][j−1])","d[i][j]=min(d[i][j−1]+1,d[i−1][j]+1,d[i−1][j−1])\\","d[n","danc","data","datastructur","ddhh","def","default","default)","default,","defaultdict","defaultdict(int)","defines.**","definit","deletenode(listnode*","denot","depth){","dequ","deque()","deque(['hello',","deque.popleft()","deque[","deque[0]","descript","design","details.\";","df","dfs(child,depth+1);","dfs(int","dfs(node*","dfs(root,0);","dfs，还有拓扑排序、最短路、最小生成树，有时也会用并查集进行分类，还要注意节点的入度出度等特征。","dic","dic.get(cur.next)","dic.get(cur.random)","dic[0]","dic[22]","dic[cur]","dic[cur].next","dic[cur].random","dic[head]","dict","dict()","dict(d)","dictionari","dictionary.html","differ","difference)","difference/","difference:","difference]","difference，请你找出并返回","digit","digits)","digits.size();","digits:","digits;","digits[i]","digits[j]","divis","docker","dp","dp(m","dp(s.size()+1,vector(p.size()+1,false));","dp;","dp[0][0]","dp[0][j","dp[0][j]","dp[i","dp[i][0]","dp[i][j","dp[i][j]=","dp[v","dp[v]","dp[v]);","dq.front();","dq.pop_back();","dq.pop_front();","dq.push_back(value);","dq;","dyf","e","e[\"cdee\"]","edge)","edges）：两个顶点之间存在多条边相连接。","element","element1","element1)","element1,","element1:","element2","element2)","element2:","elements.","elements/","elif","ell","else:","else{","emplac","empti","empty:","encapsul","end","enumerate()","enumerate(seq):","enumerate(sequence,","equal","eval(str)","exampl","exp(x)","express","f[dec]","fabs(x)","fals","false;","featur","file","findredundantconnection(vector>","finop[20];","finop[depth]='\\0';","first","first,","first_argument_type;","fisher","flag=false;","flag=true;","float(x)","floor(x)","flowchart","follow","for(auto","for(auto&","for(char","for(int","forwarditer","for遍历","friend","frozenset(s)","fuction","fulfil","func(cmpfunc);","function","g","g(adjacencylist);","g.printallnode();","generalities,","get_h(){","given","go","grammar","graph","greater","greater)","head","head)","head,","head.next","head:","head;","hello","hellopython","hex(x)","home","hor","horse到","horse和","http://www.cplusplus.com/reference/algorithm/max_element/","http://www.cplusplus.com/reference/algorithm/min_element/","https://docs.python.org/zh","https://leetcod","https://www.cnblogs.com/pzhfei/archive/2013/01/14/lambda_expression.html","https://www.cnblogs.com/sylar5/p/6638641.html","https://www.cnblogs.com/zhangxinqi/p/9729406.html#_label8","https://www.jb51.net/article/202477.htm","https://www.jianshu.com/p/bbd258f99fd3","https://www.runoob.com/python/att","https://www.runoob.com/python/python","https://www.runoob.com/python3/python3","https://zhuanlan.zhihu.com/p/54510444","https://zhuanlan.zhihu.com/p/93647900/","i)","i,","i,int","i=0;ib;","ida*","if(!(a.first&b.first)){","if(!get_h())","if(!nums.size()){","if(!qu.size())","if(!root)","if(check(mid))","if(cur","if(get_h()==0)","if(head","if(head==null)","if(i==0)","if(mostright","if(mostright!=null){//如果有左子树执行","if(mp.count(temp)){","if(mp.count(word))","if(mp[i]==0)","if(nums[cur]","if(nums[cur]==target)","if(nums[cur]==target){","if(nums[cur]>target)","if(pq.size()>k)","if(pq.size()>k){","if(qu.front()==dq.front()){","if(qu.size()){","ii","ii/","iii","imoprt","implement","import","includ","indeg;","indic","input","insert","instantiation,","int","int(sqrt(n","int(x","int)","int:","int[]","integerreplacement(int","integerreplacement(n","integr","internal*underli","introduct","intstr","ismatch(str","isperfectsquare(self,","it++;","it;","item","iter","iterabl","j","j)","k","k)","k)$","k),","k,","k:","k]","k]$，右边界范围$","key","key2","key=>valu","key=none,","keyerror:","known","k}{2}$","k，请找出所有滑动窗口里的最大值。","l","l,","l1","l1;","l2","l2;","l3;","l4;","l;","lambda函数","last","last):","last);","last,","last,const","last:","leetcod","leetcode练习","left","left(null),","left,","len","len(digits)","len(l)","len(matrix),","len(matrix[0])","len(nums)","len(self.nums))","len(set(l))","length(word[i])","length(word[j])","length)","length,","less","lifoqueu","lifoqueue(maxs","line","link","list","list()","list(a1)","list(a2)","list(enumerate(seasons))","list(enumerate(seasons,","list(range(0))","list(range(0,","list(range(1,","list(range(5))","list(s)","list(zip(a,c))","list(zipped)","list.sort(","list.sort(cmp=none,","list[int])","list[int]):","list[int],","list[int]:","list[list[int]],","listnod","listnode)","listnode*","listnode:","live","log(x)","log10(x)","longestsubsequence(self,","longestsubsequence(vector","loop）：一个顶点到这个顶点自身的边","low,up;","low=std::lower_bound","lower_bound/upper_bound","m","m$","m)$。","m)$，其中","m,","m;","m_adjacencylist","m_adjacencylist.size();","m_adjacencylist;","main","main()","main(){","maintain","majorityelement(self,","majorityelement(vector&","mani","map","map;","map[cur","map[cur]","map[head];","matrix","matrix,","matrix.size(),","matrix:","matrix[0].size();","matrix[x][y]","max(ans,","max(depth+1,res);","max(dp.values())","max(list)","max(mp[temp],(int)word.size());","max(res,","max(turntable[a%3],a)","max(turntable[b%3],b)","max(turntable[c%3],c)","max(x1,","max.html","max_valu","max_value()","max_value(self)","max_value、push_back","maxdepth(node*","maxdepth||depth+get_h()>maxdepth)","maximum/","maxqueu","maxqueue()","maxqueue:","maxslidingwindow(self,","maxslidingwindow(vector","maxsumdivthree(self,","maxsumdivthree(vector&","maxvalu","member","memo.push({0,1});","memo;","memo[n]","memo[n];","merg","mid","mid+1;","mid;","mid]","min(dp[i","min(integerreplacement(n","min(list)","min(nums)","min(x1,","min.html","min_element()","min_num","mindistance(str","minmoves(self,","minmoves(vector&","minvalu","minvalue;","modf(x)","morrisin(treenode*head){","morris算法","mostright","mostright=cur","mostright=mostright","move","mp){","mp.begin();","mp;","mp[24];","mp[temp]","mp[word]","myfunct","myints[]","n","n$","n)","n)的算法解决此问题吗？","n.","n/3","n:","name;","namespac","needed”。在第二行中，您必须在这些移动后输出中心方块中的块数字。如果有多种可能的解决方案，则必须输出使用最少移动次数的解决方案。如果仍有多个可能的解决方案，则必须输出字典顺序中最小的解决方案。不需要在案例之间输出空行。","new","next","node","node()","node(cur","node(cur.val)","node(int","node)","node*","node.","node;","noexcept(false)","none","none)","none:","note:","npos)","nullptr","nullptr)","nullptr);","nullptr;","null。","num","num:","num;","number","numofnod","nums)","nums){","nums,","nums.begin());","nums.copy()","nums.end(),","nums.size()","nums.size();","nums:","nums;","nums[i","nums的","nums，和一个目标值","nums，请你找出并返回能被三整除的元素最大和。","n个字符情况。因此可以把情况二的判别省略。","n叉树的最大深度","o(1)。","o(1)的算法解决此问题。","o(k)$：","o(log","o(n)","o(n)o(n)","o(n)、空间复杂度为","object","object,","object.","oct(x)","on","one/","op)","oper","operations:","operator()","operator*","option(int","ord(x)","order","ordering*","ordering*).","original.begin());","original.end(),","original;","originaldigits(str","out_of_range.","output","p","p)","p[:j]","p[j","page","pair","paramet","particular","pis;","plusone(self,","plusone(vector&","po","point","pointer","pop","pop()","pop_back","pop_front","pop_front()","pope","pos[8][7]=","posit","possibl","pow(x,","pq(comp);","pq.pop();","pq.push(*it);","pq.push(kv);","pq.top().first;","practic","pre","pre)","pre):","pre.next","pre.next.next","pre;","pre=tmp;","predic","preserv","print","print(","print('\\nel","print('\\nempty:',","print(a,b)","print(len(stack))","print(stack)","print(stack.get())","print(stack.pop())","print(stack.qsize())","printallnode()","printedge(cur","printedge(head);","prioriti","priority_queu","priority_queue,decltype(comp)>","priority_queue,function>","priority_queue,mycmp>","priority_queue::container_type.","priority_queue::value_type.","private:","properties*","provid","public:","push","push_back","push_back(int","push_back(self,","pushed/pop","python","python3","pythontrick","python中栈也可以用deque类实现，当我们想要在实现在容器两端更快速地进行append和pop操作时，deque比列表更合适．deque可以提供o(1)时间的append和pop操作，而列表则需要o(n)时间.","python常用数学函数","python数据类型转换","python的map实现","python的内置数据结构list可以用来实现栈，用append()向栈顶添加元素,","python算术运算符","p，请你来实现一个支持","qu.front();","qu.pop();","qu.push(child);","qu.push(root);","qu.push(value);","qu.size();","qu;","que1;","que2;","que4(cmp);","que5(cmp);","que6(cmpfunc);","que7(func);","queue","queue.","queue.deque()","queue.lifoqueu","queue.queue()","queues.","queue模块有lifo","queue，也就是栈结构．用put()和get()操作从queue中添加和获得数据","r","r'\\n'","r){","r/r","r]划分成[l,","r]时","ran_str","rand()","rand()不需要参数，它会返回一个从0到最大随机数的任意整数，最大随机数的大小通常是固定的一个大整数。","random","random()","random.choice('abcdefghijklmnopqrstuvwxyz!@#$%^&*()')","random.choice(['剪刀',","random.randint(1,50)","random.random()","random.randrange(0,","random.randrange(i,","random.sample('zyxwvutsrqponmlkjihgfedcba',5)","random.shuffle(items)","random.uniform(1,","randomaccessiter","randrang","rang","range()","range(0,","range(k):","range(len(self.nums)):","range(n","range(n)):","range(start,","re","recent","recur(cur","recur(cur,","recur(cur.next,","recur(head,","recur(listnode*","remainder[3]","remov","repr(x)","requir","requirements.","res,","res.append(deque[0])","res;","reset()","reset(self)","result_type;","return","return;","revers","reverse=false)","reverselist(listnode*","reverselist(self,","reverseop[9]={5,4,7,6,1,0,3,2,","right","right(null)","rightreverse(treenode*root){","ro","root","root)","root){","root,","ros的编辑距离不会超过","round(x","ro变为相同的字符串，只需要额外的","ro的编辑距离为","r（可以大小写）以外，与普通字符串有着几乎完全相同的语法。","s","s)","s,","s1.morrisin(root);","s1.morrismid(root);","s1.morrispos(root);","s1.morrispre(root);","s1;","s[:i]","s[i","s[i]","same","sampl","search","searchinsert(vector&","searchmatrix(self,","searchmatrix(vector>&","searchrange(vector&","second_argument_type;","seed","seed([x])","self.dequ","self.deque.popleft()","self.deque[","self.deque[0]","self.deque[0]:","self.num","self.nums[i]","self.nums[i],","self.nums[j]","self.nums[j],","self.origin","self.original.copy()","self.queu","self.queue.empty():","self.queue.get()","self.queue.put(value)","sequenc","set","set(l)","set(s)","shall","shorter,","shuffle()","shuffle(lst)","shuffle(self)","size","size=4}","size_t","size_typ","smallest","solut","solution(){","solution(int[]","solution(vector&","solution:","someth","sort","sort()","sort(randomaccessiter","sort.html","specif","specifi","sqrt","sqrt(n)向下取整。","sqrt(n+0.5);","sqrt(x)","stack","stack')","stack)","stack.","stack.append('!')","stack.append('hello')","stack.append('world')","stack.empty())","stack.put('!')","stack.put('hello')","stack.put('world')","stack;","standard","start","start=1))","star）算法是一种很常用的路径查找和图形遍历算法。它有较好的性能和准确度","std","std::cout","std::coutleft;","std::coutvalleft;","std::coutvalright;","std::lower_bound,","std::min(__n,","std::priority_queu","std::size_t","std::sort","std::strin","std::string","std::swap","std::swap(s[0],s[5]);","std::swap(x,y);","std::unordered_map","std::upper_bound","std::upper_bound,","std::vector","std::vector::iter","std;","step","step])","stop","stop[,","stop。例如：range（0，","stored.","str","str(\"5678\");","str(x)","str.find(\"live\");","str.substr","str2","str3","str=\"we","strict","string","string.","string.digits,","string2int(str","string2int(word);","string::npo","string::size_type).","string::substr","struct","structur","student","student{","subsequ","substr","substr(size_typ","substring.","such","sum","support","swap","swap()","swap(a,b):","switcher/","s，就能在","t","t&","t)","t.","take","target","target)","target){","target:","target。找出给定目标值在数组中的开始位置和结束位置。如果数组中不存在目标值","target，返回","tarjan","temp","temp=mp[pos[op][0]];","templat","test","think","three","three/","throw","tmp","tmp.next","tmp;","to_sting();","to_string()","top","topkfrequent(vector&","traceback","treenod","treenode(1);","treenode(2);","treenode(3);","treenode(4);","treenode(5);","treenode(7);","treenode(int","treenode*","treenode*cur=head;","treenode*cur=root","treenode*l1","treenode*l2","treenode*l3","treenode*l4","treenode*l5=","treenode*mostright=null;","treenode*pre=root;","treenode*right;","treenode*tmp=cur;","trick","true","true;","tupl","tuple(s)","turntabl","turntable[0]","turntable[0]+","turntable[1]+","turntable[2]+","turntable[a%3]","turntable[b%3]","turntable[c%3]","two","type","typedef","uffactor.resize(edges.size()","uffactor;","uffactor[node]","uffactor[uffind(edge[0])]","uffind(edge[1]);","uffind(int","uffind(uffactor[node]);","ufunion(vector","underli","uniform(x,","unordered_map","unordered_map::iter","unordered_map的遍历","unsign","until","up=","upper_bound","upper_bound()","us","used.","used==).","utf","v","v(myints,myints+8);","v.end());","v.end(),","v:","val","val)","val);","val,","val;","valu","value)","value)元组序列。","value1,","value2","value:","value_typ","val，这就叫中序。","val，这就叫后序遍历","vector","vector(n","vector,","vector>","visited.resize(numofnode);","visited;","visited[node]","void","vote1","vote1++;","vote1,","vote2","vote2++;","way","weak","whether","while(!dq.empty()","while(!pq.empty())","while(!qu.empty()){","while(cur","while(cur!=null){","while(it!=mp.end()){","while(l>0&&nums[l","while(l>1;","while(mostright","while(r","whitehead)","width","window","word","word.size();","word1","word1,","word1.length();","word1.size();","word2","word2)","word2.length();","word2.size();","word2，找到使得","word2，请你计算出将","word_1[i]","word_1[i]=word_2[j]\\","word_2[j]","words)","words){","words,","words，找到","world","x","x)","x**i","x,","x2,...)","x:10","x:20","x=10,","x>y;}","x}{2}","y","y)","y:10","y:20","y;","y=20;","yate","z'","z0","za","zip","zip()","zip(*zip(a,b))","zip([iterable,","zip(a,b)","zip(range(1","{","{'s',","{//不需要移动","{0};","{1,2,4,3};","{10,20,30,30,20,10,10,20};","{font","{key1","{return","{}","{};","|","|=","||","}","},","};","}els","​","“原节点","“形成窗口后”","“未形成窗口”","。","。返回让数组所有元素相等的最小操作次数。","一个对象","一个序列、迭代器或其他支持迭代对象。","一个或多个迭代器;","一个数的因数个数只有在该数为完全平方数的时候才是奇数。","一些题目的编程模板","上面的代码是做了空间复杂度优化的，用三个整型空间就存储系统的状态，每次来一个新的元素就更新状态。","下标从","下标起始位置。","不存在这样的两个单词。","与","与cpp的lower_bound一个意思","与cpp的upper_bound一个意思","且","两个字符串的删除操作","两个对象相加","两个数相乘或是返回一个被重复若干次的字符串","两个迭代器，用来指定范围","两个阶段拆分到两个循环里实现。代码虽变长，但减少了冗余的判断操作。","两轮遍历链表，使用","个元素","个元素增加","个元素（即窗口大小）。","个出现次数最多的单词。","个字符的。","个灯泡处于关闭状态。第一轮，你将会打开所有灯泡。接下来的第二轮，你将会每两个灯泡关闭一个。","个灯泡就切换一个灯泡的开关。直到第","中","中对应的","中序遍历","中序遍历是从左孩子节点返回以后，才开始处理父节点的","中所有的元素均为","中插入一个字符：如果我们知道","中插入一个字符：如果我们知道hor","中最长等差子序列的长度，该子序列中相邻元素之间的差等于","中的一个目标值","中等","为","为10的21次方","为了从下级回到上级要有一个堆栈用来存储返回上级的信息","为偶数","为奇数","为数组","为此提出两种方法：","主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。","之外，这个整数不会以零开头。","之间的一个随机整数。","乘","也可以用来作为动态规划的记忆器","也可能不等于，即包含了'*'表示1","二分查找","二分查找while循环阶段","二分查找参数初始化","二分算法的模板","二叉树","二叉树的遍历主要有三种：","二叉树遍历的代码有非常强的格式性，因此很好写","交换swap","人类在观察正则表达式的时候是从左往右，在左侧能够匹配是右侧能够匹配的必要条件。","介绍","介绍一种时间复杂度为o(n)","从a","从右上角开始，z字形查找。","从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。","从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为","从英文中重建数字","代码","代表目标在左边","以下假设变量","仿函数","优化剪枝","优点","会到达该节点2次","会达到该节点1次","但与此同时，自环边和平行边，会加大算法设计的难度，而且在很多情况下，我们真正关心的问题，其实是和自环边","你可以对一个单词进行如下三种操作：","使用","使用任何内置的库函数，如","使用在for循环中：","使用整数数组","使用线性大小的额外空间。","例子：","例子：http://www.cplusplus.com/reference/algorithm/sort/","例子：https://www.runoob.com/python/att","例题","例题：34.","保持","保证是一个符合题目要求的字符串","修改","修改单词","修改节点引用指向","值，则代表舍入到小数点后的位数。其实准确的说是保留值将保留到离上一位更近的一端。","假如你在饭堂打饭时，有个人人高马大，急匆匆跑过来，看排了这么一长串队，心中急躁，从队列最后的一个人开始，看见好欺负的就赶走，自己站着，直到干不过的就停下，这就是单调双端队列。","假设两堆牌，","假设字符串$\\textit{word}_1$","元素个数与最短的列表一致","先将每个字符串编码为int","先序遍历一旦遇到一个节点，首先对该节点的","其中","其中的a是起始值，n","内容","冗余连接","减","函数","函数来初始化函数对象","函数用于对原列表进行排序，如果指定参数，则使用比较函数指定的比较函数。","函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象，这样做的好处是节约了不少的内存。","函数的用法","分割，整个字典包括在花括号","分割，每个键值对之间用逗号","分析","列的二维数组","创建一个复数","创建一个字典。d","初始化完成以后，需要完整的列出状态转移公式。","初始化对象","初始化：","初始时有","删除","删除一个字符","删除链表节点","判断二分图","利于剪枝","到","刷题时常用的函数和技巧","前k个出现次数最多的字符串","前k个高频单词","前序遍历","剑指offer","剩余的牌的顺序无所谓，因为是从它们中间随机等概率抽取新牌的。","加","加一","动态规划","动态规划的结果位于dp矩阵的右下角dp[s.size()][p.size()]","匹配任意单个字符","匹配零个或多个前面的那一个元素","升序","升序（默认）。","单独处理原链表尾节点","即不需要这个'*'","原始字符串","原始字符串除在字符串的第一个引号前加上字母","原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。","参数","参数:","参数说明：","参考","参考链接","叉树的最大深度","叉树输入按层序遍历序列化表示，每组子节点由空值分隔（请参见示例）。","叉树，找到其最大深度。","双向广度优先搜索","双端队列","双语言","反转一些","反转链表","取整除","取模","变为","变为相同的字符串；","只需要3次操作（注意每次操作会增加两个元素的值）：","可以以后进先出的顺序删除元素。但是列表本身有一些缺点，主要问题就是当列表不断扩大的时候会遇到速度瓶颈．列表是动态数组，因此往其中添加新元素而没有空间保存新的元素时，它会自动重新分配内存块，并将原来的内存中的值复制到新的内存块中．这就导致了一些append()操作会消耗更多的时间。（这一点和cpp","可以将","可以用来去重","可以说两次重合","可以返现第二种情况被第三种情况涵盖了：","可理解为解压，返回二维矩阵式","可能等于","可被三整除的最大和","可选参数,","号操作符，可以将元组解压为列表。","后处理","后处理阶段","后序遍历","后序遍历是从右孩子节点返回以后，（处理完所有孩子节点以后），才开始处理父节点的","向下取接近商的整数","启发式搜索","启发式搜索题目","和","和[mid+1,","和[mid,","和一个字符规律","和一个整数","和它前面的一个字符，就可以实现匹配。","和滑动窗口的大小","哈希表","哈希表加小顶堆","哈希表加排序","哈希表的方法即在用next指针遍历列表的时候，建立原节点和拷贝节点的对应关系。","回溯法","因为random指针可能指向一个暂时还没有创建的节点拷贝。","因此什么可以维护数组的前部和后部，然后将随机从后部中取出一张和前部的结尾互换位置。","因此我们可以用动态规划的方法，定义一个二维数组dp[i][j],","因该满足","困难","图的问题基本就是","图论刷题","在p[j","在单词","在排序数组中查找元素的第一个和最后一个位置","在每一状态搜索的开始，高效的使用哈希表搜索这个状态是否出现过，如果已经做过，直接调用答案，回溯","在需要考虑数位的题目中，使用","均匀分布浮点数","城市到","城市可能有不止一条路，可能有三条路，在这种情况下，平行边就非常有意义。","基本概念","声明","复制各节点，并建立","复制各节点，并构建拼接链表","复制复杂链表","复制新链表的random指针；","复制节点并构建拼接链表；","复杂度分析：","多个字符中生成指定数量的随机字符：","多个字符中选取指定数量的字符组成新字符串：","多了一个返回默认值的功能。","如math.log(math.e)返回1.0,math.log(100,10)返回2.0","如下图所示，题目要求将链表反转。本文介绍迭代（双指针）、递归两种实现方法。","如果","如果cur有左孩子","如果mostright的右指针为空,让其指向cur","如果mostright的右指针指向cur","如果p[j","如果一个树有左子树","如果三个元素均不相同，则相互抵消1次","如果你要产生","如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用","如果字符串中不包含给定的字符返回","如果字符串中包含给定的字符返回","如果指定了该参数会使用该参数的方法进行排序。","如果没有，则按正常方法搜索","如果该元素为第一个元素，则计数加1","如果该元素为第二个元素，则计数加1","子序列","字典是另一种可变容器模型，且可存储任意类型对象。","字典的每个键值","字符串","字符串整数编码，加哈希表同组合并。","字符串运算","字符串连接","定义并维护一个长度为k的堆，","定义状态","实例","实现","实现堆的操作","实用文档","宫水三叶的题库:","对个不同的元素配对，此时我们假设还存在另外一个次数大于总数一半的元素","对于dp[i][j]","对于每个测试用例，您必须输出两行。第一行包含达到最终配置所需的所有动作。每个动作都是一个字母，从“a”到“h”，并且行中的字母之间不应有任何空格。如果不需要移动，则输出“no","对用冒号","对链表做一些操作然后返回链表头节点的题目，经常需要创建一个哨兵节点dummy，用来记录头节点的位置。","将","将x转换为一个整数","将x转换到一个浮点数","将一个字符转换为它的整数值","将一个整数转换为一个八进制字符串","将一个整数转换为一个十六进制字符串","将一个整数转换为一个字符","将区间[l,","将对象","将序列","将序列的所有元素随机排序","就表示","左右根","左根右","左边界范围","左边的一堆是从右边的一堆连续随机抽取的牌。","已废弃，使用","已知","幂","平行边是无关的。","并且左子树没有访问完","并查集:","并记忆","广度优先搜索","应当满足","建立并填充哈希表","开始","开始。例如range（5）等价于range（0，","开始。默认是从","引用指向","当结尾的两个字符不同时，必然有一个要被删除，状态就可以由$dp[i","当结尾的两个字符相同时，直接不用管,由$dp[i","得到负数或是一个数减去另一个数","得到队列里的最大值，要求函数","必须是一个","思路：先二分查找，再在从找到的点展开","成员运算符","我们可以使用","我们可以知道，当$i=j=0$","或","截取","截取字符串中的一部分，遵循左闭右开原则，str[0:2]","所以一般情况下空间复杂度为o(高度)","所以到不了101","所以节点的顺序是","所使用的最少操作数","所谓匹配，是要涵盖","所需的最小替换次数是多少？","打乱排序","打乱数组","找出并返回","找到cur左子数上最右的节点，记为mostright：","找到小镇的法官","技巧总结","拆分两个链表，并返回新链表。","拆分两链表","拓扑排序","指向","指向节点。","指向节点的同时找到新对应新节点的","指针指向下一个节点，还有一个","指针指向链表中的任意节点或者","排序","排序规则，revers","描述","提示：","插入一个字符","搜索二维矩阵","搜索插入位置","搜索的低效在于没有能够很好地处理重叠子问题；动态规划虽然比较好地处理了重叠子问题，但是在有些拓扑关系比较复杂的题目面前，又显得无奈。记忆化搜索正是在这样的情况下产生的，它采用搜索的形式和动态规划中递推的思想将这两种方法有机地综合在一起，扬长避短，简单实用，在信息学中有着重要的作用。","搜索算法分类：","搜索（dfs、bfs）","摩尔投票法：摩尔投票法的核心思想为对拼消耗。首先我们考虑最基本的摩尔投票问题，比如找出一组数字序列中出现次数大于总数","操作","操作符","改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，python会帮你选择seed。","数据结构题","数组","数组中每个元素只存储单个数字。你可以假设除了整数","数组所表示的非负整数，在该数的基础上加一。最高位数字存放在数组的首位，","数组最大最小值的获取方法。","数组的逆序遍历","数论：因数个数","整个","整数","整数二分模板","整数替换","整除的最大和）。","新节点”","方法一：","方法一：·普通递归算法","方法一：哈希表","方法二：拼接+拆分","方法二：直接动态规划","方法二：记忆化递归","方法二：递归","方法需要掌握。","无论是自环边还是平行边，在很多时候也是有意义的。","时间。","时间复杂度","时间复杂度只比bfs稍差一点（虽然搜索k+1层时会重复搜索k层，但是整体而言并不比广搜慢很多）。","时间复杂度：$o(l","映射","是[0,","是一个完全平方数，则返回","是不包含第","是偶数，则用","是否匹配","是奇数，则可以用","是指在不改变其余元素顺序的情况下，通过删除一些元素或不删除任何元素而从","普通函数","普通算法：","暂存","暂存后继节点","替换一个字符","最值","最典型的，如：对于交通运输来说，从","最典型的，如：要考察一张图的连通性，那么自环边和平行边都不会改变这张图的连通性。","最初块随放在板子上，你的目标是移动块，使放置在中心方块的八个块具有相同的符号标记。只有一种类型的有效移动，即旋转四条线中的一条，每条线由七个块组成。也就是说，线中的六个块向头部移动一个块，并且头块移动到线的末端。八个可能的移动用大写字母a到h标记。图示出了两个连续的移动，移动a和移动c。","最后嵌套遍历哈希表（此时哈希表的长度是独立组合的个数，如上图中的两个独立组合）","最大单词长度乘积","最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。","最小元素求取","最小操作次数使数组元素相等","最常用的剪枝有三种，记忆化搜索、最优性剪枝、可行性剪枝。","最近迷上了旋转游戏。旋转游戏使用＃形板，可以容纳24块方块（见图）。这些块标有数字1,2和3，每种正好有8个。","最长定差子序列","有一个字符串为空串","有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。","有点像）","未形成窗口","本文档记录一些","本题有两种方法：","本题的难点在于每个链表多出了一个random指针，同过next的链表遍历无法完成random的复制。","本题目的结果只和结尾有几个9有关","本题采用逆向思维，n","朴素统计算法：","构建各新节点的","构建新节点的","构建新链表的","根左右","格式字符串","检测元素出现的次数是否满足要求","概述","模板提炼：在数组中查找一个目标数字","次操作后将","次操作，在单词","次的元素。难度：middle进阶：尝试设计时间复杂度为","正则表达式匹配","正好找到","正整数","正相关","此类推。","步长，默认为1。例如：range（0，","每个位置对于三个状态分量，即被三整除余0、1、2的数的最大和。","每列的元素从上到下升序排列。","每行的元素从左到右升序排列。","求众数ii","没有左子树","洗牌","洗牌算法","派生出来的序列。","测试题","浮点数","消掉","深度优先搜索","添加至","滑动窗口的最大值","滑动窗口：","灯泡开关","然后建立的哈希表，first是编码，second是最大长度","然后通过第二次next指针遍历来完成random指针的拷贝。","状态初始化","状态定义：","状态机","状态表示，由于是要用哈希表实现，所以状态最好可以用数字表示，常用的方法是把一个状态连写成一个","状态转移","用来自定义排序方法","用来计算在字符串中的有效python表达式,并返回一个对象","由于选择步长是2","的","的deault","的一个字符：如果我们知道","的一些小技巧和细节","的四舍五入值，如给出","的均摊时间复杂度都是","的数字（并且假设这个数字一定存在）。依次从序列里选择两个不相同的数字删除掉（或称为「抵消」），最后剩下一个数字或几个相同的数字，就是出现次数大于总数一半的那个元素。假设我们当前数组中存在次数大于总数一半的元素为","的整数数组，找出其中所有出现超过","的整数数组，每次操作将会使","的时候，其他都是不匹配的。","的时候，必然是匹配的。","的时间完成字符串比较（最坏情况下所有字符串出现频率都相同，我们需要将它们两两比较）。","的时间将字符串插入到哈希表中，以及","的最后一个字母相同","的最大值，并且这两个单词不含有公共字母。你可以认为每个单词只包含小写字母。如果不存在这样的两个单词，返回","的末尾添加字符","的正则表达式匹配。","的算法。","的编辑距离不会超过","的编辑距离为","的长度分别为","的，而不是部分字符串。","盘的形状","目录","直接返回","相关概念","相反，zip(*)","相同所需的最小步数，每步可以删除任意一个字符串中的一个字符。","相同的最少删除操作次数。","相比","省份数量","示例","空间复杂度","空间复杂度$","空间复杂度与深搜相同，却比广搜小很多","空间复杂度：$o(l","第0列dp[i][0]","第0行dp[0][j]比较特殊，需要用到状态转移。","第一次到达","第三次","第三轮，你每三个灯泡就切换一个灯泡的开关（即，打开变关闭，关闭变打开）。第","第二次","等价于","简单","简单多了","算法","算法分三步进行：","算法题","类型转换","组成的","终止条件","结束，但不包括","结果返回","给一非空的单词列表，返回前","给你一个字符串","给你一个整数数组","给你一个长度为","给你两个单词","给定一个","给定一个大小为","给定一个字符串数组","给定一个按照升序排列的整数数组","给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。","给定一个数组","给定一个正整数","给定一个由","给定两个单词","给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。","继续往下执行","维矩阵","编写一个高效的算法来搜索","编辑距离","考虑构建如下图所示的拼接链表，如此便可在访问原节点的","自定义排序","自定义比较规则","自带模板仿函数","节点处理的顺序是","节点的处理顺序是","节点间通路","若","若不同","若已形成窗口（即","若队列为空，pop_front","范围内的完全平方数个数为","获取中间8个格子中的众数情况","行","表示","表示从0开始长度为i和j的子串。","表示使$","表示字符串的平均长度，$m$","表示实际字符串种类数。哈希表和生成的排序数组空间占用均为","表示实际字符串种类数。我们需要","表示给定字符串序列的长度，$l$表示字符串的平均长度，$m$","被","被删除元素$nums[i−1]$","要返回最值的列表","解析","解释:","解释：","解释：7","解释：输入数组表示数字","解释：选出数字","计数从","计数到","计算最长公共子序列","认真记录leetcode刷题过程,c++","让其指向空","记忆化搜索=搜索的形式+动态规划的思想。","记忆化搜索概述","记忆化搜索的实现:","记忆化递归使用多余的内存空间来换取较短的递归时间","访问下一节点","该方法没有返回值，但是会对列表的对象进行排序。","详细介绍","详细介绍：","语法：","说明","请定义一个队列并实现函数","请实现函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个","请必须使用时间复杂度为","请看下一节内容。","课程表","调用递归并返回","路径压缩","跳跃游戏","转","转换为一个元组","转换为一个列表","转换为不可变集合","转换为列表","转换为可变集合","转换为字符串","转换为表达式字符串","转换成","转换来输出列表。","轮后有多少个亮着的灯泡。","轮，你只需要切换最后一个灯泡的开关。","轮，你每","输入:","输入包含不超过30个测试用例。每个测试用例只有一行包含24个数字，这些数字是初始配置中块的符号。块的行从上到下列出。对于每一行，块从左到右列出。数字用空格分隔。例如，样例输入中的第一个测试用例对应于图中的初始配置。案件之间没有空行。在结束输入的最后一个测试用例之后，有一行包含单个“0”。","输入：","输入：digit","输入：matrix","输入：n","输入：num","输出:","输出答案","输出结果","输出结果：","输出结果：hellohello","输出：\"012\"","输出：\"45\"","输出：18","输出：3","输出：4","输出：[1,2,4]","输出：true","边界状态初始化","运算后的值。","运算符","返回","返回10.0","返回2.718281828459045","返回e的x次幂(ex),如math.exp(1)","返回x的y次幂","返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。","返回一个对象","返回以10为基数的x的对数，如math.log10(100)返回","返回值","返回值：","返回值：none","返回值：最值","返回值：最值元素","返回删除后的链表的头节点。","返回原始的数字。","返回反转链表的头节点","返回大于目标值的最小值的迭代器。","返回头节点","返回数字x的平方根。","返回数字的上入整数，如math.ceil(4.1)","返回数字的下舍整数，如math.floor(4.9)返回","返回数字的绝对值，如abs(","返回数字的绝对值，如math.fabs(","返回数组随机打乱后的结果","返回新链表头节点","返回新链表的头节点","返回浮点数","返回的答案应该按单词出现频率由高到低排序。如果不同的单词有相同出现频率，按字母顺序排序。","返回结果列表","返回给定参数的最大值，参数可以为序列。","返回给定参数的最小值，参数可以为序列。","返回除法的余数","这100个整数中的一个随机整数，可以表达为：int","这一题中我们可以把word划分为两个层面：","这一题基于一个朴素的事实：答案","这两个单词为","这些字符之一","这样才能防止死循环","这样，num的值就是一个0~99中的一个随机数了。","这里我们要强调一下，s[:i]","这里提供两种遍历unordered_map的方式","这里有四点需要注意","进制数字，然后把这个数字对应的十进制数字作为状态","进行处理，这就叫先序。","进阶：不要","进阶：你可以设计并实现时间复杂度为","迭代","迭代加深搜索","迭代器遍历","逆序遍历","选择第一个元素","选择第一次到达该节点时进行打印","选择第二个元素","递减","递归一次","递归两次","递归后继节点","递归排序是所有的节点都访问3次","递归树剪枝","通过索引获取字符串中字符","遍历","那么这两堆牌加起来就是一整副牌。","重复输出字符串","重要概念：单调队列","重设数组到它的初始状态并返回","钥匙和房间","链接：https://leetcod","链表","链表模板","长度","闭区间[]","间隔遍历","队列中元素之间的关系具有单调性","队列的最大值","队首元素","队首和队尾都可以进行出队操作，只有队尾可以进行入队操作。","防空","降序，","限制：","除","除了","除以","随机字符：","随机数函数","随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。python包含以下常用随机数函数：","随机整数：","随机浮点数：","随机生成下一个实数，它在[0,1)范围内。","随机生成下一个实数，它在[x,y]范围内。","随机选取0到100间的偶数：","随机选取字符串：","难度:","难度：","需要返回","非空","面试题","题目列表","题目：","题目：240.","题目：319.","题目：453.最小操作次数使数组元素相等","题目：66.加一","题目：最长定差子序列","题解：https://leetcod","额外空间复杂度为o(1)的二叉树的遍历方式，n为二叉树的节点个数","首先我们可以统计每个字母分别在哪些数字中出现：","首先深度优先搜索k层，若没有找到可行解，再深度优先搜索k+1层，直到找到可行解为止。","首先，要通过一个表记录已经存储下的搜索结果，一般用哈希表实现","首先，题目给出了三种字符，它们分别是'*'","（1）先(根)序遍历（根左右）","（1）自环边（self","（2）中(根)序遍历（左根右）","（2）平行边（parallel","（3）后(根)序遍历（左右根）","）：将窗口最大值（即队首元素","，二者自相矛盾。","，你可以做如下操作：","，其中包含字母顺序打乱的用英文单词表示的若干数字（0","，否则返回","，如果p[j","，数组长度","，编写一个函数，如果","，设计算法来打乱一个没有重复元素的数组。","：","：则队首元素出队；","；"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Leetcode练习\n介绍\n认真记录leetcode刷题过程,C++ Python 双语言\n目录\n\n\n\n目录\n内容\n\n\n\n\nAlgorithm\n算法题\n\n\nDataStructure\n数据结构题\n\n\ntemplates\n一些题目的编程模板\n\n\ntricks\nC++/Python 的一些小技巧和细节\n\n\n\n"},"实用文档/":{"url":"实用文档/","title":"实用文档","keywords":"","body":"\nDocker\nHome Page\nDocker practice\n"},"算法题/0-DataStructure/0-Vector/加一.html":{"url":"算法题/0-DataStructure/0-Vector/加一.html","title":"加一","keywords":"","body":"题目：66.加一\n链接：https://leetcode-cn.com/problems/plus-one/\n描述\n\n给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。你可以假设除了整数 0 之外，这个整数不会以零开头。  \n\n输入：digits = [1,2,3]  \n输出：[1,2,4]  \n解释：输入数组表示数字 123。  \n\n\n\n1 \n0 \n\n相关概念\n数组的逆序遍历\nC++ 代码\nclass Solution {\npublic:\n    vector plusOne(vector& digits) {\n        int n = digits.size();\n        for (int i = n - 1; i >= 0; --i) {\n            if (digits[i] != 9) {\n                ++digits[i];\n                return digits;\n            }\n            digits[i] = 0;\n        }\n\n        // digits 中所有的元素均为 9\n        vector ans(n + 1);\n        ans[0] = 1;\n        return ans;\n    }\n};\n\npython 3 代码\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        n = len(digits)\n        for i in range(n - 1, -1, -1):\n            if digits[i] != 9:\n                digits[i] += 1\n                return digits\n            digits[j] = 0\n        # digits 中所有的元素均为 9\n        return [1] + [0] * n\n\n技巧总结\n\n本题目的结果只和结尾有几个9有关\n\n"},"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html":{"url":"算法题/0-DataStructure/0-Vector/最小操作次数使数组元素相等.html","title":"最小操作次数使数组元素相等","keywords":"","body":"题目：453.最小操作次数使数组元素相等\n链接：https://leetcode-cn.com/problems/minimum-moves-to-equal-array-elements/\n描述\n给你一个长度为 n 的整数数组，每次操作将会使 n - 1 个元素增加 1 。返回让数组所有元素相等的最小操作次数。\n\n    输入：nums = [1,2,3]\n    输出：3\n    解释：\n    只需要3次操作（注意每次操作会增加两个元素的值）：\n        [1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]\n相关概念\n数组最大最小值的获取方法。\nC++ 代码\nclass Solution {\npublic:\n\n    int minMoves(vector& nums) {\n// min_element() returns an iterator pointing to the element with the smallest value in the range [first,last).\n        int minValue = *min_element(nums.begin(),nums.end());\n        int res = 0;\n\n        for(auto num : nums){\n            res += num - minValue;\n        }\n\n        return res;\n    }\n};\n\npython 3 代码\nclass Solution:\n    def minMoves(self, nums: List[int]) -> int:\n        min_num = min(nums)\n        res = 0\n        for num in nums:\n            res += num - min_num\n        return res\n\n技巧总结\n本题采用逆向思维，n-1个元素加一等价于1个元素减一。另外python和c++的 最小元素求取 方法需要掌握。\n"},"算法题/0-DataStructure/0-Vector/求众数II.html":{"url":"算法题/0-DataStructure/0-Vector/求众数II.html","title":"求众数II","keywords":"","body":"题目：\n链接：https://leetcode-cn.com/problems/majority-element-ii/\n描述\n\n给定一个大小为 n 的整数数组，找出其中所有出现超过 ? n/3 ? 次的元素。难度：middle进阶：尝试设计时间复杂度为 O(n)、空间复杂度为 O(1)的算法解决此问题。\n\n相关概念\nC++ 代码\nclass Solution {\npublic:\n    vector majorityElement(vector& nums) {\n        vector ans;\n        int element1 = 0;\n        int element2 = 0;\n        int vote1 = 0;\n        int vote2 = 0;\n\n        for (auto & num : nums) {\n            if (vote1 > 0 && num == element1) { //如果该元素为第一个元素，则计数加1\n                vote1++;\n            } else if (vote2 > 0 && num == element2) { //如果该元素为第二个元素，则计数加1\n                vote2++;\n            } else if (vote1 == 0) { // 选择第一个元素\n                element1 = num;\n                vote1++;\n            } else if (vote2 == 0) { // 选择第二个元素\n                element2 = num;\n                vote2++;\n            } else { //如果三个元素均不相同，则相互抵消1次\n                vote1--;\n                vote2--;\n            }\n        }\n\n        int cnt1 = 0;\n        int cnt2 = 0;\n        for (auto & num : nums) {\n            if (vote1 > 0 && num == element1) {\n                cnt1++;\n            }\n            if (vote2 > 0 && num == element2) {\n                cnt2++;\n            }\n        }\n        // 检测元素出现的次数是否满足要求\n        if (vote1 > 0 && cnt1 > nums.size() / 3) {\n            ans.push_back(element1);\n        }\n        if (vote2 > 0 && cnt2 > nums.size() / 3) {\n            ans.push_back(element2);\n        }\n\n        return ans;\n    }\n};\n\npython 3 代码\nclass Solution:\n    def majorityElement(self, nums: List[int]) -> List[int]:\n        ans = []\n        element1, element2 = 0, 0\n        vote1, vote2 = 0, 0\n\n        for num in nums:\n            # 如果该元素为第一个元素，则计数加1\n            if vote1 > 0 and num == element1:\n                vote1 += 1\n            # 如果该元素为第二个元素，则计数加1\n            elif vote2 > 0 and num == element2:\n                vote2 += 1\n            # 选择第一个元素\n            elif vote1 == 0:\n                element1 = num\n                vote1 += 1\n            # 选择第二个元素\n            elif vote2 == 0:\n                element2 = num\n                vote2 += 1\n            # 如果三个元素均不相同，则相互抵消1次\n            else:\n                vote1 -= 1\n                vote2 -= 1\n\n        cnt1, cnt2 = 0, 0\n        for num in nums:\n            if vote1 > 0 and num == element1:\n                cnt1 += 1\n            if vote2 > 0 and num == element2:\n                cnt2 += 1        \n        # 检测元素出现的次数是否满足要求\n        if vote1 > 0 and cnt1 > len(nums) / 3:\n            ans.append(element1)\n        if vote2 > 0 and cnt2 > len(nums) / 3:\n            ans.append(element2)\n\n        return ans\n\n技巧总结\n朴素统计算法： 哈希表\n摩尔投票法：摩尔投票法的核心思想为对拼消耗。首先我们考虑最基本的摩尔投票问题，比如找出一组数字序列中出现次数大于总数 $\\frac{1}{2}$ 的数字（并且假设这个数字一定存在）。依次从序列里选择两个不相同的数字删除掉（或称为「抵消」），最后剩下一个数字或几个相同的数字，就是出现次数大于总数一半的那个元素。假设我们当前数组中存在次数大于总数一半的元素为 $x$，数组的总长度为 $n$，则我们可以把数组分为两部分，一部分为相同的 $k$ 个元素 $x$，另一部分为$ \\frac{n-x}{2} $ 对个不同的元素配对，此时我们假设还存在另外一个次数大于总数一半的元素 $y$，则此时 $y$ 因该满足 $y > \\frac{n}{2}$，但是按照我们之前的推理 $y$ 应当满足 $y \\le \\frac{n-k}{2}$ ，二者自相矛盾。\n"},"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html":{"url":"算法题/0-DataStructure/1-TreeNode/binary-tree/二叉树.html","title":"二叉树","keywords":"","body":"二叉树的遍历主要有三种：\n\n二叉树遍历的代码有非常强的格式性，因此很好写\n\n（1）先(根)序遍历（根左右）\n\n先序遍历一旦遇到一个节点，首先对该节点的 val 进行处理，这就叫先序。\n所以节点的顺序是 根左右\n\n（2）中(根)序遍历（左根右）\n\n中序遍历是从左孩子节点返回以后，才开始处理父节点的 val，这就叫中序。\n节点的处理顺序是 左根右\n\n（3）后(根)序遍历（左右根）\n\n后序遍历是从右孩子节点返回以后，（处理完所有孩子节点以后），才开始处理父节点的 val，这就叫后序遍历\n节点处理的顺序是 左右根\n\n"},"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html":{"url":"算法题/0-DataStructure/1-TreeNode/n-ary-tree/N叉树的最大深度.html","title":"N叉树的最大深度","keywords":"","body":"559. N 叉树的最大深度\n 简单\n\n给定一个 N 叉树，找到其最大深度。\n最大深度是指从根节点到最远叶子节点的最长路径上的节点总数。\nN 叉树输入按层序遍历序列化表示，每组子节点由空值分隔（请参见示例）。\n\n/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector children;\n\n    Node() {}\n\n    Node(int _val) {\n        val = _val;\n    }\n\n    Node(int _val, vector _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\nclass Solution {\nprivate:\n    int res = 0;\npublic:\n    void dfs(Node* root, int depth){\n        if(!root) return;\n        res = max(depth+1,res);\n        for(auto child : root->children){\n            dfs(child,depth+1);\n        }\n        return;\n    }\n    int bfs(Node* root){\n        if(!root) return 0;\n        queue qu;\n        qu.push(root);\n        while(!qu.empty()){\n            res += 1;\n            int width = qu.size();\n            for(int i = 0; i children){\n                    qu.push(child);\n                }\n            }\n        }\n    }\n    int maxDepth(Node* root) {\n        return bfs(root);\n//      dfs(root,0);\n//      return res;\n    }\n};\n\n"},"算法题/0-DataStructure/2-Graph/图论刷题.html":{"url":"算法题/0-DataStructure/2-Graph/图论刷题.html","title":"图论刷题","keywords":"","body":"概述\n\n图的问题基本就是 BFS 和 DFS，还有拓扑排序、最短路、最小生成树，有时也会用并查集进行分类，还要注意节点的入度出度等特征。\n\n拓扑排序\n\n207. 课程表\n210. 课程表 II\n\n并查集:\n\n547. 省份数量\n684. 冗余连接\n\n// https://zhuanlan.zhihu.com/p/93647900/\n#include \"bits/stdc++.h\"\n// leetcode 684\nclass Solution\n{\nprivate:\n    vector UFfactor;\n\npublic:\n    void UFunion(vector edge)\n    {\n        UFfactor[UFfind(edge[0])] = UFfind(edge[1]); // merge\n    }\n    int UFfind(int node)\n    {\n        if (UFfactor[node] == node)\n            return node;\n        else\n            return UFfactor[node] = UFfind(UFfactor[node]); // 路径压缩\n    }\n    vector findRedundantConnection(vector> &edges)\n    {\n        vector UFfactor;\n        UFfactor.resize(edges.size() + 1);\n        vector res;\n        for (int i = 0; i \n搜索（DFS、BFS）\n\n785. 判断二分图\n841. 钥匙和房间\n\n#include \"bits/stdc++.h\"\n//有向图 DFS 遍历\nusing namespace std;\n\nclass graph\n{\nprivate:\n    vector> m_adjacencyList;\n    vector visited;\n\n    void dfs(int node)\n    {\n        visited[node] = 1;\n        cout > adjacencyList)\n    {\n        m_adjacencyList = adjacencyList;\n    }\n\n    void printAllNode()\n    {\n        int numOfNode = m_adjacencyList.size();\n        visited.resize(numOfNode);\n        for (int i = 0; i > adjacencyList;\n//    graph G(adjacencyList);\n//    G.printAllNode();\n}\n\n#include \n//有向图 BFS 遍历\n//有入度、出度表\nusing namespace std;\n\nclass graph\n{\nprivate:\n    vector> m_adjacencyList;\n    vector visited;\n    vector indeg;\n    queue qu;\n    void bfs()\n    {\n        while (!qu.empty())\n        {\n            int node = qu.front();\n            visited[node] = 1;\n            qu.pop();\n            cout > adjacencyList)\n    {\n        if (!adjacencyList.size())\n            cout > adjacencyList;\n    graph G(adjacencyList);\n    G.printAllNode();\n    return 0;\n}\n\n基本概念\n\n997. 找到小镇的法官\n面试题 04.01. 节点间通路\n（1）自环边（self-loop）：一个顶点到这个顶点自身的边　　\n（2）平行边（parallel-edges）：两个顶点之间存在多条边相连接。\n\n\n\n\n无论是自环边还是平行边，在很多时候也是有意义的。\n最典型的，如：对于交通运输来说，从 A 城市到 B 城市可能有不止一条路，可能有三条路，在这种情况下，平行边就非常有意义。\n但与此同时，自环边和平行边，会加大算法设计的难度，而且在很多情况下，我们真正关心的问题，其实是和自环边 或 平行边是无关的。\n最典型的，如：要考察一张图的连通性，那么自环边和平行边都不会改变这张图的连通性。\n\n\n1306. 跳跃游戏 III\n\n"},"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html":{"url":"算法题/0-DataStructure/3-Queue/滑动窗口的最大值.html","title":"滑动窗口的最大值","keywords":"","body":"滑动窗口的最大值\n给定一个数组 nums 和滑动窗口的大小 k，请找出所有滑动窗口里的最大值。\n链接：https://leetcode-cn.com/problems/sliding-window-maximum/\n题解：https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/58rgqe/\n重要概念：单调队列\n\n队列中元素之间的关系具有单调性\n\n队首和队尾都可以进行出队操作，只有队尾可以进行入队操作。\n\n\n假如你在饭堂打饭时，有个人人高马大，急匆匆跑过来，看排了这么一长串队，心中急躁，从队列最后的一个人开始，看见好欺负的就赶走，自己站着，直到干不过的就停下，这就是单调双端队列。\n\n初始化： 双端队列 $deque $，结果列表 res ，数组长度 n ；\n滑动窗口： 左边界范围 $i \\in [1 - k, n - k]$，右边界范围$ j \\in [0, n - 1]$；\n若 i > 0 且 队首元素 $deque[0]=$ 被删除元素$nums[i−1]$ ：则队首元素出队；\n删除 $deque $内所有 $\n将 $nums[j]$ 添加至 $deque $尾部；\n若已形成窗口（即 $i \\geq 0$ ）：将窗口最大值（即队首元素 $deque[0]$）添加至列表 res ；\n\n\n返回值： 返回结果列表 res ；\n\n复杂度分析：\n时间复杂度 $O(n) $： 其中 n 为数组 $nums $长度；线性遍历 $nums $占用$ O(n) $；每个元素最多仅入队和出队一次，因此单调队列 $deque $占用 $O(2n)$ 。\n空间复杂度$ O(k)$： 双端队列 $deque $中最多同时存储 k 个元素（即窗口大小）。\n\n可以将 “未形成窗口” 和 “形成窗口后” 两个阶段拆分到两个循环里实现。代码虽变长，但减少了冗余的判断操作。\n\nclass Solution\n{\npublic:\n    vector maxSlidingWindow(vector &nums, int k)\n    {\n        if (!nums.size())\n            return {};\n        deque qu;\n        vector res = {};\n        for (int i = 0; i \nclass Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        if not nums or k == 0: return []\n        deque = collections.deque()\n        # 未形成窗口\n        for i in range(k):\n            while deque and deque[-1] \nclass Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        deque = collections.deque()\n        res, n = [], len(nums)\n        for i, j in zip(range(1 - k, n + 1 - k), range(n)):\n            # 删除 deque 中对应的 nums[i-1]\n            if i > 0 and deque[0] == nums[i - 1]:\n                deque.popleft()\n            # 保持 deque 递减\n            while deque and deque[-1] = 0:\n                res.append(deque[0])\n        return res\n\n"},"算法题/0-DataStructure/3-Queue/队列的最大值.html":{"url":"算法题/0-DataStructure/3-Queue/队列的最大值.html","title":"队列的最大值","keywords":"","body":"队列的最大值\n\n请定义一个队列并实现函数 max_value 得到队列里的最大值，要求函数 max_value、push_back 和 pop_front 的均摊时间复杂度都是 O(1)。\n若队列为空，pop_front 和 max_value 需要返回 -1\n\nhttps://leetcode-cn.com/leetbook/read/illustration-of-algorithm/e2t5ug/\n限制：\n\n1 \n1 \n\nclass MaxQueue {\nprivate:\n    queue qu;\n    deque dq;\npublic:\n    MaxQueue() {\n\n    }\n\n    int max_value() {\n        if(qu.size()){\n            return dq.front();\n        }\n        else{\n            return -1;\n        }\n    }\n\n    void push_back(int value) {\n        qu.push(value);\n        while(!dq.empty() &&value>dq.back()){\n            dq.pop_back();\n        }\n        dq.push_back(value);\n    }\n\n    int pop_front() {\n        if(!qu.size()) return -1;\n        if(qu.front()==dq.front()){\n            dq.pop_front();\n        }\n        int res = qu.front();\n        qu.pop();\n        return res;\n    }\n};\n\nimport queue\n\nclass MaxQueue:\n    def __init__(self):\n        self.queue = queue.Queue()\n        self.deque = queue.deque()\n\n    def max_value(self) -> int:\n        return self.deque[0] if self.deque else -1\n\n    def push_back(self, value: int) -> None:\n        self.queue.put(value)\n        while self.deque and self.deque[-1]  int:\n        if self.queue.empty(): return -1\n        val = self.queue.get()\n        if val == self.deque[0]:\n            self.deque.popleft()\n        return val\n\n"},"算法题/0-DataStructure/4-ListNode/链表.html":{"url":"算法题/0-DataStructure/4-ListNode/链表.html","title":"链表","keywords":"","body":"1. 反转链表\n如下图所示，题目要求将链表反转。本文介绍迭代（双指针）、递归两种实现方法。\n\n方法一： 迭代\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode *cur = head, *pre = nullptr;\n        while(cur != nullptr) {\n            ListNode* tmp = cur->next; // 暂存后继节点 cur.next\n            cur->next = pre;           // 修改 next 引用指向\n            pre = cur;                 // pre 暂存 cur\n            cur = tmp;                 // cur 访问下一节点\n        }\n        return pre;\n    }\n};\n\nclass Solution:\n    def reverseList(self, head: ListNode) -> ListNode:\n        cur, pre = head, None\n        while cur:\n            tmp = cur.next # 暂存后继节点 cur.next\n            cur.next = pre # 修改 next 引用指向\n            pre = cur      # pre 暂存 cur\n            cur = tmp      # cur 访问下一节点\n        return pre\n\n方法二：递归\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        return recur(head, nullptr);           // 调用递归并返回\n    }\nprivate:\n    ListNode* recur(ListNode* cur, ListNode* pre) {\n        if (cur == nullptr) return pre;        // 终止条件\n        ListNode* res = recur(cur->next, cur); // 递归后继节点\n        cur->next = pre;                       // 修改节点引用指向\n        return res;                            // 返回反转链表的头节点\n    }\n};\n\nclass Solution:\n    def reverseList(self, head: ListNode) -> ListNode:\n        def recur(cur, pre):\n            if not cur: return pre     # 终止条件\n            res = recur(cur.next, cur) # 递归后继节点\n            cur.next = pre             # 修改节点引用指向\n            return res                 # 返回反转链表的头节点\n\n        return recur(head, None)       # 调用递归并返回\n\n2. 复制复杂链表\n请实现函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 next 指针指向下一个节点，还有一个 random 指针指向链表中的任意节点或者 null。\n\n本题的难点在于每个链表多出了一个random指针，同过next的链表遍历无法完成random的复制。\n因为random指针可能指向一个暂时还没有创建的节点拷贝。\n为此提出两种方法：\n方法一：哈希表\n哈希表的方法即在用next指针遍历列表的时候，建立原节点和拷贝节点的对应关系。\n然后通过第二次next指针遍历来完成random指针的拷贝。\n\n时间复杂度 $O(N)$： 两轮遍历链表，使用 O(N)O(N) 时间。\n空间复杂度 $O(N)$ ： 哈希表 dic 使用线性大小的额外空间。\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        if(head == nullptr) return nullptr;\n        Node* cur = head;\n        unordered_map map;\n        // 1. 复制各节点，并建立 “原节点 -> 新节点” 的 Map 映射\n        while(cur != nullptr) {\n            map[cur] = new Node(cur->val);\n            cur = cur->next;\n        }\n        cur = head;\n        // 2. 构建新链表的 next 和 random 指向\n        while(cur != nullptr) {\n            map[cur]->next = map[cur->next];\n            map[cur]->random = map[cur->random];\n            cur = cur->next;\n        }\n        // 3. 返回新链表的头节点\n        return map[head];\n    }\n};\n\nclass Solution:\n    def copyRandomList(self, head: 'Node') -> 'Node':\n        if not head: return\n        dic = {}\n        # 1. 复制各节点，并建立 “原节点 -> 新节点” 的 Map 映射\n        cur = head\n        while cur:\n            dic[cur] = Node(cur.val)\n            cur = cur.next\n        cur = head\n        # 2. 构建新节点的 next 和 random 指向\n        while cur:\n            dic[cur].next = dic.get(cur.next)\n            dic[cur].random = dic.get(cur.random)\n            cur = cur.next\n        # 3. 返回新链表的头节点\n        return dic[head]\n\n方法二：拼接+拆分\n考虑构建如下图所示的拼接链表，如此便可在访问原节点的 random 指向节点的同时找到新对应新节点的 random 指向节点。\n\n算法分三步进行：\n\n复制节点并构建拼接链表；\n复制新链表的random指针；\n拆分两个链表，并返回新链表。\n\nclass Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        if(head == nullptr) return nullptr;\n        Node* cur = head;\n        // 1. 复制各节点，并构建拼接链表\n        while(cur != nullptr) {\n            Node* tmp = new Node(cur->val);\n            tmp->next = cur->next;\n            cur->next = tmp;\n            cur = tmp->next;\n        }\n        // 2. 构建各新节点的 random 指向\n        cur = head;\n        while(cur != nullptr) {\n            if(cur->random != nullptr)\n                cur->next->random = cur->random->next;\n            cur = cur->next->next;\n        }\n        // 3. 拆分两链表\n        cur = head->next;\n        Node* pre = head, *res = head->next;\n        while(cur->next != nullptr) {\n            pre->next = pre->next->next;\n            cur->next = cur->next->next;\n            pre = pre->next;\n            cur = cur->next;\n        }\n        pre->next = nullptr; // 单独处理原链表尾节点\n        return res;      // 返回新链表头节点\n    }\n};\n\nclass Solution:\n    def copyRandomList(self, head: 'Node') -> 'Node':\n        if not head: return\n        cur = head\n        # 1. 复制各节点，并构建拼接链表\n        while cur:\n            tmp = Node(cur.val)\n            tmp.next = cur.next\n            cur.next = tmp\n            cur = tmp.next\n        # 2. 构建各新节点的 random 指向\n        cur = head\n        while cur:\n            if cur.random:\n                cur.next.random = cur.random.next\n            cur = cur.next.next\n        # 3. 拆分两链表\n        cur = res = head.next\n        pre = head\n        while cur.next:\n            pre.next = pre.next.next\n            cur.next = cur.next.next\n            pre = pre.next\n            cur = cur.next\n        pre.next = None # 单独处理原链表尾节点\n        return res      # 返回新链表头节点\n\n"},"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html":{"url":"算法题/0-DataStructure/5-HashTable/从英文中重建数字.html","title":"从英文中重建数字","keywords":"","body":"423. 从英文中重建数字\n给你一个字符串 s ，其中包含字母顺序打乱的用英文单词表示的若干数字（0-9）。按 升序 返回原始的数字。\n示例 1：\n输入：s = \"owoztneoer\"\n输出：\"012\"\n示例 2：\n输入：s = \"fviefuro\"\n输出：\"45\"\n提示：\n\n1 5\ns[i] 为 [\"e\",\"g\",\"f\",\"i\",\"h\",\"o\",\"n\",\"s\",\"r\",\"u\",\"t\",\"w\",\"v\",\"x\",\"z\"] 这些字符之一\ns 保证是一个符合题目要求的字符串\n\nSolution\nclass Solution {\npublic:\n    string originalDigits(string s) {\n        unordered_map c;\n        for (char ch: s) {\n            ++c[ch];\n        }\n\n        vector cnt(10);\n        cnt[0] = c['z'];\n        cnt[2] = c['w'];\n        cnt[4] = c['u'];\n        cnt[6] = c['x'];\n        cnt[8] = c['g'];\n\n        cnt[3] = c['h'] - cnt[8];\n        cnt[5] = c['f'] - cnt[4];\n        cnt[7] = c['s'] - cnt[6];\n\n        cnt[1] = c['o'] - cnt[0] - cnt[2] - cnt[4];\n\n        cnt[9] = c['i'] - cnt[5] - cnt[6] - cnt[8];\n\n        string ans;\n        for (int i = 0; i \n首先我们可以统计每个字母分别在哪些数字中出现：\n\n"},"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html":{"url":"算法题/0-DataStructure/5-HashTable/最大单词长度乘积.html","title":"最大单词长度乘积","keywords":"","body":"318. 最大单词长度乘积\n给定一个字符串数组 words，找到 length(word[i]) * length(word[j]) 的最大值，并且这两个单词不含有公共字母。你可以认为每个单词只包含小写字母。如果不存在这样的两个单词，返回 0。\n示例 1:\n\n输入: [\"abcw\",\"baz\",\"foo\",\"bar\",\"xtfn\",\"abcdef\"]\n输出: 16 \n解释: 这两个单词为 \"abcw\", \"xtfn\"。\n\n示例 2:\n\n输入: [\"a\",\"ab\",\"abc\",\"d\",\"cd\",\"bcd\",\"abcd\"]\n输出: 4 \n解释: 这两个单词为 \"ab\", \"cd\"。\n\n示例 3:\n\n输入: [\"a\",\"aa\",\"aaa\",\"aaaa\"]\n输出: 0 \n解释: 不存在这样的两个单词。\n\n字符串整数编码，加哈希表同组合并。\n[“aaab”,”ab”,”aab”,”cdee”,”deedc”,”dec”]\n这一题中我们可以把word划分为两个层面：\n\nflowchart \nA0[0000 0000 0000 0011]---A1\nA1[\"ab\"]---A\nA[\"aaab\"]---B[\"ab\"]\nA[\"aaab\"]---C[\"aab\"]\nD0[0000 0000 0001 1100]---D1\nD1[\"cde\"]---D\nD[\"deedc\"]---E[\"cdee\"]\nD[\"deedc\"]---F[dec]\n\n\n先将每个字符串编码为int\n然后建立的哈希表，first是编码，second是最大长度\n最后嵌套遍历哈希表（此时哈希表的长度是独立组合的个数，如上图中的两个独立组合）\n\nclass Solution {\nprivate:\n    int string2Int(string A)\n    {\n        int res = 0;\n        for (auto a : A)\n        {\n            res |= (0x1 & words) {\n        unordered_map mp;\n        int res = 0;\n        //(chars, length)\n        for(auto word : words){\n            int temp = string2Int(word);\n            if(mp.count(temp)){\n                mp[temp] = max(mp[temp],(int)word.size());\n            }\n            else{\n                mp[temp] = word.size();\n            }\n        }\n\n        for(auto &a : mp){\n            for(auto &b : mp){\n                if(!(a.first&b.first)){\n                    res = max(res, a.second*b.second);\n                }\n            }\n        }\n        return res;\n    }\n};\n\n"},"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html":{"url":"算法题/0-DataStructure/6-UnionStructure/前k个出现次数最多的字符串.html","title":"前K个出现次数最多的字符串","keywords":"","body":"692. 前K个高频单词\n\n给一非空的单词列表，返回前 k 个出现次数最多的单词。\n\n返回的答案应该按单词出现频率由高到低排序。如果不同的单词有相同出现频率，按字母顺序排序。\n\n\n本题有两种方法：\n\n哈希表加排序\n时间复杂度：$O(l \\times n + l \\times m \\log m)$，其中 $n$ 表示给定字符串序列的长度，$l$表示字符串的平均长度，$m$ 表示实际字符串种类数。我们需要 $l \\times n$ 的时间将字符串插入到哈希表中，以及 $l \\times m \\log m$ 的时间完成字符串比较（最坏情况下所有字符串出现频率都相同，我们需要将它们两两比较）。\n空间复杂度：$O(l \\times m)$，其中 $l$ 表示字符串的平均长度，$m$ 表示实际字符串种类数。哈希表和生成的排序数组空间占用均为 $O(l \\times m)$。\n\n\n哈希表加小顶堆\n时间复杂度：$O(l \\times n + l \\times m \\log k)$\n空间复杂度：$O(l \\times (m+k))$\n\n\n\n使用 c++ 的 priority_queue 实现堆的操作\nclass Solution {\npublic:\n    typedef pair PIS;\n    vector topKFrequent(vector& words, int k) {\n        // 建立并填充哈希表\n        unordered_map mp;\n        for(auto& word : words){\n            if(mp.count(word)) mp[word] += 1;\n            else mp[word] = 1;\n        }\n\n        // 自定义比较规则\n        auto comp = [](PIS A,PIS B){\n            return A.second==B.second? A.firstB.second;\n        };\n        // 定义并维护一个长度为k的堆， 这里提供两种遍历unordered_map的方式\n        priority_queue,decltype(comp)> pq(comp);\n        for(auto &kv:mp){\n            pq.push(kv);\n            if(pq.size()>k) pq.pop();\n        }\n        // unordered_map::iterator it = mp.begin();\n        // while(it!=mp.end()){\n        //     pq.push(*it);\n        //     if(pq.size()>k){\n        //         pq.pop();\n        //     }\n        //     it++;\n        // }\n\n        // 反转一些 输出答案\n        vector ans(k);\n        while(!pq.empty()) {\n            ans[--k] = pq.top().first;\n            pq.pop();\n        }\n        return ans;\n    }\n};\n\n"},"算法题/1-Algorithm/0-Search_Algorithm/":{"url":"算法题/1-Algorithm/0-Search_Algorithm/","title":"Search Algorithm","keywords":"","body":"搜索算法分类：\n\nDFS 深度优先搜索\n\nBFS 广度优先搜索\n\n双向广度优先搜索\n\n启发式搜索\nA* 算法\n迭代加深搜索\nIDA*\n回溯法\nDancing Links\nAlpha-Beta剪枝\nDFS 优化剪枝\n最常用的剪枝有三种，记忆化搜索、最优性剪枝、可行性剪枝。\n\n\n\nA*算法\nA*（念做：A Star）算法是一种很常用的路径查找和图形遍历算法。它有较好的性能和准确度\nhttps://zhuanlan.zhihu.com/p/54510444\n启发式搜索题目\n宫水三叶的题库: \n\n迭代加深搜索\n首先深度优先搜索k层，若没有找到可行解，再深度优先搜索k+1层，直到找到可行解为止。\n优点\n\n时间复杂度只比BFS稍差一点（虽然搜索k+1层时会重复搜索k层，但是整体而言并不比广搜慢很多）。\n\n空间复杂度与深搜相同，却比广搜小很多\n\n利于剪枝\n\n\n\n例题 ：\nDescription\nAvery Boy 最近迷上了旋转游戏。旋转游戏使用＃形板，可以容纳24块方块（见图）。这些块标有数字1,2和3，每种正好有8个。\n\n最初块随放在板子上，你的目标是移动块，使放置在中心方块的八个块具有相同的符号标记。只有一种类型的有效移动，即旋转四条线中的一条，每条线由七个块组成。也就是说，线中的六个块向头部移动一个块，并且头块移动到线的末端。八个可能的移动用大写字母A到H标记。图示出了两个连续的移动，移动A和移动C。\nInput\n输入包含不超过30个测试用例。每个测试用例只有一行包含24个数字，这些数字是初始配置中块的符号。块的行从上到下列出。对于每一行，块从左到右列出。数字用空格分隔。例如，样例输入中的第一个测试用例对应于图中的初始配置。案件之间没有空行。在结束输入的最后一个测试用例之后，有一行包含单个“0”。\nOutput\n对于每个测试用例，您必须输出两行。第一行包含达到最终配置所需的所有动作。每个动作都是一个字母，从“A”到“H”，并且行中的字母之间不应有任何空格。如果不需要移动，则输出“No moves needed”。在第二行中，您必须在这些移动后输出中心方块中的块数字。如果有多种可能的解决方案，则必须输出使用最少移动次数的解决方案。如果仍有多个可能的解决方案，则必须输出字典顺序中最小的解决方案。不需要在案例之间输出空行。\nSample Input\n1 1 1 1 3 2 3 2 3 1 3 2 2 3 1 2 2 2 3 1 2 1 3 3\n1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3\n0\nSample Output\nAC\n2\nDDHH\n2\n\n#include\nusing namespace std;\nbool flag=false;\nchar finop[20];\nint reverseop[9]={5,4,7,6,1,0,3,2,-1};\nint mp[24];\nint pos[8][7]= // # 盘的形状\n{\n  { 0,2,6,11,15,20,22 },    //A\n  { 1,3,8,12,17,21,23 },    //B\n  { 10,9,8,7,6,5,4 },       //C\n  { 19,18,17,16,15,14,13 }, //D\n  { 23,21,17,12,8,3,1 },    //E\n  { 22,20,15,11,6,2,0 },    //F\n  { 13,14,15,16,17,18,19}, //G\n  { 4,5,6,7,8,9,10 }      //H\n};\nint center[8]={6,7,8,11,12,15,16,17};\n\nvoid option(int op) // 操作\n{\n    int temp=mp[pos[op][0]];\n    for (int i=0;ib;\n}\n\nint get_h(){ // 获取中间8个格子中的众数情况\n    int cnt[3]={0,0,0};\n    for (int i = 0; i maxdepth||depth+get_h()>maxdepth) //剪枝\n      return;\n    if(get_h()==0) // 正好找到\n    {\n      flag=true;\n      //输出结果\n          finop[depth]='\\0';\n          cout>mp[i];\n            if(i==0)\n            {\n               if(mp[i]==0)\n               return 0;\n            }\n         }\n         if(!get_h())\n         {//不需要移动\n             cout\n记忆化搜索概述\n搜索的低效在于没有能够很好地处理重叠子问题；动态规划虽然比较好地处理了重叠子问题，但是在有些拓扑关系比较复杂的题目面前，又显得无奈。记忆化搜索正是在这样的情况下产生的，它采用搜索的形式和动态规划中递推的思想将这两种方法有机地综合在一起，扬长避短，简单实用，在信息学中有着重要的作用。\n$$\n记忆化搜索=搜索的形式+动态规划的思想。\n$$\n记忆化搜索的实现:\n\n首先，要通过一个表记录已经存储下的搜索结果，一般用哈希表实现\n\n状态表示，由于是要用哈希表实现，所以状态最好可以用数字表示，常用的方法是把一个状态连写成一个 p 进制数字，然后把这个数字对应的十进制数字作为状态\n\n在每一状态搜索的开始，高效的使用哈希表搜索这个状态是否出现过，如果已经做过，直接调用答案，回溯\n\n如果没有，则按正常方法搜索\n\n\n"},"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html":{"url":"算法题/1-Algorithm/0-Search_Algorithm/二分查找/二分查找.html","title":"二分查找","keywords":"","body":"二分算法的模板\n\n整数二分模板\n\n\n// 将区间[l, r]划分成[l, mid] 和[mid+1, r]时\n// check 代表目标在左边\nint bsearch_1(int l, int r){\n    while(l>1;\n        if(check(mid)) r = mid;\n        else l = mid+1; //mid向下取整时，left必须加1 这样才能防止死循环\n    }\n    return l;\n}\n\n// 将区间[l, r]划分成[l, mid-1] 和[mid, r]时\n// check 代表目标在左边\nint bsearch_1(int l, int r){\n    while(l>1;\n        if(check(mid)) r = mid-1; //mid向上取整时，right必须减1 这样才能防止死循环\n        else l = mid;\n    }\n    return l;\n}\n\nleetcode 367\n\n给定一个 正整数 num ，编写一个函数，如果 num 是一个完全平方数，则返回 true ，否则返回 false 。\n进阶：不要 使用任何内置的库函数，如   sqrt 。\n\n\n在需要考虑数位的题目中，使用 python 简单多了\n\nclass Solution:\n    def isPerfectSquare(self, num: int) -> bool:\n        left, right = 0, num\n        while left  num:\n                right = mid - 1\n            else:\n                return True\n        return False\n\nleetcode 540\n"},"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html":{"url":"算法题/1-Algorithm/0-Search_Algorithm/搜索矩阵/搜索二维矩阵.html","title":"搜索二维矩阵","keywords":"","body":"题目：240. 搜索二维矩阵 II\n链接：https://leetcode-cn.com/problems/search-a-2d-matrix-ii/\n描述\n编写一个高效的算法来搜索 $m \\times n$ 维矩阵 matrix 中的一个目标值 $target $。该矩阵具有以下特性：  \n\n每行的元素从左到右升序排列。\n\n每列的元素从上到下升序排列。\n\n\n\n输入：matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5\n输出：true\n\n\n\n相关概念\nC++ 代码\nclass Solution {\npublic:\n    bool searchMatrix(vector>& matrix, int target) {\n        int m = matrix.size(), n = matrix[0].size();\n        int x = 0, y = n - 1;\n        while (x = 0) {\n            if (matrix[x][y] == target) {\n                return true;\n            }\n            if (matrix[x][y] > target) {\n                --y;\n            }\n            else {\n                ++x;\n            }\n        }\n        return false;\n    }\n};\n\npython 3 代码\nclass Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        m, n = len(matrix), len(matrix[0])\n        x, y = 0, n - 1\n        while x = 0:\n            if matrix[x][y] == target:\n                return True\n            if matrix[x][y] > target:\n                y -= 1\n            else:\n                x += 1\n        return False\n\n技巧总结\n从右上角开始，Z字形查找。\n"},"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html":{"url":"算法题/1-Algorithm/0-Search_Algorithm/记忆化搜索/整数替换.html","title":"整数替换","keywords":"","body":"397. 整数替换\n\n给定一个正整数 n ，你可以做如下操作：\n\n如果 n 是偶数，则用 n / 2替换 n 。\n如果 n 是奇数，则可以用 n + 1或 n - 1替换 n 。\nn 变为 1 所需的最小替换次数是多少？\n\n输入：n = 7\n输出：4\n解释：7 -> 8 -> 4 -> 2 -> 1\n或 7 -> 6 -> 3 -> 2 -> 1\n\n方法一：·普通递归算法\nclass Solution {\npublic:\n    int integerReplacement(int n) {\n        if (n == 1) {\n            return 0;\n        }\n        if (n % 2 == 0) {\n            return 1 + integerReplacement(n / 2);\n        }\n        return 2 + min(integerReplacement(n / 2), integerReplacement(n / 2 + 1));\n    }\n};\n\n方法二：记忆化递归\n记忆化递归使用多余的内存空间来换取较短的递归时间\n实现 递归树剪枝\n\nclass Solution {\nprivate:\n    unordered_map memo;\npublic:\n    Solution(){\n        memo.push({0,1});\n    }\n    int integerReplacement(int n) {\n        if (n == 1) return 0;\n        if (memo.count(n)) return memo[n];\n        if (n % 2 == 0)  return memo[n] = 1 + integerReplacement(n / 2);\n        return memo[n] = 2 + min(integerReplacement(n / 2), integerReplacement(n / 2 + 1));\n    }\n};\n//case 1: n 为 1 直接返回\n//case 2: n 已知 直接返回\n//case 3: n 为偶数 递归一次 并记忆\n//case 4: n 为奇数 递归两次 并记忆\n\n"},"算法题/1-Algorithm/1-Graph_Theory/tarjan.html":{"url":"算法题/1-Algorithm/1-Graph_Theory/tarjan.html","title":"Tarjan","keywords":"","body":"\n"},"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html":{"url":"算法题/1-Algorithm/2-Number_Theory/factor/灯泡开关.html","title":"灯泡开关","keywords":"","body":"题目：319. 灯泡开关\n链接：https://leetcode-cn.com/problems/bulb-switcher/\n描述\n初始时有 n 个灯泡处于关闭状态。第一轮，你将会打开所有灯泡。接下来的第二轮，你将会每两个灯泡关闭一个。\n第三轮，你每三个灯泡就切换一个灯泡的开关（即，打开变关闭，关闭变打开）。第 i 轮，你每 i 个灯泡就切换一个灯泡的开关。直到第 n 轮，你只需要切换最后一个灯泡的开关。\n找出并返回 n 轮后有多少个亮着的灯泡。\n\n相关概念\n数论：因数个数\n\n一个数的因数个数只有在该数为完全平方数的时候才是奇数。\n\nC++ 代码\nclass Solution {\npublic:\n    int bulbSwitch(int n) {\n        return sqrt(n+0.5);\n    }\n};\n\npython 3 代码\nclass Solution:\n    def bulbSwitch(self, n: int) -> int:\n        return int(sqrt(n + 0.5))\n\n技巧总结\n1-n 范围内的完全平方数个数为 sqrt(n)向下取整。\n"},"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html":{"url":"算法题/1-Algorithm/3-Dynamic_Programming/两个字符串的删除操作.html","title":"两个字符串的删除操作","keywords":"","body":"583. 两个字符串的删除操作\n 中等 \n\n给定两个单词 word1 和 word2，找到使得 word1 和 word2 相同所需的最小步数，每步可以删除任意一个字符串中的一个字符。\n方法一： 计算最长公共子序列\nclass Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        int m = word1.size();\n        int n = word2.size();\n        vector> dp(m + 1, vector(n + 1));\n\n        for (int i = 1; i \n方法二：直接动态规划\n假设字符串$\\textit{word}_1$ 和 $\\textit{word}_2$ 的长度分别为 $m$ 和 $n$，创建 $m+1$ 行 $n+1$ 列的二维数组 $\\textit{dp}$，其中 $\\textit{dp}[i][j]$ 表示使$ \\textit{word}_1[0:i]$ 和 $\\textit{word}_2[0:j]$ 相同的最少删除操作次数。\n\n当结尾的两个字符相同时，直接不用管,由$dp[i-1][j-1]$来转移。\n当结尾的两个字符不同时，必然有一个要被删除，状态就可以由$dp[i-1][j]$和$dp[i][j-1]$来转移\n\n$$ {font size=4}\n\\small dp[i][j]= \n\\begin{cases}\ndp[i-1][j-1] && word_1[i]=word_2[j]\\\nmin(dp[i-1][j],dp[i][j-1])+1 && word_1[i] \\neq word_2[j]\n\\end{cases}\n$$\nclass Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        int m = word1.size();\n        int n = word2.size();\n        vector> dp(m + 1, vector(n + 1));\n\n        for (int i = 1; i \n"},"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html":{"url":"算法题/1-Algorithm/3-Dynamic_Programming/可被三整除的最大和.html","title":"可被三整除的最大和","keywords":"","body":"题目：\n链接：https://leetcode-cn.com/problems/greatest-sum-divisible-by-three/\n描述\n\n给你一个整数数组 nums，请你找出并返回能被三整除的元素最大和。  \n示例 1： \n输入：nums = [3,6,5,1,8]  \n输出：18  \n解释：选出数字 3, 6, 1 和 8，它们的和是 18（可被 3 整除的最大和）。\n\n相关概念\n动态规划 + 状态机\n这一题基于一个朴素的事实：答案 和 nums的 长度 正相关\n状态定义：\n    每个位置对于三个状态分量，即被三整除余0、1、2的数的最大和。\nC++ 代码\nclass Solution {\npublic:\n    int maxSumDivThree(vector& nums) {\n         int N = nums.size();\n        int remainder[3] = {0};\n        for(int i = 0; i \npython 3 代码\nclass Solution:\n    def maxSumDivThree(self, nums: List[int]) -> int:\n        turntable = [0,0,0]\n        for num in nums:\n            a = turntable[0]+ num\n            b = turntable[1]+ num\n            c = turntable[2]+ num\n            turntable[a%3] = max(turntable[a%3],a)\n            turntable[b%3] = max(turntable[b%3],b)\n            turntable[c%3] = max(turntable[c%3],c)\n        return turntable[0]\n\n技巧总结\n上面的代码是做了空间复杂度优化的，用三个整型空间就存储系统的状态，每次来一个新的元素就更新状态。\n"},"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html":{"url":"算法题/1-Algorithm/3-Dynamic_Programming/最长定差子序列.html","title":"最长定差子序列","keywords":"","body":"题目：最长定差子序列\n难度: 简单\n链接：https://leetcode-cn.com/problems/longest-arithmetic-subsequence-of-given-difference/\n描述\n\n给你一个整数数组  arr  和一个整数  difference，请你找出并返回 arr  中最长等差子序列的长度，该子序列中相邻元素之间的差等于 difference 。\n子序列 是指在不改变其余元素顺序的情况下，通过删除一些元素或不删除任何元素而从 arr 派生出来的序列。\n\n相关概念\n动态规划\nunordered_map 也可以用来作为动态规划的记忆器\nC++ 代码\nclass Solution {\npublic:\n    int longestSubsequence(vector &arr, int difference) {\n        int ans = 0;\n        unordered_map dp;\n        for (int v: arr) {\n            dp[v] = dp[v - difference] + 1;\n            ans = max(ans, dp[v]);\n        }\n        return ans;\n    }\n};\n\npython 3 代码\nclass Solution:\n    def longestSubsequence(self, arr: List[int], difference: int) -> int:\n        dp = defaultdict(int)\n        for v in arr:\n            dp[v] = dp[v - difference] + 1\n        return max(dp.values())\n\n技巧总结\npython的map实现\n"},"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html":{"url":"算法题/1-Algorithm/3-Dynamic_Programming/正则表达式匹配.html","title":"正则表达式匹配","keywords":"","body":"10. 正则表达式匹配\n难度： 困难 \n给你一个字符串 s 和一个字符规律 p，请你来实现一个支持 '.' 和 '*' 的正则表达式匹配。\n'.' 匹配任意单个字符\n'*' 匹配零个或多个前面的那一个元素\n所谓匹配，是要涵盖 整个 字符串 s 的，而不是部分字符串。\n分析\n首先，题目给出了三种字符，它们分别是'*' '.' 'a-z'\n人类在观察正则表达式的时候是从左往右，在左侧能够匹配是右侧能够匹配的必要条件。\n定义状态\n因此我们可以用动态规划的方法，定义一个二维数组dp[i][j], 表示 s[:i] 和 p[:j] 是否匹配\n这里我们要强调一下，s[:i] 和 p[:j] 表示从0开始长度为i和j的子串。\n状态初始化\n对于dp[i][j] 我们可以知道，当$i=j=0$ 的时候，必然是匹配的。\ndp[0][0] = true //单独初始化\n\n第0列dp[i][0] 除了 $i=0$ 的时候，其他都是不匹配的。\ndp[i][0] = false //定义dp的时候自动赋值\n\n 第0行dp[0][j]比较特殊，需要用到状态转移。\ndp[0][j] = dp[0][j-2]&&p[j-1]=='*'\n//可以这样理解，在p[:j-3]与空字符串匹配的情况下，必须有p[j-2] 被 p[j-1] = '*' 消掉\n//至于p[j-2]是什么就不重要了\n\n\n状态转移\n初始化完成以后，需要完整的列出状态转移公式。\n对于dp[i][j] ，如果p[j-1] = '*'\n\n'*'表示0个p[j-2]字符的条件：dp[i][j-2] = true 即不需要这个'*' 和它前面的一个字符，就可以实现匹配。\n'*'表示1个p[j-2]字符：dp[i-1][j-2] = true 且 s[i-1] == p[j-2] || p[j-2] = '.'\n'*'表示n个p[j-2]字符：dp[i-1][j] = true 且 s[i-1] == p[j-2] || p[j-2] = '.'\n\n可以返现第二种情况被第三种情况涵盖了：\n​    在p[j-1]为'*'的情况下，当dp[i-1][j]为真的时候 s[i-2] 可能等于 p[j-2] 也可能不等于，即包含了'*'表示1-n个字符情况。因此可以把情况二的判别省略。\n\ndp[i][j-2] == true\ndp[i-1][j] == true && (s[i-1] == p[j-2] || p[j-2] = '.')\n\n如果p[j-1] != '*'\n\ndp[i-1][j-1] == true && (s[i-1]==p[j-1] || p[j-1]=='.')\n\n结果返回\n动态规划的结果位于dp矩阵的右下角dp[s.size()][p.size()]\n代码\nclass Solution {\npublic:\n    bool isMatch(string s, string p) {\n        //定义动态规划表\n        vector> dp(s.size()+1,vector(p.size()+1,false));\n        //初始化\n        dp[0][0] = true;\n        for(int j = 2; j \n"},"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html":{"url":"算法题/1-Algorithm/3-Dynamic_Programming/编辑距离.html","title":"编辑距离","keywords":"","body":"72. 编辑距离\n困难 \n\n\n给你两个单词 word1 和 word2，请你计算出将 word1 转换成 word2 所使用的最少操作数 。\n你可以对一个单词进行如下三种操作：\n插入一个字符\n删除一个字符\n替换一个字符\n\n\n在单词 A 中插入一个字符：如果我们知道 horse到 ro的编辑距离为 a，那么显然 horse到 ros的编辑距离不会超过 a + 1。这是因为我们可以在 a 次操作后将 horse和 ro变为相同的字符串，只需要额外的 1 次操作，在单词 A 的末尾添加字符 s，就能在 a + 1 次操作后将 horse和 ro 变为相同的字符串；\n\n在单词 B 中插入一个字符：如果我们知道hors 到 ros 的编辑距离为 b，那么显然 horse到 ros 的编辑距离不会超过 b + 1，原因同上；\n\n修改单词 A 的一个字符：如果我们知道 hors 到 ro 的编辑距离为 c，那么显然 horse到 ros 的编辑距离不会超过 c + 1，原因同上。\n\n\n若 A 和 B 的最后一个字母相同\n$$\nD[i][j]=min(D[i][j−1]+1,D[i−1][j]+1,D[i−1][j−1])\\\n=1+min(D[i][j−1],D[i−1][j],D[i−1][j−1]−1)\n$$\n若不同\n$$\nD[i][j]=1+min(D[i][j−1],D[i−1][j],D[i−1][j−1])\n$$\nclass Solution {\npublic:\n    int minDistance(string word1, string word2) {\n        int n = word1.length();\n        int m = word2.length();\n\n        // 有一个字符串为空串\n        if (n * m == 0) return n + m;\n\n        // DP 数组\n        int D[n + 1][m + 1];\n\n        // 边界状态初始化\n        for (int i = 0; i \n"},"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html":{"url":"算法题/1-Algorithm/4-Other_Algorithms/洗牌算法.html","title":"洗牌算法","keywords":"","body":"384. 打乱数组\n 中等\n\n\n给你一个整数数组 $nums$ ，设计算法来打乱一个没有重复元素的数组。\n实现 `Solution class``\n\nSolution(int[] nums) 使用整数数组 nums 初始化对象\nint[] reset() 重设数组到它的初始状态并返回\nint[] shuffle() 返回数组随机打乱后的结果\n\n\n解析 Fisher-Yates 洗牌\n假设两堆牌， 左边的一堆是从右边的一堆连续随机抽取的牌。\n那么这两堆牌加起来就是一整副牌。\n剩余的牌的顺序无所谓，因为是从它们中间随机等概率抽取新牌的。\n因此什么可以维护数组的前部和后部，然后将随机从后部中取出一张和前部的结尾互换位置。\nCPP\nclass Solution {\npublic:\n    Solution(vector& nums) {\n        this->nums = nums;\n        this->original.resize(nums.size());\n        copy(nums.begin(), nums.end(), original.begin());\n    }\n\n    vector reset() {\n        copy(original.begin(), original.end(), nums.begin());\n        return nums;\n    }\n\n    vector shuffle() {\n        for (int i = 0; i  nums;\n    vector original;\n};\n\npython\nclass Solution:\n    def __init__(self, nums: List[int]):\n        self.nums = nums\n        self.original = nums.copy()\n\n    def reset(self) -> List[int]:\n        self.nums = self.original.copy()\n        return self.nums\n\n    def shuffle(self) -> List[int]:\n        for i in range(len(self.nums)):\n            j = random.randrange(i, len(self.nums))\n            self.nums[i], self.nums[j] = self.nums[j], self.nums[i]\n        return self.nums\n\n"},"算法题/2-Templates/BinarySearch.html":{"url":"算法题/2-Templates/BinarySearch.html","title":"BinarySearch","keywords":"","body":"题目列表\n\n[34] Search for a Range\n[35] Search Insert Position\n[74] Search a 2D Matrix\n[240] Search a 2D Matrix II\n278、1a62、26、80、88、4、151\n\n例题：34. 在排序数组中查找元素的第一个和最后一个位置\n给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。如果数组中不存在目标值 target，返回 [-1, -1]。\n进阶：你可以设计并实现时间复杂度为 O(log n)的算法解决此问题吗？\n思路：先二分查找，再在从找到的点展开\nclass Solution {\npublic:\n    vector searchRange(vector& nums, int target) {\n        // 防空\n        if(!nums.size()){\n            return {-1,-1};\n        }\n\n        // 二分查找参数初始化\n        int l = 0;\n        int r = nums.size()-1;    // point 1\n        int cur = 0;\n\n        // 二分查找while循环阶段\n        // 这里有四点需要注意\n        while(l>1; //向上取整 //point 3\n            if(nums[cur]==target){\n                break;\n            }\n            else if(nums[cur]>target) r = cur - 1; //point 4\n            else l = cur + 1;                        //point 5\n        }\n        // 后处理\n        if(nums[cur] == target){\n            l = cur;\n            r = cur;\n            while(l>0&&nums[l-1]==target){\n                l--;\n            }\n            while(r\n模板提炼：在数组中查找一个目标数字\nint binarySearch(vector& nums, int target) {\n    // 防空\n    if(!nums.size()){\n        return -1;\n    }\n    // 二分查找参数初始化\n    int l = 0;\n    int r = nums.size()-1;    // point 1\n    int cur = 0;\n    // 二分查找while循环阶段\n    // 这里有四点需要注意\n    while(l>1; //向上取整 //point 3\n        if(nums[cur]==target) break;\n        else if(nums[cur]>target) r = cur - 1; //point 4\n        else l = cur + 1;                        //point 5\n    }\n    // 后处理阶段\n    if(nums[cur] == target)    return cur;\n    else return -1;\n\n测试题 35. 搜索插入位置\n给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。\n请必须使用时间复杂度为 O(log n) 的算法。\nclass Solution {\npublic:\n    int searchInsert(vector& nums, int target) {\n        // 防空\n        if(!nums.size()){\n            return 0;\n        }\n        // 二分查找参数初始化\n        int l = 0;\n        int r = nums.size()-1;    // point 1\n        int cur = 0;\n        // 二分查找while循环阶段\n        // 这里有四点需要注意\n        while(l>1; //向上取整 //point 3\n            if(nums[cur]==target) break;\n            else if(nums[cur]>target) r = cur - 1; //point 4\n            else l = cur + 1;                        //point 5\n        }\n        cout=target)? cur:cur+1;\n    }\n};\n\n"},"算法题/2-Templates/BinaryTree.html":{"url":"算法题/2-Templates/BinaryTree.html","title":"BinaryTree","keywords":"","body":"//\n// Created by dyf on 19-5-11.\n//\n/*\n * 介绍一种时间复杂度为O(N) 额外空间复杂度为O(1)的二叉树的遍历方式，N为二叉树的节点个数\n *\n * 普通算法：\n * 为了从下级回到上级要有一个堆栈用来存储返回上级的信息  所以一般情况下空间复杂度为O(高度)\n *\n * Morris算法\n * 1）如果cur无左孩子 cur向右移动cur=cur->right\n * 2) 如果cur有左孩子 找到cur左子数上最右的节点，记为mostright：\n *          如果mostright的右指针为空,让其指向cur cur向左移动 cur=cur->left\n *          如果mostright的右指针指向cur 让其指向空 cur想右移动 cur=cur->right\n *\n *\n * 如果一个树有左子树  会到达该节点2次  没有左子树 会达到该节点1次 可以说两次重合\n * 第一次到达 前序遍历\n *\n * 递归排序是所有的节点都访问3次 选择第一次到达该节点时进行打印 前序遍历 第二次 中序遍历  第三次 后序遍历\n *\n * */\n#include\n#include\n#include\n#include\n#include\n\nstruct TreeNode {\n    int val;\n    TreeNode *left;\n    TreeNode*right;\n    TreeNode(int x) :val(x), left(NULL), right(NULL) {}\n};\n\nclass Solution {\npublic:\n    void morrisIn(TreeNode*head){\n        if(head==NULL)\n            return;\n        TreeNode*cur=head;\n        TreeNode*mostRight=NULL;\n        while(cur!=NULL){\n            mostRight=cur->left;\n            if(mostRight!=NULL){//如果有左子树执行\n                while(mostRight->right!=NULL&&mostRight->right!=cur){\n                    mostRight=mostRight->right;\n                }\n                if(mostRight->right==NULL){\n                    mostRight->right=cur;\n                    cur=cur->left;\n                    continue;//相当于是cur将会有第二次访问的机会，所以这次不打印 并且左子树没有访问完 继续往下执行\n                }else\n                {\n                    mostRight->right=NULL;\n                }\n            }\n            std::coutvalright;\n        }\n        std::coutleft;\n            if(mostRight!=NULL){//如果有左子树执行\n                while(mostRight->right!=NULL&&mostRight->right!=cur){\n                    mostRight=mostRight->right;\n                }\n                if(mostRight->right==NULL){\n                    mostRight->right=cur;\n                    std::coutvalleft;\n                    continue;//相当于是cur将会有第二次访问的机会，所以这次不打印 并且左子树没有访问完 继续往下执行\n                }else\n                {\n                    mostRight->right=NULL;\n                }\n            }else\n                std::coutvalright;\n        }\n        std::coutleft;\n            if(mostRight!=NULL){//如果有左子树执行\n                while(mostRight->right!=NULL&&mostRight->right!=cur){\n                    mostRight=mostRight->right;\n                }\n                if(mostRight->right==NULL){\n                    mostRight->right=cur;\n                    cur=cur->left;\n                    continue;//相当于是cur将会有第二次访问的机会，所以这次不打印 并且左子树没有访问完 继续往下执行\n                }else\n                {\n                    mostRight->right=NULL;\n                }\n            }\n            std::coutvalright;\n        }\n        std::coutleft;\n            if(mostRight!=NULL){//如果有左子树执行\n                while(mostRight->right!=NULL&&mostRight->right!=cur){\n                    mostRight=mostRight->right;\n                }\n                if(mostRight->right==NULL){\n                    mostRight->right=cur;\n                    cur=cur->left;\n                    continue;//相当于是cur将会有第二次访问的机会，所以这次不打印 并且左子树没有访问完 继续往下执行\n                }else\n                {\n                    mostRight->right=NULL;\n                    printEdge(cur->left);\n                }\n            }\n            //std::coutvalright;\n        }\n        printEdge(head);\n        std::coutvalright;\n        }\n\n    }\n\n    //左子树右边界的逆\n    TreeNode* rightReverse(TreeNode*root){\n        TreeNode*cur=root->right;\n        TreeNode*pre=root;\n        pre->right=NULL;\n        while(cur!=NULL){\n            TreeNode*tmp=cur;\n            cur=cur->right;\n            tmp->right=pre;\n            pre=tmp;\n        }\n        return pre;\n    }\n};\n\nint main()\n{\n    TreeNode *root = new TreeNode(1);\n    TreeNode*l1 = new TreeNode(2);\n    TreeNode*l2 = new TreeNode(3);\n    TreeNode*l3 = new TreeNode(4);\n    TreeNode*l4 = new TreeNode(5);\n    TreeNode*l5= new TreeNode(7);\n    root->left = l1;\n    l1->left = l3;\n    root->right = l2;\n    l1->right = l4;\n    l2->right=l5;\n    Solution s1;\n    s1.morrisIn(root);\n    s1.morrisPre(root);\n    s1.morrisMid(root);\n    s1.morrisPos(root);\n    return 0;\n}\n\n"},"算法题/2-Templates/ListNode.html":{"url":"算法题/2-Templates/ListNode.html","title":"ListNode","keywords":"","body":"链表模板\n返回头节点\n对链表做一些操作然后返回链表头节点的题目，经常需要创建一个哨兵节点Dummy，用来记录头节点的位置。\n剑指Offer 18. 删除链表节点\n给定单向链表的头指针和一个要删除的节点的值，定义一个函数删除该节点。\n返回删除后的链表的头节点。\nclass Solution {\npublic:\n    ListNode* deleteNode(ListNode* head, int val) {\n        if(head->val == val) return head->next;\n        ListNode *pre = head, *cur = head->next;\n        while(cur != nullptr && cur->val != val) {\n            pre = cur;\n            cur = cur->next;\n        }\n        if(cur != nullptr) pre->next = cur->next;\n        return head;\n    }\n};\n\n"},"算法题/3-Tricks/cppTricks.html":{"url":"算法题/3-Tricks/cppTricks.html","title":"CppTricks","keywords":"","body":"0 说明\n本文档记录一些 C++ 刷题时常用的函数和技巧\n1 Data structure\n1.1 vector (vector in cpp)\n1.1.1 vector 排序\n//default\ntemplate \n  void sort (RandomAccessIterator first, RandomAccessIterator last);\n//custom\ntemplate \n  void sort (RandomAccessIterator first, RandomAccessIterator last, Compare comp);\n\n\n参数:\n\nfirst, last: 两个迭代器，用来指定范围\ncomp: 仿函数 用来自定义排序方法\n\n\n返回值：None\n例子：http://www.cplusplus.com/reference/algorithm/sort/\ncpp 自带模板仿函数 greater 和 less\n\ntemplate  struct greater {\n  bool operator() (const T& x, const T& y) const {return x>y;}\n  typedef T first_argument_type;\n  typedef T second_argument_type;\n  typedef bool result_type;\n};\nsort(RandomAccessIterator first, RandomAccessIterator last, greater) //由小到大排序\ntemplate  struct less {\n  bool operator() (const T& x, const T& y) const {return x) //由大到小排序\n\n自定义排序\n# 普通函数\nbool myfunction (int i,int j) { return (iB;};\n\n1.1.2 vector 最值\n#include \n#include \n\nint main(){\nvector nums = {1,2,4,3};\nint maxValue = *max_element(nums.begin(),nums.end()); // 4\nint minValue = *min_element(nums.begin(),nums.end()); // 1\nreturn 0;\n}\n\n\n参数:\n\nfirst, last: 两个迭代器，用来指定范围\ncomp: 仿函数 用来自定义排序方法\n\n\n返回值：最值元素\n例子：\n\nhttp://www.cplusplus.com/reference/algorithm/min_element/\nhttp://www.cplusplus.com/reference/algorithm/max_element/\n\n\n\n1.1.3 vector 截取\nC++容器vector的数组片段截取操作_stitching的博客-CSDN博客_c++ vector 截取\n1.2 stack (STL stack)\n1.2.1 stack 声明\ntemplate  > class stack;\n\n\nstacks are implemented as container adaptors, which are classes that use an encapsulated object of a specific container class as its underlying container, providing a specific set of member functions to access its elements. Elements are pushed/popped from the \"back\" of the specific container, which is known as the top of the stack.\nThe underlying container may be any of the standard container class templates or some other specifically designed container class. The container shall support the following operations:\n\nempty\nsize\nback\npush_back\npop_back\n\nThe standard container classes vector, deque and list fulfill these requirements. By default, if no container class is specified for a particular stack class instantiation, the standard container deque is used.\n\n1.2.2 stack 函数\n\n(constructor) Construct stack (public member function )\nempty Test whether container is empty (public member function )\nsize Return size (public member function )\ntop Access next element (public member function )\npush Insert element (public member function )\nemplace  Construct and insert element (public member function )\npop Remove top element (public member function )\nswap  Swap contents (public member function )\n\n1.3 std::string\n1.3.1 string::substr\nconstexpr basic_string_view\n    substr(size_type __pos, size_type __n = npos) const noexcept(false)\n{\n    __pos = _M_check(__pos, \"basic_string_view::substr\");\n    const size_type __rlen = std::min(__n, _M_len - __pos);\n    return basic_string_view{_M_str + __pos, __rlen};\n}\n\nParameters\n\npos\nPosition of the first character to be copied as a substring. If this is equal to the string length, the function returns an empty string. If this is greater than the string length, it throws out_of_range. Note: The first character is denoted by a value of 0 (not 1).\n\nlen\nNumber of characters to include in the substring (==if the string is shorter, as many characters as possible are used==). A value of string::npos indicates all characters until the end of the string.\n\nsize_t is an unsigned integral type (the same as member type string::size_type).\n\nReturn Value\nA string object with a substring of this object.\nExample\n// string::substr\n#include \n#include \n\nint main ()\n{\n  std::string str=\"We think in generalities, but we live in details.\";\n                                           // (quoting Alfred N. Whitehead)\n\n  std::strin-g str2 = str.substr (3,5);     // \"think\"\n\n  std::size_t pos = str.find(\"live\");      // position of \"live\" in str\n\n  std::string str3 = str.substr (pos);     // get from \"live\" to the end\n\n  std::cout \n1.4 std::priority_queue\n1.4.1 Abstract\nPriority queues are a type of container adaptors, specifically designed such that its first element is always the ==greatest== of (by default) the elements it contains, according to some strict weak ordering criterion.\nPriority queues are implemented as container adaptors, which are classes that use an encapsulated object of a specific container class as its underlying container, providing a specific set of member functions to access its elements. Elements are popped from the ==\"back\"== of the specific container, which is known as the ==top== of the priority queue.\nThe standard container classes vector and deque fulfill these the basic function requirements of priority queues. By default, if no container class is specified for a particular priority_queue class instantiation, the standard container vector is used.\n1.4.2 Template parameters\nT\n\nType of the elements. Aliased as member type priority_queue::value_type.\n\nContainer\n\nType of the internal*underlying container* object where the elements are stored.\nIts value_type shall be T. Aliased as member type priority_queue::container_type.\n\nCompare\n\nA binary predicate that takes two elements (of type T) as arguments and returns a`bool`.\nThe expression `comp(a,b)`, where comp is an object of this type and a and b are elements in the container,  **shall return `true` if a is considered to go before b in the *strict weak ordering* the function defines.**\nThe priority_queue uses this function to maintain the elements sorted in a way that preserves *heap properties* (i.e., that the element popped is the last according to this *strict weak ordering*).\nThis can be a function pointer or a function object, and **defaults to `less`**, which returns the same as applying the *less-than operator* (`a\n\n(constructor) Construct priority queue (public member function )\nempty Test whether container is empty (public member function )\nsize Return size (public member function )\ntop Access top element (public member function )\npush Insert element (public member function )\nemplace  Construct and insert element (public member function )\npop Remove top element (public member function )\nswap  Swap contents (public member function )\n\nclass student{\n    public:\n        int age;\n        string name;\n        /**重载小于操作符，\n          *这里必须是非成员函数才可以\n        */\n        friend bool operator que1;\n\n/**使用重载函数操作符的类对象*/\npriority_queue,mycmp> que2;\n\n/**定义一下比较函数*/\nauto cmp = [](const student & a,const student & b){return a.age ,decltype(cmp)> que4(cmp);\n\n/*使用函数对象来定义这个比较函数原型*/\n//lambda 函数来初始化函数对象\npriority_queue,function> que5(cmp);\n\n//函数指针来初始化函数对象\npriority_queue,function> que6(cmpfunc);\n\n/**函数对象*/\nfunction func(cmpfunc);\npriority_queue,function> que7(func);\n\n1.5 std::unordered_map\n1.5.1 unordered_map的遍历\nunordered_map mp;\n\n// 迭代器遍历\nunordered_map::iterator it;\nit = mp.begin();\nwhile(it!=mp.end()){\n    //do something\n    it++;\n}\n// for遍历\nfor(auto [key,val] : mp){\n    //do something\n}\n\n2 Functions\n2.1 rand()\nC++中rand() 函数的用法\n\nrand()不需要参数，它会返回一个从0到最大随机数的任意整数，最大随机数的大小通常是固定的一个大整数。\n如果你要产生 0~99 这100个整数中的一个随机整数，可以表达为：int num = rand() % 100; 这样，num的值就是一个0~99中的一个随机数了。\n\n3、如果要产生1~100，则是这样：int num = rand() % 100 + 1;\n4、总结来说，可以表示为：\nint num = rand() % n +a;\n// 其中的a是起始值，n-1+a是终止值，n是整数的范围。\n\n5、一般性：rand() % (b-a+1)+ a ;    就表示  a~b 之间的一个随机整数。\n6、若要产生0~1之间的小数，则可以先取得0~10的整数，然后均除以10即可得到“随机到十分位”的10个随机小数。若要得到“随机到百分位”的随机小数，则需要先得到0~100的10个整数，然后均除以100，其它情况依 此类推。\n7、通常rand()产生的随机数在每次运行的时候都是与上一次相同的，这样是为了便于程序的调试。若要产生每次不同的随机数，则可以使用srand( seed )函数进行产生随机化种子，随着seed的不同，就能够产生不同的随机数。\n8、还可以包含time.h头文件，然后使用srand(time(0))来使用当前时间使随机数发生器随机化，这样就可以保证每两次运行时可以得到不同的随机数序列，同时这要求程序的两次运行的间隔超过1秒。\n2.2 atoi()  | to_string()\n2.2.1 string 转 int\n#include \n#include \n\nusing namespace std;\n\nint main()\n{\n    char* s = \"1234\";\n    string str(\"5678\");\n\n    int intS = atoi(s);\n\n    //此写法会报错\n    //int intStr = atoi(str);\n    //需先将string转成char*\n    int intStr = atoi(str.c_str());\n\n    cout \n2.2.2 int 转 string\nto_sting();\n\n2.3 upper_bound()\n\n\n\ndefault (1)\ntemplate   ForwardIterator upper_bound (ForwardIterator first, ForwardIterator last,                               const T& val);\n\n\n\n\ncustom (2)\ntemplate   ForwardIterator upper_bound (ForwardIterator first, ForwardIterator last,const T& val, Compare comp);\n\n\n\n返回大于目标值的最小值的迭代器。\n// lower_bound/upper_bound example\n#include      // std::cout\n#include     // std::lower_bound, std::upper_bound, std::sort\n#include        // std::vector\n\nint main () {\n  int myints[] = {10,20,30,30,20,10,10,20};\n  std::vector v(myints,myints+8);           // 10 20 30 30 20 10 10 20\n\n  std::sort (v.begin(), v.end());                // 10 10 10 20 20 20 30 30\n\n  std::vector::iterator low,up;\n  low=std::lower_bound (v.begin(), v.end(), 20); //          ^\n  up= std::upper_bound (v.begin(), v.end(), 20); //                   ^\n\n  std::cout \n2.3 swap()\n// swap algorithm example (C++11)\n#include      // std::cout\n#include       // std::swap\n#include        // std::string\n\nint main () {\n\n  int x=10, y=20;                  // x:10 y:20\n  std::swap(x,y);                  // x:20 y:10\n\n  std::string s = \"012345\";\n  std::swap(s[0],s[5]);\n  for(char c : s) std::cout \n3 Grammar\n3.1 lambda函数\nhttps://www.cnblogs.com/pzhfei/archive/2013/01/14/lambda_expression.html\n3.2 类型转换\nhttps://www.cnblogs.com/sylar5/p/6638641.html\n"},"算法题/3-Tricks/pythonTricks.html":{"url":"算法题/3-Tricks/pythonTricks.html","title":"PythonTricks","keywords":"","body":"0 说明\n本文档记录一些 Python 刷题时常用的函数和技巧\nhttps://www.cnblogs.com/zhangxinqi/p/9729406.html#_label8\n1 Data structure\n1.1 list (vector in cpp)\n1.1.1 list 排序\nlist.sort(cmp=None, key=None, reverse=False)\n\n\n参数:\ncmp  可选参数, 如果指定了该参数会使用该参数的方法进行排序。\nkey  主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。\nreverse  排序规则，reverse = True 降序， reverse = False 升序（默认）。\n\n\n返回值：None\n例子：https://www.runoob.com/python/att-list-sort.html\n\n1.1.2 list 最值\nmax(list)\nmin(list)\n\n\n参数:\nlist 要返回最值的列表\n\n\n返回值：最值\n例子：\nhttps://docs.python.org/zh-cn/3.7/library/stdtypes.html#sequence-types-list-tuple-range\nhttps://www.runoob.com/python/att-list-max.html\nhttps://www.runoob.com/python/att-list-min.html\n\n\n\n1.2 Dictionary (map in cpp)\n1.2.1 Dictionary\n字典是另一种可变容器模型，且可存储任意类型对象。\n字典的每个键值 key=>value 对用冒号 : 分割，每个键值对之间用逗号 , 分割，整个字典包括在花括号 {} 中 ,格式如下所示：\nd = {key1 : value1, key2 : value2 }\n\n\n详细介绍：\nhttps://www.runoob.com/python/python-dictionary.html\n\n\n\n1.2.2 defaultdict\ndefaultdict  相比 dict 多了一个返回默认值的功能。\n#————————————————————defaultdict———————————————————\n>>> from collections import defaultdict\n>>> dic = defaultdict(int)\n>>> dic[22]    #不存在的key 返回 int 的deault value\n0\n>>> dic[22] = 22\n\n>>> dic[22]      \n22\n#———————————————————————dict———————————————————————\n>>> dic = dict()\n>>> dic[0]\nTraceback (most recent call last):\n  File \"\", line 1, in \nKeyError: 0\n\n\n详细介绍\nhttps://www.jianshu.com/p/bbd258f99fd3\n\n\n\n1.3 Stack (stack in cpp)\n1.3.1 list to stack\npython的内置数据结构list可以用来实现栈，用append()向栈顶添加元素, pop() 可以以后进先出的顺序删除元素。但是列表本身有一些缺点，主要问题就是当列表不断扩大的时候会遇到速度瓶颈．列表是动态数组，因此往其中添加新元素而没有空间保存新的元素时，它会自动重新分配内存块，并将原来的内存中的值复制到新的内存块中．这就导致了一些append()操作会消耗更多的时间。（这一点和cpp std vector 有点像）\n>>> stack = []\n>>> #append() fuction to push\n>>> stack.append('hello')\n>>> stack.append('world')\n>>> stack.append('!')\n>>> print(stack)\n['hello', 'world', '!']\n>>> #pop() function to pop element\n>>> print(stack.pop())\n!\n>>> print(stack.pop())\nworld\n>>> print(stack.pop())\nhello\nStack after all elements are poped\n>>> print(len(stack))\n0\n\n1.3.2 collections.deque to stack\npython中栈也可以用deque类实现，当我们想要在实现在容器两端更快速地进行append和pop操作时，deque比列表更合适．deque可以提供O(1)时间的append和pop操作，而列表则需要O(n)时间.\n>>> from collections import deque\n>>> stack = deque()\n>>> # append() fuction to push\n>>> stack.append('hello')\n>>> stack.append('world')\n>>> stack.append('!')\n>>> print(stack)\ndeque(['hello', 'world', '!'])\n>>> #pop() function to pop element\n>>> print(stack.pop())\n!\n>>> print(stack.pop())\nworld\n>>> print(stack.pop())\nhello\n>>> print(len(stack))\n0\n\n1.3.3 queue.LifoQueue to stack\nQueue模块有LIFO queue，也就是栈结构．用put()和get()操作从Queue中添加和获得数据\n>>> from queue import LifoQueue\n>>> stack = LifoQueue(maxsize = 3)\n>>> print(stack.qsize())\n0\n>>> stack.put('hello')\n>>> stack.put('world')\n>>> stack.put('!')\n>>> print('\\nElement poped from stack')\n>>> print(stack.get())\n!\n>>> print(stack.get())\nworld\n>>> print(stack.get())\nhello\n>>> print('\\nEmpty:', stack.empty())\nEmpty: True\n\n1.3.4 参考链接\n​    https://www.jb51.net/article/202477.htm\n2 Functions\nList sort()\nsort() 函数用于对原列表进行排序，如果指定参数，则使用比较函数指定的比较函数。\nlist.sort( key=None, reverse=False)\n\n参数\n\nkey -- 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。\nreverse -- 排序规则，reverse = True 降序， reverse = False 升序（默认）。\n\n返回值\n\n该方法没有返回值，但是会对列表的对象进行排序。\n\n参考\nhttps://www.runoob.com/python3/python3-att-list-sort.html\nhttps://docs.python.org/zh-cn/3.6/howto/sorting.html\nrange()\nrange(start, stop[, step])\n\n\n参数\nstart  计数从 start 开始。默认是从 0 开始。例如range（5）等价于range（0， 5）;\nstop  计数到 stop 结束，但不包括 stop。例如：range（0， 5） 是[0, 1, 2, 3, 4]没有5\nstep  步长，默认为1。例如：range（0， 5） 等价于 range(0, 5, 1)\n\n\n\n>>>range(5)\nrange(0, 5)\n>>> list(range(5))\n[0, 1, 2, 3, 4]\n>>> list(range(0))\n[]\n>>>list(range(0, 30, 5))\n[0, 5, 10, 15, 20, 25]\n>>> list(range(0, 10, 2)) # 间隔遍历\n[0, 2, 4, 6, 8]\n>>> list(range(0, -10, -1)) # 逆序遍历\n[0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n>>> list(range(1, 0))\n[]\n\nenumerate()\nenumerate(sequence, [start=0])\n\n参数\n\nsequence -- 一个序列、迭代器或其他支持迭代对象。\nstart -- 下标起始位置。\n\n示例\n>>>seasons = ['Spring', 'Summer', 'Fall', 'Winter']\n>>> list(enumerate(seasons))\n[(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]\n>>> list(enumerate(seasons, start=1))       # 下标从 1 开始\n[(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]\n\n使用在for循环中：\n>>>seq = ['one', 'two', 'three']\n>>> for i, element in enumerate(seq):\n...     print i, element\n... \n0 one\n1 two\n2 three\n\nrandom()\n#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n\nimport random\nimport string\n\n# 随机整数：\nprint random.randint(1,50) # 闭区间[]\n\n# 随机选取0到100间的偶数：\nprint random.randrange(0, 101, 2)#[ 由于选择步长是2 所以到不了101\n\n# 随机浮点数：\nprint random.random() # 0-1 浮点数\nprint random.uniform(1, 10) # 均匀分布浮点数\n\n# 随机字符：\nprint random.choice('abcdefghijklmnopqrstuvwxyz!@#$%^&*()')\n\n# 多个字符中生成指定数量的随机字符：\nprint random.sample('zyxwvutsrqponmlkjihgfedcba',5)\n\n# 从a-zA-Z0-9生成指定数量的随机字符：\nran_str = ''.join(random.sample(string.ascii_letters + string.digits, 8))\nprint ran_str\n\n# 多个字符中选取指定数量的字符组成新字符串：\nprint ''.join(random.sample(['z','y','x','w','v','u','t','s','r','q','p','o','n','m','l','k','j','i','h','g','f','e','d','c','b','a'], 5))\n\n# 随机选取字符串：\nprint random.choice(['剪刀', '石头', '布'])\n\n# 打乱排序\nitems = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\nprint random.shuffle(items)\n\nzip()\npython3 zip() 函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象，这样做的好处是节约了不少的内存。\n我们可以使用 list() 转换来输出列表。\n如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用 * 号操作符，可以将元组解压为列表。\nzip 语法：\nzip([iterable, ...])\n\n参数说明：\n\niterabl -- 一个或多个迭代器;\n\n返回值\n一个对象\n示例\n>>>a = [1,2,3]\n>>> b = [4,5,6]\n>>> c = [4,5,6,7,8]\n>>> zipped = zip(a,b)       # 返回一个对象\n>>> zipped\n\n>>> list(zipped)            # list() 转换为列表\n[(1, 4), (2, 5), (3, 6)]\n>>> list(zip(a,c))          # 元素个数与最短的列表一致\n[(1, 4), (2, 5), (3, 6)]\n>>> a1, a2 = zip(*zip(a,b)) # 与 zip 相反，zip(*) 可理解为解压，返回二维矩阵式\n>>> list(a1)\n[1, 2, 3]\n>>> list(a2)\n[4, 5, 6]\n>>>\n\nbisect()\nfrom bisect imoprt *\n\nbisect_left(list,target) // 与CPP的lower_bound一个意思\nbisect_right(list,target)// 与CPP的upper_bound一个意思\n\n3 Features\n交换swap\ndef swap(a,b):\n    a,b = b,a\n    print(a,b)\n\nPython数据类型转换\n有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。以下几个内置的函数可以执行数据类型之间的转换。这些函数返回一个新的对象，表示转换的值。\n\n\n\n函数\n描述\n\n\n\n\nint(x [,base])\n将x转换为一个整数\n\n\nfloat(x)\n将x转换到一个浮点数\n\n\ncomplex(real [,imag])\n创建一个复数\n\n\nstr(x)\n将对象 x 转换为字符串\n\n\nrepr(x)\n将对象 x 转换为表达式字符串\n\n\neval(str)\n用来计算在字符串中的有效Python表达式,并返回一个对象\n\n\ntuple(s)\n将序列 s 转换为一个元组\n\n\nlist(s)\n将序列 s 转换为一个列表\n\n\nset(s)\n转换为可变集合\n\n\ndict(d)\n创建一个字典。d 必须是一个 (key, value)元组序列。\n\n\nfrozenset(s)\n转换为不可变集合\n\n\nchr(x)\n将一个整数转换为一个字符\n\n\nord(x)\n将一个字符转换为它的整数值\n\n\nhex(x)\n将一个整数转换为一个十六进制字符串\n\n\noct(x)\n将一个整数转换为一个八进制字符串\n\n\n\n\nset(s) 可以用来去重\n\n>>> l = \"aajsdd\"\n>>> set(l)\n{'s', 'a', 'd', 'j'}\n>>> len(set(l))\n4\n>>> len(l)\n6\n\nPython算术运算符\n以下假设变量 a=10，变量 b=21：\n\n\n\n运算符\n描述\n实例\n\n\n\n\n+\n加 - 两个对象相加\na + b 输出结果 31\n\n\n-\n减 - 得到负数或是一个数减去另一个数\na - b 输出结果 -11\n\n\n*\n乘 - 两个数相乘或是返回一个被重复若干次的字符串\na * b 输出结果 210\n\n\n/\n除 - x 除以 y\nb / a 输出结果 2.1\n\n\n%\n取模 - 返回除法的余数\nb % a 输出结果 1\n\n\n**\n幂 - 返回x的y次幂\na**b 为10的21次方\n\n\n//\n取整除 - 向下取接近商的整数\n>>> 9//2 4 >>> -9//2 -5\n\n\n\nPython常用数学函数\n\n\n\n函数\n返回值 ( 描述 )\n\n\n\n\nabs(x)\n返回数字的绝对值，如abs(-10) 返回 10\n\n\nceil(x)\n返回数字的上入整数，如math.ceil(4.1) 返回 5\n\n\ncmp(x, y)\n如果 x  y 返回 1。 Python 3 已废弃，使用 (x>y)-(x。\n\n\nexp(x)\n返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045\n\n\nfabs(x)\n返回数字的绝对值，如math.fabs(-10) 返回10.0\n\n\nfloor(x)\n返回数字的下舍整数，如math.floor(4.9)返回 4\n\n\nlog(x)\n如math.log(math.e)返回1.0,math.log(100,10)返回2.0\n\n\nlog10(x)\n返回以10为基数的x的对数，如math.log10(100)返回 2.0\n\n\nmax(x1, x2,...)\n返回给定参数的最大值，参数可以为序列。\n\n\nmin(x1, x2,...)\n返回给定参数的最小值，参数可以为序列。\n\n\nmodf(x)\n返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。\n\n\npow(x, y)\nx**y 运算后的值。\n\n\nround(x [,n])\n返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。其实准确的说是保留值将保留到离上一位更近的一端。\n\n\nsqrt(x)\n返回数字x的平方根。\n\n\n\nPython 随机数函数\n随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。Python包含以下常用随机数函数：\n\n\n\n函数\n描述\n\n\n\n\nchoice(seq)\n从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。\n\n\nrandrange ([start,] stop [,step])\n从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1\n\n\nrandom()\n随机生成下一个实数，它在[0,1)范围内。\n\n\nseed([x])\n改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。\n\n\nshuffle(lst)\n将序列的所有元素随机排序\n\n\nuniform(x, y)\n随机生成下一个实数，它在[x,y]范围内。\n\n\n\nPython 字符串运算\n\n\n\n操作符\n描述\n实例\n\n\n\n\n+\n字符串连接\na + b 输出结果： HelloPython\n\n\n*\n重复输出字符串\na*2 输出结果：HelloHello\n\n\n[]\n通过索引获取字符串中字符\na[1] 输出结果 e\n\n\n[ : ]\n截取字符串中的一部分，遵循左闭右开原则，str[0:2] 是不包含第 3 个字符的。\na[1:4] 输出结果 ell\n\n\nin\n成员运算符 - 如果字符串中包含给定的字符返回 True\n'H' in a 输出结果 True\n\n\nnot in\n成员运算符 - 如果字符串中不包含给定的字符返回 True\n'M' not in a 输出结果 True\n\n\nr/R\n原始字符串 - 原始字符串：所有的字符串都是直接按照字面的意思来使用，没有转义特殊或不能打印的字符。 原始字符串除在字符串的第一个引号前加上字母 r（可以大小写）以外，与普通字符串有着几乎完全相同的语法。\nprint( r'\\n' ) print( R'\\n' )\n\n\n%\n格式字符串\n请看下一节内容。\n\n\n\n"}}}